// Copyright 2025 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "steps.h"
#include "witgen.h"

namespace risc0::circuit::rv32im_v2::cpu {
NondetRegStruct back_NondetReg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
// builtin NondetReg
NondetRegStruct x2 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout1, _super), distance0)};
return x2;
}
NondetRegStruct exec_NondetReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
STORE(LAYOUT_LOOKUP(layout1, _super), arg0);
NondetRegStruct x2 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout1, _super), 0)};
return x2;
}
NondetExtRegStruct back_NondetExtReg(ExecContext& ctx,Index distance0, BoundLayout<NondetExtRegLayout> layout1)   {
// builtin NondetExtReg
NondetExtRegStruct x2 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout1, _super), distance0)};
return x2;
}
NondetExtRegStruct exec_NondetExtReg(ExecContext& ctx,ExtVal arg0, BoundLayout<NondetExtRegLayout> layout1)   {
STORE_EXT(LAYOUT_LOOKUP(layout1, _super), arg0);
NondetExtRegStruct x2 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout1, _super), 0)};
return x2;
}
NondetRegStruct back_Reg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
// Reg(<preamble>:5)
NondetRegStruct x2 = back_NondetReg(ctx,distance0, layout1);
return x2;
}
NondetRegStruct exec_Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
NondetRegStruct x2 = exec_NondetReg(ctx,arg0, layout1);
// Reg(<preamble>:6)
EQZ((arg0 - x2._super), "Reg(<preamble>:6)");
return x2;
}
NondetExtRegStruct back_ExtReg(ExecContext& ctx,Index distance0, BoundLayout<NondetExtRegLayout> layout1)   {
// ExtReg(<preamble>:12)
NondetExtRegStruct x2 = back_NondetExtReg(ctx,distance0, layout1);
return x2;
}
NondetExtRegStruct exec_ExtReg(ExecContext& ctx,ExtVal arg0, BoundLayout<NondetExtRegLayout> layout1)   {
NondetExtRegStruct x2 = exec_NondetExtReg(ctx,arg0, layout1);
// builtin EqzExt
// ExtReg(<preamble>:13)
EQZ((x2._super - arg0), "loc(callsite( builtin EqzExt  at  ExtReg ( <preamble> :13:11)))");
return x2;
}
NondetRegStruct back_NondetBitReg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
NondetRegStruct x2 = back_NondetReg(ctx,distance0, layout1);
return x2;
}
NondetRegStruct exec_NondetBitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
NondetRegStruct x2 = exec_NondetReg(ctx,arg0, layout1);
// builtin Mul
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:7)
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:14)
Val x3 = (x2._super * (Val(1) - x2._super));
EQZ(x3, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at  NondetBitReg ( zirgen/circuit/rv32im/v2/dsl/bits.zir :14:13)))");
return x2;
}
NondetRegStruct back_BitReg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
NondetRegStruct x2 = back_NondetBitReg(ctx,distance0, layout1);
return x2;
}
NondetRegStruct exec_BitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
NondetRegStruct x2 = exec_NondetBitReg(ctx,arg0, layout1);
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:20)
EQZ((arg0 - x2._super), "BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:20)");
return x2;
}
NondetRegStruct exec_NondetTwitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
// NondetTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:56)
NondetRegStruct x2 = exec_NondetReg(ctx,arg0, layout1);
// builtin Mul
// AssertTwit(zirgen/circuit/rv32im/v2/dsl/bits.zir:38)
// NondetTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:57)
Val x3 = (x2._super * (Val(1) - x2._super));
Val x4 = ((x3 * (Val(2) - x2._super)) * (Val(3) - x2._super));
EQZ(x4, "loc(callsite( AssertTwit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :38:44) at  NondetTwitReg ( zirgen/circuit/rv32im/v2/dsl/bits.zir :57:14)))");
return x2;
}
NondetFakeTwitRegStruct exec_NondetFakeTwitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetFakeTwitRegLayout> layout1)   {
// NondetFakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:64)
NondetRegStruct x2 = exec_NondetBitReg(ctx,bitAnd(arg0, Val(1)), LAYOUT_LOOKUP(layout1, reg0));
// NondetFakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:65)
NondetRegStruct x3 = exec_NondetBitReg(ctx,(bitAnd(arg0, Val(2)) * Val(1006632961)), LAYOUT_LOOKUP(layout1, reg1));
// builtin Add
// NondetFakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:66)
Val x4 = ((x3._super * Val(2)) + x2._super);
return NondetFakeTwitRegStruct{
  ._super = x4};
}
FakeTwitRegStruct exec_FakeTwitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetFakeTwitRegLayout> layout1)   {
// FakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:76)
NondetFakeTwitRegStruct x2 = exec_NondetFakeTwitReg(ctx,arg0, layout1);
// FakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:77)
EQZ((arg0 - x2._super), "FakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:77)");
return FakeTwitRegStruct{
};
}
NondetRegStruct exec_IsZero(ExecContext& ctx,Val arg0, BoundLayout<IsZeroLayout> layout1)   {
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:8)
NondetRegStruct x2 = exec_NondetReg(ctx,isz(arg0), LAYOUT_LOOKUP(layout1, _super));
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:11)
NondetRegStruct x3 = exec_NondetReg(ctx,inv_0(arg0), LAYOUT_LOOKUP(layout1, inv));
// builtin Sub
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:7)
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:14)
Val x4 = (Val(1) - x2._super);
EQZ((x2._super * x4), "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at  IsZero ( zirgen/circuit/rv32im/v2/dsl/is_zero.zir :14:13)))");
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:16)
EQZ(((arg0 * x3._super) - x4), "IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:16)");
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:18)
EQZ((x2._super * arg0), "IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:18)");
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:20)
EQZ((x2._super * x3._super), "IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:20)");
return x2;
}
ArgU8Struct exec_ArgU8(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<ArgU8Layout> layout2)   {
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:9)
NondetRegStruct x3 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout2, count));
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x4 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout2, val));
// LookupDelta(zirgen/circuit/rv32im/v2/dsl/lookups.zir:4)
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:11)
INVOKE_EXTERN(ctx,lookupDelta, Val(8), x4._super, x3._super);
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x5 = (Val(1) - inRange(Val(0), x4._super, Val(256)));
INVOKE_EXTERN(ctx,assert, x5, "value out of range!");
return ArgU8Struct{
  .count = x3,   .val = x4};
}
NondetRegStruct exec_NondetU8Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU8RegLayout> layout1)   {
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
ArgU8Struct x2 = exec_ArgU8(ctx,Val(1), arg0, LAYOUT_LOOKUP(layout1, arg));
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:19)
Val x3 = (x2.count._super - Val(1));
EQZ(x3, "NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:19)");
return x2.val;
}
U8RegStruct exec_U8Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU8RegLayout> layout1)   {
// U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:26)
NondetRegStruct x2 = exec_NondetU8Reg(ctx,arg0, layout1);
// U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:27)
EQZ((x2._super - arg0), "U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:27)");
return U8RegStruct{
};
}
ArgU16Struct exec_ArgU16(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<ArgU16Layout> layout2)   {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:33)
NondetRegStruct x3 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout2, count));
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:34)
NondetRegStruct x4 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout2, val));
// LookupDelta(zirgen/circuit/rv32im/v2/dsl/lookups.zir:4)
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:35)
INVOKE_EXTERN(ctx,lookupDelta, Val(16), x4._super, x3._super);
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
Val x5 = (Val(1) - inRange(Val(0), x4._super, Val(65536)));
INVOKE_EXTERN(ctx,assert, x5, "value out of range!");
return ArgU16Struct{
  .count = x3,   .val = x4};
}
NondetU16RegStruct exec_NondetU16Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU16RegLayout> layout1)   {
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
ArgU16Struct x2 = exec_ArgU16(ctx,Val(1), arg0, LAYOUT_LOOKUP(layout1, arg));
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:43)
Val x3 = (x2.count._super - Val(1));
EQZ(x3, "NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:43)");
return NondetU16RegStruct{
  ._super = x2.val};
}
NondetU16RegStruct exec_U16Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU16RegLayout> layout1)   {
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,arg0, layout1);
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:51)
Val x3 = (x2._super._super - arg0);
EQZ(x3, "U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:51)");
return x2;
}
ToBits_5_Struct exec_ToBits_5_(ExecContext& ctx,Val arg0, BoundLayout<ToBits_5_Layout> layout1)   {
// ToBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:24)
NondetRegStruct5Array x2 = map(Val5Array{Val(0), Val(1), Val(2), Val(3), Val(4)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val5Array::value_type x3, BoundLayout<NondetRegLayout5LayoutArray::value_type> x4) {
// builtin Inv
// Div(<preamble>:19)
Val x5 = inv_0(Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]);
NondetRegStruct x6 = exec_NondetBitReg(ctx,(bitAnd(arg0, Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]) * x5), x4);
return x6;

}));
return ToBits_5_Struct{
  ._super = x2};
}
ValU32Struct exec_DynPo2(ExecContext& ctx,Val arg0, BoundLayout<DynPo2Layout> layout1)   {
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:38)
ToBits_5_Struct x2 = exec_ToBits_5_(ctx,arg0, LAYOUT_LOOKUP(layout1, low5));
// builtin Mul
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:39)
Val x3 = (x2._super[1]._super * Val(2));
Val x4 = (x2._super[2]._super * Val(4));
Val x5 = (x2._super[3]._super * Val(8));
Val x6 = (x2._super[4]._super * Val(16));
// builtin Add
Val x7 = (x2._super[0]._super + x3);
Val x8 = (((x7 + x4) + x5) + x6);
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
NondetU16RegStruct x9 = exec_NondetU16Reg(ctx,((arg0 - x8) * Val(1950351361)), LAYOUT_LOOKUP(layout1, checkU16));
// builtin Mul
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:41)
Val x10 = (x9._super._super * Val(32));
EQZ(((x10 + x8) - arg0), "DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:41)");
// builtin Mul
// CondMul(zirgen/circuit/rv32im/v2/dsl/po2.zir:33)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:42)
Val x11 = (x2._super[0]._super * Val(2));
// builtin Sub
Val x12 = (Val(1) - x2._super[0]._super);
// builtin Add
Val x13 = (x11 + x12);
// builtin Mul
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:43)
Val x14 = (x2._super[1]._super * x13);
// builtin Sub
Val x15 = (Val(1) - x2._super[1]._super);
// builtin Add
Val x16 = ((x14 * Val(4)) + (x15 * x13));
// builtin Mul
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:44)
Val x17 = (x2._super[2]._super * x16);
// builtin Sub
Val x18 = (Val(1) - x2._super[2]._super);
NondetRegStruct x19 = exec_Reg(ctx,((x17 * Val(16)) + (x18 * x16)), LAYOUT_LOOKUP(layout1, b3));
// builtin Mul
// CondMul(zirgen/circuit/rv32im/v2/dsl/po2.zir:33)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:45)
Val x20 = (x2._super[3]._super * x19._super);
// builtin Sub
Val x21 = (Val(1) - x2._super[3]._super);
// builtin Add
Val x22 = ((x20 * Val(256)) + (x21 * x19._super));
// builtin Sub
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:46)
Val x23 = (Val(1) - x2._super[4]._super);
NondetRegStruct x24 = exec_Reg(ctx,(x23 * x22), LAYOUT_LOOKUP(layout1, low));
// builtin Mul
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:47)
Val x25 = (x2._super[4]._super * x22);
NondetRegStruct x26 = exec_Reg(ctx,x25, LAYOUT_LOOKUP(layout1, high));
return ValU32Struct{
  .low = x24._super,   .high = x26._super};
}
NormalizeU32Struct exec_NormalizeU32(ExecContext& ctx,DenormedValU32Struct arg0, BoundLayout<NormalizeU32Layout> layout1)   {
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0.low, Val(65535)), LAYOUT_LOOKUP(layout1, low16));
// builtin Mul
// Div(<preamble>:19)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:45)
Val x3 = (bitAnd(arg0.low, Val(65536)) * Val(2013235201));
NondetRegStruct x4 = exec_NondetBitReg(ctx,x3, LAYOUT_LOOKUP(layout1, lowCarry));
// builtin Add
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:46)
Val x5 = ((x4._super * Val(65536)) + x2._super._super);
EQZ((arg0.low - x5), "NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:46)");
// builtin Add
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:48)
Val x6 = (arg0.high + x4._super);
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
NondetU16RegStruct x7 = exec_NondetU16Reg(ctx,bitAnd(x6, Val(65535)), LAYOUT_LOOKUP(layout1, high16));
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:51)
NondetRegStruct x8 = exec_NondetBitReg(ctx,(bitAnd(x6, Val(65536)) * Val(2013235201)), LAYOUT_LOOKUP(layout1, highCarry));
// builtin Add
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:52)
Val x9 = ((x8._super * Val(65536)) + x7._super._super);
EQZ((x6 - x9), "NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:52)");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x10 = ValU32Struct{
  .low = x2._super._super,   .high = x7._super._super};
return NormalizeU32Struct{
  ._super = x10,   .highCarry = x8};
}
AddrDecomposeStruct exec_AddrDecompose(ExecContext& ctx,ValU32Struct arg0, Val arg1_0, BoundLayout<AddrDecomposeLayout> layout2)   {
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:63)
NondetRegStruct x3 = exec_NondetTwitReg(ctx,bitAnd(arg0.low, Val(3)), LAYOUT_LOOKUP(layout2, low2));
// builtin Mul
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
Val x4 = ((Val(1) - arg1_0) * Val(49151));
// builtin Sub
Val x5 = (((arg1_0 * Val(65535)) + x4) - arg0.high);
NondetU16RegStruct x6 = exec_U16Reg(ctx,x5, LAYOUT_LOOKUP(layout2, upperDiff));
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:67)
NondetRegStruct x7 = exec_IsZero(ctx,arg0.high, LAYOUT_LOOKUP(layout2, _0));
EQZ(x7._super, "AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:67)");
// builtin Mul
// Div(<preamble>:19)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x8 = ((arg0.low - x3._super) * Val(1509949441));
NondetU16RegStruct x9 = exec_NondetU16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, med14));
// builtin Mul
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:71)
Val x10 = (x9._super._super * Val(4));
EQZ(((x10 + x3._super) - arg0.low), "AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:71)");
// builtin Add
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:73)
Val x11 = ((arg0.high * Val(16384)) + x9._super._super);
return AddrDecomposeStruct{
  ._super = x11,   .low2 = x3};
}
AddrDecomposeBitsStruct exec_AddrDecomposeBits(ExecContext& ctx,ValU32Struct arg0, Val arg1_0, BoundLayout<AddrDecomposeBitsLayout> layout2)   {
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:81)
NondetRegStruct x3 = exec_NondetBitReg(ctx,bitAnd(arg0.low, Val(1)), LAYOUT_LOOKUP(layout2, low0));
// builtin Mul
// Div(<preamble>:19)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:82)
Val x4 = (bitAnd(arg0.low, Val(2)) * Val(1006632961));
NondetRegStruct x5 = exec_NondetBitReg(ctx,x4, LAYOUT_LOOKUP(layout2, low1));
// builtin Add
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:83)
Val x6 = ((x5._super * Val(2)) + x3._super);
// builtin Mul
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
Val x7 = ((Val(1) - arg1_0) * Val(49151));
// builtin Sub
Val x8 = (((arg1_0 * Val(65535)) + x7) - arg0.high);
NondetU16RegStruct x9 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, upperDiff));
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:87)
NondetRegStruct x10 = exec_IsZero(ctx,arg0.high, LAYOUT_LOOKUP(layout2, _0));
EQZ(x10._super, "AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:87)");
// builtin Mul
// Div(<preamble>:19)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x11 = ((arg0.low - x6) * Val(1509949441));
NondetU16RegStruct x12 = exec_NondetU16Reg(ctx,x11, LAYOUT_LOOKUP(layout2, med14));
// builtin Mul
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:91)
Val x13 = (x12._super._super * Val(4));
EQZ(((x13 + x6) - arg0.low), "AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:91)");
// builtin Add
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:93)
Val x14 = ((arg0.high * Val(16384)) + x12._super._super);
return AddrDecomposeBitsStruct{
  ._super = x14,   .low0 = x3,   .low1 = x5,   .low2 = x6};
}
CmpEqualStruct exec_CmpEqual(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<CmpEqualLayout> layout2)   {
// CmpEqual(zirgen/circuit/rv32im/v2/dsl/u32.zir:112)
NondetRegStruct x3 = exec_IsZero(ctx,(arg0.low - arg1_0.low), LAYOUT_LOOKUP(layout2, lowSame));
// CmpEqual(zirgen/circuit/rv32im/v2/dsl/u32.zir:113)
NondetRegStruct x4 = exec_IsZero(ctx,(arg0.high - arg1_0.high), LAYOUT_LOOKUP(layout2, highSame));
// CmpEqual(zirgen/circuit/rv32im/v2/dsl/u32.zir:114)
NondetRegStruct x5 = exec_Reg(ctx,(x3._super * x4._super), LAYOUT_LOOKUP(layout2, isEqual));
return CmpEqualStruct{
  .isEqual = x5};
}
CmpLessThanUnsignedStruct exec_CmpLessThanUnsigned(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<CmpLessThanUnsignedLayout> layout2)   {
// builtin Sub
// SubU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:33)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
Val x3 = ((arg0.low + Val(65536)) - arg1_0.low);
Val x4 = ((arg0.high + Val(65535)) - arg1_0.high);
NormalizeU32Struct x5 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x3,   .high = x4}, LAYOUT_LOOKUP(layout2, diff));
// builtin Sub
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:120)
Val x6 = (Val(1) - x5.highCarry._super);
return CmpLessThanUnsignedStruct{
  .isLessThan = x6};
}
NondetRegStruct exec_GetSignU32(ExecContext& ctx,ValU32Struct arg0, BoundLayout<GetSignU32Layout> layout1)   {
// builtin Mul
// Div(<preamble>:19)
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:125)
Val x2 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout1, _super));
// builtin Mul
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:126)
Val x4 = (bitAnd(arg0.high, Val(32767)) * Val(2));
NondetU16RegStruct x5 = exec_NondetU16Reg(ctx,x4, LAYOUT_LOOKUP(layout1, restTimesTwo));
// builtin Mul
// Div(<preamble>:19)
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:127)
Val x6 = (x5._super._super * Val(1006632961));
// builtin Add
Val x7 = ((x3._super * Val(32768)) + x6);
EQZ((arg0.high - x7), "GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:127)");
return x3;
}
CmpLessThanStruct exec_CmpLessThan(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<CmpLessThanLayout> layout2)   {
// builtin Sub
// SubU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:33)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:133)
Val x3 = ((arg0.low + Val(65536)) - arg1_0.low);
Val x4 = ((arg0.high + Val(65535)) - arg1_0.high);
NormalizeU32Struct x5 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x3,   .high = x4}, LAYOUT_LOOKUP(layout2, diff));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:134)
NondetRegStruct x6 = exec_GetSignU32(ctx,arg0, LAYOUT_LOOKUP(layout2, s1));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:135)
NondetRegStruct x7 = exec_GetSignU32(ctx,arg1_0, LAYOUT_LOOKUP(layout2, s2));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:136)
NondetRegStruct x8 = exec_GetSignU32(ctx,x5._super, LAYOUT_LOOKUP(layout2, s3));
// builtin Mul
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:138)
Val x9 = (x6._super * (Val(1) - x7._super));
Val x10 = ((Val(1) - x6._super) * x7._super);
NondetRegStruct x11 = exec_Reg(ctx,((x9 * (Val(1) - x8._super)) + (x10 * x8._super)), LAYOUT_LOOKUP(layout2, overflow));
// builtin Mul
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:140)
Val x12 = ((x11._super * Val(2)) * x8._super);
// builtin Sub
Val x13 = ((x11._super + x8._super) - x12);
NondetRegStruct x14 = exec_Reg(ctx,x13, LAYOUT_LOOKUP(layout2, isLessThan));
return CmpLessThanStruct{
  .isLessThan = x14};
}
ToBits_16_Struct exec_ToBits_16_(ExecContext& ctx,Val arg0, BoundLayout<ToBits_16_Layout> layout1)   {
// ToBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:24)
NondetRegStruct16Array x2 = map(Val16Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val16Array::value_type x3, BoundLayout<NondetRegLayout16LayoutArray::value_type> x4) {
// builtin Inv
// Div(<preamble>:19)
Val x5 = inv_0(Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]);
NondetRegStruct x6 = exec_NondetBitReg(ctx,(bitAnd(arg0, Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]) * x5), x4);
return x6;

}));
return ToBits_16_Struct{
  ._super = x2};
}
FromBits_16_Struct exec_BitwiseAndU16(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<BitwiseAndU16Layout> layout2)   {
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:144)
ToBits_16_Struct x3 = exec_ToBits_16_(ctx,arg0, LAYOUT_LOOKUP(layout2, bitsX));
// builtin Mul
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:145)
Val x4 = (x3._super[1]._super * Val(2));
Val x5 = (x3._super[2]._super * Val(4));
Val x6 = (x3._super[3]._super * Val(8));
Val x7 = (x3._super[4]._super * Val(16));
Val x8 = (x3._super[5]._super * Val(32));
Val x9 = (x3._super[6]._super * Val(64));
Val x10 = (x3._super[7]._super * Val(128));
Val x11 = (x3._super[8]._super * Val(256));
Val x12 = (x3._super[9]._super * Val(512));
Val x13 = (x3._super[10]._super * Val(1024));
Val x14 = (x3._super[11]._super * Val(2048));
Val x15 = (x3._super[12]._super * Val(4096));
Val x16 = (x3._super[13]._super * Val(8192));
Val x17 = (x3._super[14]._super * Val(16384));
Val x18 = (x3._super[15]._super * Val(32768));
// builtin Add
Val x19 = (x3._super[0]._super + x4);
Val x20 = (((x19 + x5) + x6) + x7);
Val x21 = (((x20 + x8) + x9) + x10);
Val x22 = (((x21 + x11) + x12) + x13);
Val x23 = (((x22 + x14) + x15) + x16);
EQZ((arg0 - ((x23 + x17) + x18)), "BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:145)");
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:146)
ToBits_16_Struct x24 = exec_ToBits_16_(ctx,arg1_0, LAYOUT_LOOKUP(layout2, bitsY));
// builtin Mul
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:147)
Val x25 = (x24._super[1]._super * Val(2));
Val x26 = (x24._super[2]._super * Val(4));
Val x27 = (x24._super[3]._super * Val(8));
Val x28 = (x24._super[4]._super * Val(16));
Val x29 = (x24._super[5]._super * Val(32));
Val x30 = (x24._super[6]._super * Val(64));
Val x31 = (x24._super[7]._super * Val(128));
Val x32 = (x24._super[8]._super * Val(256));
Val x33 = (x24._super[9]._super * Val(512));
Val x34 = (x24._super[10]._super * Val(1024));
Val x35 = (x24._super[11]._super * Val(2048));
Val x36 = (x24._super[12]._super * Val(4096));
Val x37 = (x24._super[13]._super * Val(8192));
Val x38 = (x24._super[14]._super * Val(16384));
Val x39 = (x24._super[15]._super * Val(32768));
// builtin Add
Val x40 = (x24._super[0]._super + x25);
Val x41 = (((x40 + x26) + x27) + x28);
Val x42 = (((x41 + x29) + x30) + x31);
Val x43 = (((x42 + x32) + x33) + x34);
Val x44 = (((x43 + x35) + x36) + x37);
EQZ((arg1_0 - ((x44 + x38) + x39)), "BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:147)");
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x45 = (x3._super[0]._super * x24._super[0]._super);
Val x46 = (x3._super[1]._super * x24._super[1]._super);
Val x47 = (x3._super[2]._super * x24._super[2]._super);
Val x48 = (x3._super[3]._super * x24._super[3]._super);
Val x49 = (x3._super[4]._super * x24._super[4]._super);
Val x50 = (x3._super[5]._super * x24._super[5]._super);
Val x51 = (x3._super[6]._super * x24._super[6]._super);
Val x52 = (x3._super[7]._super * x24._super[7]._super);
Val x53 = (x3._super[8]._super * x24._super[8]._super);
Val x54 = (x3._super[9]._super * x24._super[9]._super);
Val x55 = (x3._super[10]._super * x24._super[10]._super);
Val x56 = (x3._super[11]._super * x24._super[11]._super);
Val x57 = (x3._super[12]._super * x24._super[12]._super);
Val x58 = (x3._super[13]._super * x24._super[13]._super);
Val x59 = (x3._super[14]._super * x24._super[14]._super);
Val x60 = (x3._super[15]._super * x24._super[15]._super);
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x61 = (((x45 + (x46 * Val(2))) + (x47 * Val(4))) + (x48 * Val(8)));
Val x62 = (((x61 + (x49 * Val(16))) + (x50 * Val(32))) + (x51 * Val(64)));
Val x63 = (((x62 + (x52 * Val(128))) + (x53 * Val(256))) + (x54 * Val(512)));
Val x64 = (((x63 + (x55 * Val(1024))) + (x56 * Val(2048))) + (x57 * Val(4096)));
Val x65 = (((x64 + (x58 * Val(8192))) + (x59 * Val(16384))) + (x60 * Val(32768)));
return FromBits_16_Struct{
  ._super = x65};
}
ValU32Struct exec_BitwiseAnd(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<BitwiseAndLayout> layout2)   {
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
FromBits_16_Struct x3 = exec_BitwiseAndU16(ctx,arg0.low, arg1_0.low, LAYOUT_LOOKUP(layout2, _0));
FromBits_16_Struct x4 = exec_BitwiseAndU16(ctx,arg0.high, arg1_0.high, LAYOUT_LOOKUP(layout2, _1));
return ValU32Struct{
  .low = x3._super,   .high = x4._super};
}
ValU32Struct exec_BitwiseOr(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<BitwiseOrLayout> layout2)   {
// BitwiseOr(zirgen/circuit/rv32im/v2/dsl/u32.zir:159)
ValU32Struct x3 = exec_BitwiseAnd(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, andXy));
// builtin Sub
// BitwiseOr(zirgen/circuit/rv32im/v2/dsl/u32.zir:160)
Val x4 = ((arg0.low + arg1_0.low) - x3.low);
Val x5 = ((arg0.high + arg1_0.high) - x3.high);
return ValU32Struct{
  .low = x4,   .high = x5};
}
ValU32Struct exec_BitwiseXor(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<BitwiseXorLayout> layout2)   {
// BitwiseXor(zirgen/circuit/rv32im/v2/dsl/u32.zir:164)
ValU32Struct x3 = exec_BitwiseAnd(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, andXy));
// builtin Sub
// BitwiseXor(zirgen/circuit/rv32im/v2/dsl/u32.zir:165)
Val x4 = ((arg0.low + arg1_0.low) - (x3.low * Val(2)));
Val x5 = ((arg0.high + arg1_0.high) - (x3.high * Val(2)));
return ValU32Struct{
  .low = x4,   .high = x5};
}
DecoderStruct exec_Decoder(ExecContext& ctx,ValU32Struct arg0, BoundLayout<DecoderLayout> layout1)   {
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:15)
Val x2 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout1, _f7_6));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:16)
Val x4 = (bitAnd(arg0.high, Val(24576)) * Val(2013020161));
NondetRegStruct x5 = exec_NondetTwitReg(ctx,x4, LAYOUT_LOOKUP(layout1, _f7_45));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:17)
Val x6 = (bitAnd(arg0.high, Val(6144)) * Val(2012282881));
NondetRegStruct x7 = exec_NondetTwitReg(ctx,x6, LAYOUT_LOOKUP(layout1, _f7_23));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:18)
Val x8 = (bitAnd(arg0.high, Val(1536)) * Val(2009333761));
NondetRegStruct x9 = exec_NondetTwitReg(ctx,x8, LAYOUT_LOOKUP(layout1, _f7_01));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:19)
Val x10 = (bitAnd(arg0.high, Val(384)) * Val(1997537281));
NondetRegStruct x11 = exec_NondetTwitReg(ctx,x10, LAYOUT_LOOKUP(layout1, _rs2_34));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:20)
Val x12 = (bitAnd(arg0.high, Val(96)) * Val(1950351361));
NondetRegStruct x13 = exec_NondetTwitReg(ctx,x12, LAYOUT_LOOKUP(layout1, _rs2_12));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:21)
Val x14 = (bitAnd(arg0.high, Val(16)) * Val(1887436801));
NondetRegStruct x15 = exec_NondetBitReg(ctx,x14, LAYOUT_LOOKUP(layout1, _rs2_0));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:22)
Val x16 = (bitAnd(arg0.high, Val(12)) * Val(1509949441));
NondetRegStruct x17 = exec_NondetTwitReg(ctx,x16, LAYOUT_LOOKUP(layout1, _rs1_34));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:23)
NondetRegStruct x18 = exec_NondetTwitReg(ctx,bitAnd(arg0.high, Val(3)), LAYOUT_LOOKUP(layout1, _rs1_12));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:24)
Val x19 = (bitAnd(arg0.low, Val(32768)) * Val(2013204481));
NondetRegStruct x20 = exec_NondetBitReg(ctx,x19, LAYOUT_LOOKUP(layout1, _rs1_0));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:25)
Val x21 = (bitAnd(arg0.low, Val(16384)) * Val(2013143041));
NondetRegStruct x22 = exec_NondetBitReg(ctx,x21, LAYOUT_LOOKUP(layout1, _f3_2));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:26)
Val x23 = (bitAnd(arg0.low, Val(12288)) * Val(2012774401));
NondetRegStruct x24 = exec_NondetTwitReg(ctx,x23, LAYOUT_LOOKUP(layout1, _f3_01));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:27)
Val x25 = (bitAnd(arg0.low, Val(3072)) * Val(2011299841));
NondetRegStruct x26 = exec_NondetTwitReg(ctx,x25, LAYOUT_LOOKUP(layout1, _rd_34));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:28)
Val x27 = (bitAnd(arg0.low, Val(768)) * Val(2005401601));
NondetRegStruct x28 = exec_NondetTwitReg(ctx,x27, LAYOUT_LOOKUP(layout1, _rd_12));
// builtin Mul
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:29)
Val x29 = (bitAnd(arg0.low, Val(128)) * Val(1997537281));
NondetRegStruct x30 = exec_NondetBitReg(ctx,x29, LAYOUT_LOOKUP(layout1, _rd_0));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:34)
NondetRegStruct x31 = exec_NondetReg(ctx,bitAnd(arg0.low, Val(127)), LAYOUT_LOOKUP(layout1, opcode));
// builtin Add
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:37)
Val x32 = ((x3._super * Val(32768)) + (x5._super * Val(8192)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:39)
Val x33 = ((x32 + (x7._super * Val(2048))) + (x9._super * Val(512)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:41)
Val x34 = ((x33 + (x11._super * Val(128))) + (x13._super * Val(32)));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:44)
Val x35 = (x17._super * Val(4));
// builtin Add
Val x36 = (((x34 + (x15._super * Val(16))) + x35) + x18._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:37)
EQZ((arg0.high - x36), "Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:37)");
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:46)
Val x37 = (x20._super * Val(32768));
// builtin Add
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:47)
Val x38 = ((x37 + (x22._super * Val(16384))) + (x24._super * Val(4096)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:49)
Val x39 = ((x38 + (x26._super * Val(1024))) + (x28._super * Val(256)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:46)
Val x40 = (arg0.low - ((x39 + (x30._super * Val(128))) + x31._super));
EQZ(x40, "Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:46)");
// builtin Add
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:55)
Val x41 = ((x17._super * Val(8)) + (x18._super * Val(2)));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:56)
Val x42 = (x11._super * Val(8));
Val x43 = (x13._super * Val(2));
// builtin Add
Val x44 = ((x42 + x43) + x15._super);
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:57)
Val x45 = (x26._super * Val(8));
Val x46 = (x28._super * Val(2));
// builtin Add
Val x47 = ((x45 + x46) + x30._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:58)
Val x48 = ((x5._super * Val(16)) + (x7._super * Val(4)));
Val x49 = (x48 + x9._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:59)
Val x50 = ((x3._super * Val(64)) + x49);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:60)
Val x51 = ((x22._super * Val(4)) + x24._super);
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:66)
Val x52 = (x3._super * Val(61440));
// builtin Add
Val x53 = (x52 + (x50 * Val(32)));
// builtin Mul
Val x54 = (x3._super * Val(65535));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:68)
Val x55 = (x49 * Val(32));
// builtin Add
Val x56 = (((x52 + (x30._super * Val(2048))) + x55) + x45);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:71)
Val x57 = ((x37 + (x51 * Val(4096))) + (x15._super * Val(2048)));
Val x58 = (((x57 + x55) + x42) + x43);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:72)
Val x59 = ((x3._super * Val(65520)) + x35);
return DecoderStruct{
  .opcode = x31,   .rs1 = (x41 + x20._super),   .rs2 = x44,   .rd = x47,   .func7 = x50,   .func3 = x51,   .immI = ValU32Struct{
  .low = (x53 + x44),   .high = x54},   .immS = ValU32Struct{
  .low = (x53 + x47),   .high = x54},   .immB = ValU32Struct{
  .low = (x56 + x46),   .high = x54},   .immU = ValU32Struct{
  .low = x38,   .high = arg0.high},   .immJ = ValU32Struct{
  .low = x58,   .high = (x59 + x18._super)}};
}
MemoryArgStruct exec_MemoryArg(ExecContext& ctx,Val arg0, Val arg1_0, Val arg2_0, ValU32Struct arg3, BoundLayout<MemoryArgLayout> layout4)   {
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:25)
NondetRegStruct x5 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout4, count));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:26)
NondetRegStruct x6 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout4, addr));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:27)
NondetRegStruct x7 = exec_NondetReg(ctx,arg2_0, LAYOUT_LOOKUP(layout4, cycle));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:28)
NondetRegStruct x8 = exec_NondetReg(ctx,arg3.low, LAYOUT_LOOKUP(layout4, dataLow));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:29)
NondetRegStruct x9 = exec_NondetReg(ctx,arg3.high, LAYOUT_LOOKUP(layout4, dataHigh));
// MemoryDelta(zirgen/circuit/rv32im/v2/dsl/mem.zir:21)
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:30)
INVOKE_EXTERN(ctx,memoryDelta, x6._super, x7._super, x8._super, x9._super, x5._super);
return MemoryArgStruct{
  .count = x5,   .addr = x6,   .cycle = x7,   .dataLow = x8,   .dataHigh = x9};
}
CycleArgStruct exec_CycleArg(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<CycleArgLayout> layout2)   {
// CycleArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:54)
NondetRegStruct x3 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout2, count));
// CycleArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:55)
NondetRegStruct x4 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout2, cycle));
// LookupDelta(zirgen/circuit/rv32im/v2/dsl/lookups.zir:4)
// CycleArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:56)
INVOKE_EXTERN(ctx,lookupDelta, Val(0), x4._super, x3._super);
return CycleArgStruct{
  .count = x3,   .cycle = x4};
}
IsCycleStruct exec_IsCycle(ExecContext& ctx,Val arg0, BoundLayout<IsCycleLayout> layout1)   {
// IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:60)
CycleArgStruct x2 = exec_CycleArg(ctx,Val(1), arg0, LAYOUT_LOOKUP(layout1, arg));
// IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:61)
Val x3 = (x2.count._super - Val(1));
EQZ(x3, "IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:61)");
// IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:62)
Val x4 = (x2.cycle._super - arg0);
EQZ(x4, "IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:62)");
return IsCycleStruct{
};
}
MemoryIOStruct exec_MemoryIO(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<MemoryIOLayout> layout2)   {
// GetMemoryTxn(zirgen/circuit/rv32im/v2/dsl/mem.zir:51)
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:66)
auto [x3, x4, x5, x6, x7] = INVOKE_EXTERN(ctx,getMemoryTxn, arg1_0);
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:67)
MemoryArgStruct x8 = exec_MemoryArg(ctx,Val(2013265920), arg1_0, x3, ValU32Struct{
  .low = x4,   .high = x5}, LAYOUT_LOOKUP(layout2, oldTxn));
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:68)
MemoryArgStruct x9 = exec_MemoryArg(ctx,Val(1), arg1_0, arg0, ValU32Struct{
  .low = x6,   .high = x7}, LAYOUT_LOOKUP(layout2, newTxn));
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:69)
Val x10 = (x8.count._super - Val(2013265920));
EQZ(x10, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:69)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:70)
Val x11 = (x9.count._super - Val(1));
EQZ(x11, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:70)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:71)
Val x12 = (x9.cycle._super - arg0);
EQZ(x12, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:71)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:73)
Val x13 = (x8.addr._super - x9.addr._super);
EQZ(x13, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:73)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:74)
Val x14 = (x9.addr._super - arg1_0);
EQZ(x14, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:74)");
return MemoryIOStruct{
  .oldTxn = x8,   .newTxn = x9};
}
IsForwardStruct exec_IsForward(ExecContext& ctx,MemoryIOStruct arg0, BoundLayout<IsForwardLayout> layout1)   {
// builtin Sub
// IsForward(zirgen/circuit/rv32im/v2/dsl/mem.zir:84)
Val x2 = (arg0.newTxn.cycle._super - Val(1));
IsCycleStruct x3 = exec_IsCycle(ctx,(x2 - arg0.oldTxn.cycle._super), LAYOUT_LOOKUP(layout1, _0));
return IsForwardStruct{
};
}
GetDataStruct exec_MemoryRead(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryReadLayout> layout2)   {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:89)
MemoryIOStruct x3 = exec_MemoryIO(ctx,(arg0._super * Val(2)), arg1_0, LAYOUT_LOOKUP(layout2, io));
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:79)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:90)
Val x4 = (x3.oldTxn.dataLow._super - x3.newTxn.dataLow._super);
EQZ(x4, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :79:22) at  MemoryRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :90:10)))");
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:80)
Val x5 = (x3.oldTxn.dataHigh._super - x3.newTxn.dataHigh._super);
EQZ(x5, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :80:23) at  MemoryRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :90:10)))");
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:91)
IsForwardStruct x6 = exec_IsForward(ctx,x3, LAYOUT_LOOKUP(layout2, _0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
ValU32Struct x7 = ValU32Struct{
  .low = x3.newTxn.dataLow._super,   .high = x3.newTxn.dataHigh._super};
return GetDataStruct{
  ._super = x7,   .diffLow = Val(0),   .diffHigh = Val(1)};
}
MemoryWriteStruct exec_MemoryWrite(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, ValU32Struct arg2_0, BoundLayout<MemoryWriteLayout> layout3)   {
// builtin Add
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:97)
Val x4 = ((arg0._super * Val(2)) + Val(1));
MemoryIOStruct x5 = exec_MemoryIO(ctx,x4, arg1_0, LAYOUT_LOOKUP(layout3, io));
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:98)
IsForwardStruct x6 = exec_IsForward(ctx,x5, LAYOUT_LOOKUP(layout3, _0));
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:99)
Val x7 = (x5.newTxn.dataLow._super - arg2_0.low);
EQZ(x7, "MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:99)");
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:100)
Val x8 = (x5.newTxn.dataHigh._super - arg2_0.high);
EQZ(x8, "MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:100)");
return MemoryWriteStruct{
};
}
MemoryWriteUnconstrainedStruct exec_MemoryWriteUnconstrained(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryWriteUnconstrainedLayout> layout2)   {
// builtin Add
// MemoryWriteUnconstrained(zirgen/circuit/rv32im/v2/dsl/mem.zir:105)
Val x3 = ((arg0._super * Val(2)) + Val(1));
MemoryIOStruct x4 = exec_MemoryIO(ctx,x3, arg1_0, LAYOUT_LOOKUP(layout2, io));
// MemoryWriteUnconstrained(zirgen/circuit/rv32im/v2/dsl/mem.zir:106)
IsForwardStruct x5 = exec_IsForward(ctx,x4, LAYOUT_LOOKUP(layout2, _0));
return MemoryWriteUnconstrainedStruct{
  .io = x4};
}
GetDataStruct exec_MemoryPageIn(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryPageInLayout> layout2)   {
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:112)
MemoryIOStruct x3 = exec_MemoryIO(ctx,(arg0._super * Val(2)), arg1_0, LAYOUT_LOOKUP(layout2, io));
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:79)
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:113)
Val x4 = (x3.oldTxn.dataLow._super - x3.newTxn.dataLow._super);
EQZ(x4, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :79:22) at  MemoryPageIn ( zirgen/circuit/rv32im/v2/dsl/mem.zir :113:10)))");
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:80)
Val x5 = (x3.oldTxn.dataHigh._super - x3.newTxn.dataHigh._super);
EQZ(x5, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :80:23) at  MemoryPageIn ( zirgen/circuit/rv32im/v2/dsl/mem.zir :113:10)))");
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
Val x6 = (x3.newTxn.cycle._super - x3.oldTxn.cycle._super);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x7 = ValU32Struct{
  .low = x3.newTxn.dataLow._super,   .high = x3.newTxn.dataHigh._super};
return GetDataStruct{
  ._super = x7,   .diffLow = Val(0),   .diffHigh = x6};
}
GetDataStruct exec_MemoryPageOut(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryPageOutLayout> layout2)   {
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:120)
MemoryIOStruct x3 = exec_MemoryIO(ctx,(arg0._super * Val(2)), arg1_0, LAYOUT_LOOKUP(layout2, io));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:121)
IsForwardStruct x4 = exec_IsForward(ctx,x3, LAYOUT_LOOKUP(layout2, _0));
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
Val x5 = (x3.newTxn.dataLow._super - x3.oldTxn.dataLow._super);
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x6 = (x3.newTxn.dataHigh._super - x3.oldTxn.dataHigh._super);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x7 = ValU32Struct{
  .low = x3.oldTxn.dataLow._super,   .high = x3.oldTxn.dataHigh._super};
return GetDataStruct{
  ._super = x7,   .diffLow = x5,   .diffHigh = x6};
}
OneHot_3_Struct exec_OneHot_3_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_3_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct3Array x2 = map(Val3Array{Val(0), Val(1), Val(2)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val3Array::value_type x3, BoundLayout<NondetRegLayout3LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// builtin Add
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
EQZ(((x6 + x2[2]._super) - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// builtin Mul
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x7 = (x2[2]._super * Val(2));
// builtin Add
Val x8 = (x2[1]._super + x7);
EQZ((x8 - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_3_Struct{
  ._super = x2};
}
GetDataStruct exec_MemoryGet(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, OneHot_3_Struct arg2_0, BoundLayout<MemoryGetLayout> layout3)   {
GetDataStruct x4;
if (to_size_t(arg2_0._super[0]._super)) {
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout3, _super.arm0));
x4 = x5;
} else if (to_size_t(arg2_0._super[1]._super)) {
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
GetDataStruct x6 = exec_MemoryPageIn(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout3, _super.arm1._super));
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:128)
STORE(LAYOUT_LOOKUP(layout3, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm1._extra0.count._super), 0), "MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:128)");
x4 = x6;
} else if (to_size_t(arg2_0._super[2]._super)) {
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
GetDataStruct x7 = exec_MemoryPageOut(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout3, _super.arm2));
x4 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x4;
}
OneHot_8_Struct exec_OneHot_8_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_8_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct8Array x2 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val8Array::value_type x3, BoundLayout<NondetRegLayout8LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// builtin Add
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
Val x8 = ((x7 + x2[4]._super) + x2[5]._super);
Val x9 = ((x8 + x2[6]._super) + x2[7]._super);
EQZ((x9 - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// builtin Mul
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x10 = (x2[2]._super * Val(2));
Val x11 = (x2[3]._super * Val(3));
Val x12 = (x2[4]._super * Val(4));
Val x13 = (x2[5]._super * Val(5));
Val x14 = (x2[6]._super * Val(6));
Val x15 = (x2[7]._super * Val(7));
// builtin Add
Val x16 = (x2[1]._super + x10);
Val x17 = (((x16 + x11) + x12) + x13);
Val x18 = (((x17 + x14) + x15) - arg0);
EQZ(x18, "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_8_Struct{
  ._super = x2};
}
InstInputStruct exec_InstInput(ExecContext& ctx,Val arg0, Val arg1_0, ValU32Struct arg2_0, Val arg3, Val arg4, BoundLayout<InstInputLayout> layout5)   {
// InstInput(zirgen/circuit/rv32im/v2/dsl/inst.zir:14)
OneHot_8_Struct x6 = exec_OneHot_8_(ctx,arg1_0, LAYOUT_LOOKUP(layout5, minorOnehot));
return InstInputStruct{
  .minor = arg1_0,   .pcU32 = arg2_0,   .state = arg3,   .mode = arg4,   .minorOnehot = x6};
}
DoCycleTableStruct exec_DoCycleTable(ExecContext& ctx,NondetRegStruct arg0, BoundLayout<DoCycleTableLayout> layout1)   {
// builtin Mul
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:19)
Val x2 = (arg0._super * Val(2));
// GetDiffCount(zirgen/circuit/rv32im/v2/dsl/mem.zir:22)
Val x3 = INVOKE_EXTERN(ctx,getDiffCount, x2);
CycleArgStruct x4 = exec_CycleArg(ctx,neg_0(x3), x2, LAYOUT_LOOKUP(layout1, arg1));
// builtin Add
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:20)
Val x5 = (x2 + Val(1));
// GetDiffCount(zirgen/circuit/rv32im/v2/dsl/mem.zir:22)
Val x6 = INVOKE_EXTERN(ctx,getDiffCount, x5);
CycleArgStruct x7 = exec_CycleArg(ctx,neg_0(x6), x5, LAYOUT_LOOKUP(layout1, arg2));
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:21)
Val x8 = (x4.cycle._super - x2);
EQZ(x8, "DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:21)");
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:22)
Val x9 = (x7.cycle._super - x5);
EQZ(x9, "DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:22)");
return DoCycleTableStruct{
};
}
DecoderStruct exec_DecodeInst(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<DecodeInstLayout> layout2)   {
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
AddrDecomposeStruct x3 = exec_AddrDecompose(ctx,arg1_0.pcU32, arg1_0.mode, LAYOUT_LOOKUP(layout2, pcAddr));
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:29)
EQZ(x3.low2._super, "DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:29)");
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:31)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, x3._super, LAYOUT_LOOKUP(layout2, loadInst));
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:33)
DecoderStruct x5 = exec_Decoder(ctx,x4._super, LAYOUT_LOOKUP(layout2, _super));
return x5;
}
GetDataStruct exec_ReadReg(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, BoundLayout<ReadRegLayout> layout3)   {
// builtin Mul
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:37)
Val x4 = ((Val(1) - arg1_0.mode) * Val(1073725472));
// builtin Add
Val x5 = ((arg1_0.mode * Val(1073725440)) + x4);
NondetRegStruct x6 = exec_Reg(ctx,(x5 + arg2_0), LAYOUT_LOOKUP(layout3, addr));
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
GetDataStruct x7 = exec_MemoryRead(ctx,arg0, x6._super, LAYOUT_LOOKUP(layout3, _super));
return x7;
}
ReadSourceRegsStruct exec_ReadSourceRegs(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, DecoderStruct arg2_0, BoundLayout<ReadSourceRegsLayout> layout3)   {
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:47)
Val x4 = (arg2_0.rs1 - arg2_0.rs2);
NondetRegStruct x5 = exec_NondetReg(ctx,isz(x4), LAYOUT_LOOKUP(layout3, isSameReg));
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
Val x6 = (Val(1) - x5._super);
EQZ((x5._super * x6), "ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)");
SourceRegsStruct x7;
if (to_size_t(x5._super)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:52)
EQZ(x4, "ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:52)");
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:53)
GetDataStruct x8 = exec_ReadReg(ctx,arg0, arg1_0, arg2_0.rs1, LAYOUT_LOOKUP(layout3, sourceRegs.arm0._super.rboth));
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)
STORE(LAYOUT_LOOKUP(layout3, sourceRegs.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, sourceRegs.arm0._extra0.count._super), 0), "ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)");
STORE(LAYOUT_LOOKUP(layout3, sourceRegs.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, sourceRegs.arm0._extra1.count._super), 0), "ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)");
STORE(LAYOUT_LOOKUP(layout3, sourceRegs.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, sourceRegs.arm0._extra2.count._super), 0), "ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)");
x7 = SourceRegsStruct{
  .rs1 = x8._super,   .rs2 = x8._super};
} else if (to_size_t(x6)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:59)
GetDataStruct x9 = exec_ReadReg(ctx,arg0, arg1_0, arg2_0.rs1, LAYOUT_LOOKUP(layout3, sourceRegs.arm1._0));
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:60)
GetDataStruct x10 = exec_ReadReg(ctx,arg0, arg1_0, arg2_0.rs2, LAYOUT_LOOKUP(layout3, sourceRegs.arm1._1));
x7 = SourceRegsStruct{
  .rs1 = x9._super,   .rs2 = x10._super};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:62)
NondetRegStruct x11 = exec_Reg(ctx,x7.rs1.low, LAYOUT_LOOKUP(layout3, rs1Low));
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:63)
NondetRegStruct x12 = exec_Reg(ctx,x7.rs1.high, LAYOUT_LOOKUP(layout3, rs1High));
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:64)
NondetRegStruct x13 = exec_Reg(ctx,x7.rs2.low, LAYOUT_LOOKUP(layout3, rs2Low));
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
NondetRegStruct x14 = exec_Reg(ctx,x7.rs2.high, LAYOUT_LOOKUP(layout3, rs2High));
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:46)
ReadSourceRegsStruct x15 = ReadSourceRegsStruct{
  .rs1 = ValU32Struct{
  .low = x11._super,   .high = x12._super},   .rs2 = ValU32Struct{
  .low = x13._super,   .high = x14._super}};
return x15;
}
WriteRdStruct exec_WriteRd(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, DecoderStruct arg2_0, Val arg3, ValU32Struct arg4, BoundLayout<WriteRdLayout> layout5)   {
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
NondetRegStruct x6 = exec_IsZero(ctx,arg2_0.rd, LAYOUT_LOOKUP(layout5, isRd0));
// builtin Mul
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x7 = ((Val(1) - x6._super) * arg3);
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:74)
Val x8 = ((Val(1) - arg1_0.mode) * Val(1073725472));
// builtin Add
Val x9 = ((arg1_0.mode * Val(1073725440)) + x8);
// builtin Mul
Val x10 = ((Val(1) - x7) * Val(64));
NondetRegStruct x11 = exec_Reg(ctx,((x9 + x10) + (x7 * arg2_0.rd)), LAYOUT_LOOKUP(layout5, writeAddr));
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:75)
MemoryWriteStruct x12 = exec_MemoryWrite(ctx,arg0, x11._super, arg4, LAYOUT_LOOKUP(layout5, _0));
return WriteRdStruct{
};
}
ExpandU32Struct exec_ExpandU32(ExecContext& ctx,ValU32Struct arg0, Val arg1_0, BoundLayout<ExpandU32Layout> layout2)   {
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
NondetRegStruct x3 = exec_NondetU8Reg(ctx,bitAnd(arg0.low, Val(255)), LAYOUT_LOOKUP(layout2, b0));
// builtin Mul
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x4 = (bitAnd(arg0.low, Val(65280)) * Val(2005401601));
NondetRegStruct x5 = exec_NondetU8Reg(ctx,x4, LAYOUT_LOOKUP(layout2, b1));
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
NondetRegStruct x6 = exec_NondetU8Reg(ctx,bitAnd(arg0.high, Val(255)), LAYOUT_LOOKUP(layout2, b2));
// builtin Mul
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x7 = (bitAnd(arg0.high, Val(65280)) * Val(2005401601));
NondetRegStruct x8 = exec_NondetU8Reg(ctx,x7, LAYOUT_LOOKUP(layout2, b3));
// builtin Mul
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x9 = (bitAnd(arg0.high, Val(32512)) * Val(1997537281));
NondetRegStruct x10 = exec_NondetU8Reg(ctx,x9, LAYOUT_LOOKUP(layout2, b3Top7times2));
// builtin Mul
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:61)
Val x11 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x12 = exec_NondetBitReg(ctx,x11, LAYOUT_LOOKUP(layout2, topBit));
// builtin Add
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:63)
Val x13 = (x3._super + (x5._super * Val(256)));
EQZ((arg0.low - x13), "ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:63)");
// builtin Add
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:64)
Val x14 = (x6._super + (x10._super * Val(128)));
EQZ((arg0.high - (x14 + (x12._super * Val(32768)))), "ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:64)");
// builtin Add
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:68)
Val x15 = ((x10._super * Val(1006632961)) + (x12._super * Val(128)));
EQZ((x8._super - x15), "ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:68)");
return ExpandU32Struct{
  .b0 = x3,   .b1 = x5,   .b2 = x6,   .b3 = x8,   .neg = (x12._super * arg1_0)};
}
SplitTotalStruct exec_SplitTotal(ExecContext& ctx,Val arg0, BoundLayout<SplitTotalLayout> layout1)   {
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0, Val(65535)), LAYOUT_LOOKUP(layout1, out));
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
NondetRegStruct x3 = exec_NondetU8Reg(ctx,(bitAnd(arg0, Val(16711680)) * Val(2013235201)), LAYOUT_LOOKUP(layout1, carryByte));
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:100)
NondetFakeTwitRegStruct x4 = exec_NondetFakeTwitReg(ctx,(bitAnd(arg0, Val(251658240)) * Val(2013265801)), LAYOUT_LOOKUP(layout1, carryExtra));
// builtin Add
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:101)
Val x5 = ((x4._super * Val(16777216)) + (x3._super * Val(65536)));
EQZ((arg0 - (x5 + x2._super._super)), "SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:101)");
// builtin Add
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:102)
Val x6 = ((x4._super * Val(256)) + x3._super);
return SplitTotalStruct{
  .out = x2,   .carry = x6};
}
MultiplyAccumulateStruct exec_MultiplyAccumulate(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, ValU32Struct arg2_0, MultiplySettingsStruct arg3, BoundLayout<MultiplyAccumulateLayout> layout4)   {
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
Val x5 = (Val(1) - inRange(Val(0), arg3.aSigned, Val(2)));
INVOKE_EXTERN(ctx,assert, x5, "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
Val x6 = (Val(1) - inRange(Val(0), arg3.bSigned, Val(2)));
INVOKE_EXTERN(ctx,assert, x6, "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
Val x7 = (Val(1) - inRange(Val(0), arg3.cSigned, Val(2)));
INVOKE_EXTERN(ctx,assert, x7, "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
ExpandU32Struct x8 = exec_ExpandU32(ctx,arg0, arg3.aSigned, LAYOUT_LOOKUP(layout4, ax));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
ExpandU32Struct x9 = exec_ExpandU32(ctx,arg1_0, arg3.bSigned, LAYOUT_LOOKUP(layout4, bx));
// builtin Mul
// Div(<preamble>:19)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:122)
Val x10 = (bitAnd(arg2_0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x11 = exec_NondetBitReg(ctx,x10, LAYOUT_LOOKUP(layout4, cSign));
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x12 = (bitAnd(arg2_0.high, Val(32767)) * Val(2));
NondetU16RegStruct x13 = exec_NondetU16Reg(ctx,x12, LAYOUT_LOOKUP(layout4, cRestTimes2));
// builtin Mul
// Div(<preamble>:19)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:124)
Val x14 = (x13._super._super * Val(1006632961));
// builtin Add
Val x15 = ((x11._super * Val(32768)) + x14);
EQZ((arg2_0.high - x15), "MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:124)");
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:128)
Val x16 = (x8.b0._super * x9.b0._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:129)
Val x17 = (x8.b0._super * x9.b1._super);
Val x18 = (x8.b1._super * x9.b0._super);
// builtin Add
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:128)
Val x19 = ((arg2_0.low + x16) + ((x17 + x18) * Val(256)));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
SplitTotalStruct x20 = exec_SplitTotal(ctx,x19, LAYOUT_LOOKUP(layout4, s0));
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:135)
Val x21 = (x8.b0._super * x9.b2._super);
// builtin Add
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:134)
Val x22 = ((arg2_0.high + x20.carry) + x21);
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:135)
Val x23 = (x8.b1._super * x9.b1._super);
Val x24 = (x8.b2._super * x9.b0._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:136)
Val x25 = (x8.b0._super * x9.b3._super);
Val x26 = (x8.b1._super * x9.b2._super);
Val x27 = (x8.b2._super * x9.b1._super);
Val x28 = (x8.b3._super * x9.b0._super);
// builtin Add
Val x29 = (((x25 + x26) + x27) + x28);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:135)
Val x30 = (((x22 + x23) + x24) + (x29 * Val(256)));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
SplitTotalStruct x31 = exec_SplitTotal(ctx,x30, LAYOUT_LOOKUP(layout4, s1));
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:142)
Val x32 = ((x11._super * Val(65535)) * arg3.cSigned);
// builtin Add
Val x33 = ((x31.carry + x32) + Val(131072));
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:143)
Val x34 = (x8.b1._super * Val(256));
// builtin Add
Val x35 = (x8.b0._super + x34);
// builtin Mul
Val x36 = (x9.b1._super * Val(256));
// builtin Add
Val x37 = (x9.b0._super + x36);
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:144)
Val x38 = (x8.b1._super * x9.b3._super);
// builtin Add
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:143)
Val x39 = (((x33 - (x35 * x9.neg)) - (x37 * x8.neg)) + x38);
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:144)
Val x40 = (x8.b2._super * x9.b2._super);
Val x41 = (x8.b3._super * x9.b1._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:145)
Val x42 = (x8.b2._super * x9.b3._super);
Val x43 = (x8.b3._super * x9.b2._super);
// builtin Add
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:144)
Val x44 = (((x39 + x40) + x41) + ((x42 + x43) * Val(256)));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
SplitTotalStruct x45 = exec_SplitTotal(ctx,x44, LAYOUT_LOOKUP(layout4, s2));
// builtin Add
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:151)
Val x46 = ((x45.carry + x32) + Val(131070));
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:152)
Val x47 = (x8.b3._super * Val(256));
// builtin Add
Val x48 = (x8.b2._super + x47);
// builtin Mul
Val x49 = (x9.b3._super * Val(256));
// builtin Add
Val x50 = (x9.b2._super + x49);
// builtin Mul
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:153)
Val x51 = (x8.b3._super * x9.b3._super);
// builtin Add
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:152)
Val x52 = (((x46 - (x48 * x9.neg)) - (x50 * x8.neg)) + x51);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
NondetU16RegStruct x53 = exec_NondetU16Reg(ctx,bitAnd(x52, Val(65535)), LAYOUT_LOOKUP(layout4, s3Out));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:155)
FakeTwitRegStruct x54 = exec_FakeTwitReg(ctx,((x52 - x53._super._super) * Val(2013235201)), LAYOUT_LOOKUP(layout4, s3Carry));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:156)
ValU32Struct x55 = ValU32Struct{
  .low = x20.out._super._super,   .high = x31.out._super._super};
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:157)
ValU32Struct x56 = ValU32Struct{
  .low = x45.out._super._super,   .high = x53._super._super};
return MultiplyAccumulateStruct{
  .outLow = x55,   .outHigh = x56,   .bNeg = x9.neg};
}
DivInputStruct exec_DivInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<DivInputLayout> layout2)   {
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:8)
EQZ((arg1_0.state - Val(48)), "DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:8)");
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:10)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:11)
ReadSourceRegsStruct x4 = exec_ReadSourceRegs(ctx,arg0, arg1_0, x3, LAYOUT_LOOKUP(layout2, sourceRegs));
return DivInputStruct{
  ._super = arg1_0,   .decoded = x3,   .rs1 = x4.rs1,   .rs2 = x4.rs2};
}
DivideReturnStruct exec_DoDiv(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, Val arg2_0, Val arg3, BoundLayout<DoDivLayout> layout4)   {
// Divide(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:45)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:49)
auto [x5, x6, x7, x8] = INVOKE_EXTERN(ctx,divide, arg0.low, arg0.high, arg1_0.low, arg1_0.high, (arg2_0 + (arg3 * Val(2))));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:52)
NondetRegStruct x9 = exec_NondetReg(ctx,x5, LAYOUT_LOOKUP(layout4, quotLow));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:53)
NondetRegStruct x10 = exec_NondetReg(ctx,x6, LAYOUT_LOOKUP(layout4, quotHigh));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:54)
ValU32Struct x11 = ValU32Struct{
  .low = x9._super,   .high = x10._super};
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
NondetU16RegStruct x12 = exec_NondetU16Reg(ctx,x7, LAYOUT_LOOKUP(layout4, remLow));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
NondetU16RegStruct x13 = exec_NondetU16Reg(ctx,x8, LAYOUT_LOOKUP(layout4, remHigh));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:58)
ValU32Struct x14 = ValU32Struct{
  .low = x12._super._super,   .high = x13._super._super};
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
MultiplyAccumulateStruct x15 = exec_MultiplyAccumulate(ctx,x11, arg1_0, x14, MultiplySettingsStruct{
  .aSigned = arg2_0,   .bSigned = arg2_0,   .cSigned = arg2_0}, LAYOUT_LOOKUP(layout4, mul));
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:64)
Val x16 = (x15.outLow.low - arg0.low);
EQZ(x16, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :106:10) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :64:15)))");
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
Val x17 = (x15.outLow.high - arg0.high);
EQZ(x17, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :107:11) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :64:15)))");
// builtin Isz
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:66)
Val x18 = isz(x15.outHigh.low);
NondetRegStruct x19 = exec_NondetBitReg(ctx,(Val(1) - x18), LAYOUT_LOOKUP(layout4, topBitType));
// builtin Mul
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:67)
Val x20 = (x19._super * Val(65535));
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
Val x21 = (x15.outHigh.low - x20);
EQZ(x21, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :106:10) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :67:15)))");
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
Val x22 = (x15.outHigh.high - x20);
EQZ(x22, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :107:11) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :67:15)))");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:69)
NondetRegStruct x23 = exec_IsZero(ctx,(arg1_0.low + arg1_0.high), LAYOUT_LOOKUP(layout4, isZero));
// builtin Mul
// Div(<preamble>:19)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:71)
Val x24 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x25 = exec_NondetBitReg(ctx,x24, LAYOUT_LOOKUP(layout4, topNum));
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x26 = (arg0.high - (x25._super * Val(32768)));
NondetU16RegStruct x27 = exec_U16Reg(ctx,(x26 * Val(2)), LAYOUT_LOOKUP(layout4, _0));
// builtin Mul
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:74)
Val x28 = (x25._super * arg2_0);
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:78)
Val x29 = (x15.bNeg * (Val(65536) - arg1_0.low));
// builtin Sub
Val x30 = (Val(1) - x15.bNeg);
// builtin Mul
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:79)
Val x31 = (x15.bNeg * (Val(65535) - arg1_0.high));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
NormalizeU32Struct x32 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = (x29 + (x30 * arg1_0.low)),   .high = (x31 + (x30 * arg1_0.high))}, LAYOUT_LOOKUP(layout4, denomAbs));
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:83)
Val x33 = (Val(65536) - x12._super._super);
Val x34 = (Val(1) - x28);
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:84)
Val x35 = (Val(65535) - x13._super._super);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
DenormedValU32Struct x36 = DenormedValU32Struct{
  .low = ((x28 * x33) + (x34 * x12._super._super)),   .high = ((x28 * x35) + (x34 * x13._super._super))};
NormalizeU32Struct x37 = exec_NormalizeU32(ctx,x36, LAYOUT_LOOKUP(layout4, remNormal));
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:89)
Val x38 = (x12._super._super - arg0.low);
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
Val x39 = (x13._super._super - arg0.high);
// builtin Component
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
ComponentStruct x40 = ComponentStruct{
};
ComponentStruct x41;
if (to_size_t(x23._super)) {
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:89)
EQZ(x38, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :106:10) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :89:17)))");
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
EQZ(x39, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :107:11) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :89:17)))");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
STORE(LAYOUT_LOOKUP(layout4, _3.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout4, _3.arm0._extra0.count._super), 0), "DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)");
STORE(LAYOUT_LOOKUP(layout4, _3.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout4, _3.arm0._extra1.count._super), 0), "DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)");
x41 = x40;
} else if (to_size_t((Val(1) - x23._super))) {
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
CmpLessThanUnsignedStruct x42 = exec_CmpLessThanUnsigned(ctx,x37._super, x32._super, LAYOUT_LOOKUP(layout4, _3.arm1.lt));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:92)
EQZ((x42.isLessThan - Val(1)), "DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:92)");
x41 = x40;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return DivideReturnStruct{
  .quot = x11,   .rem = x14};
}
ValU32Struct exec_OpSRL(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRLLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:113)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSRL ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :113:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSRL ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :113:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSRL ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :113:20)))");
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:114)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.rs2.low, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:115)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
NondetRegStruct exec_TopBit(ExecContext& ctx,ValU32Struct arg0, BoundLayout<TopBitLayout> layout1)   {
// builtin Mul
// Div(<preamble>:19)
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:98)
Val x2 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout1, _super));
// builtin Mul
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:99)
Val x4 = (x3._super * Val(32768));
Val x5 = ((arg0.high - x4) * Val(2));
NondetU16RegStruct x6 = exec_NondetU16Reg(ctx,x5, LAYOUT_LOOKUP(layout1, rest));
// builtin Mul
// Div(<preamble>:19)
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:100)
Val x7 = (x6._super._super * Val(1006632961));
EQZ((arg0.high - (x7 + x4)), "TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:100)");
return x3;
}
ValU32Struct exec_OpSRA(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRALayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:119)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSRA ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :119:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSRA ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :119:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(32));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSRA ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :119:20)))");
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:120)
ValU32Struct x5 = exec_DynPo2(ctx,arg0.rs2.low, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:121)
NondetRegStruct x6 = exec_TopBit(ctx,arg0.rs1, LAYOUT_LOOKUP(layout1, flip));
// builtin Sub
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:105)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:109)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:122)
Val x7 = (Val(65535) - arg0.rs1.low);
Val x8 = (Val(1) - x6._super);
// builtin Add
Val x9 = ((x6._super * x7) + (x8 * arg0.rs1.low));
// builtin Sub
Val x10 = (Val(65535) - arg0.rs1.high);
// builtin Add
Val x11 = ((x6._super * x10) + (x8 * arg0.rs1.high));
DivideReturnStruct x12 = exec_DoDiv(ctx,ValU32Struct{
  .low = x9,   .high = x11}, x5, Val(0), Val(1), LAYOUT_LOOKUP(layout1, _0));
// builtin Sub
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:105)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:109)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:123)
Val x13 = (Val(65535) - x12.quot.low);
// builtin Add
Val x14 = ((x6._super * x13) + (x8 * x12.quot.low));
// builtin Sub
Val x15 = (Val(65535) - x12.quot.high);
// builtin Add
Val x16 = ((x6._super * x15) + (x8 * x12.quot.high));
return ValU32Struct{
  .low = x14,   .high = x16};
}
ValU32Struct exec_OpSRLI(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRLILayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:127)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSRLI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :127:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSRLI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :127:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSRLI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :127:20)))");
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:128)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.decoded.rs2, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:129)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
ValU32Struct exec_OpSRAI(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRAILayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:133)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSRAI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :133:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSRAI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :133:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(32));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSRAI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :133:20)))");
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:134)
ValU32Struct x5 = exec_DynPo2(ctx,arg0.decoded.rs2, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:135)
NondetRegStruct x6 = exec_TopBit(ctx,arg0.rs1, LAYOUT_LOOKUP(layout1, flip));
// builtin Sub
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:105)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:109)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:136)
Val x7 = (Val(65535) - arg0.rs1.low);
Val x8 = (Val(1) - x6._super);
// builtin Add
Val x9 = ((x6._super * x7) + (x8 * arg0.rs1.low));
// builtin Sub
Val x10 = (Val(65535) - arg0.rs1.high);
// builtin Add
Val x11 = ((x6._super * x10) + (x8 * arg0.rs1.high));
DivideReturnStruct x12 = exec_DoDiv(ctx,ValU32Struct{
  .low = x9,   .high = x11}, x5, Val(0), Val(1), LAYOUT_LOOKUP(layout1, _0));
// builtin Sub
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:105)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:109)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:137)
Val x13 = (Val(65535) - x12.quot.low);
// builtin Add
Val x14 = ((x6._super * x13) + (x8 * x12.quot.low));
// builtin Sub
Val x15 = (Val(65535) - x12.quot.high);
// builtin Add
Val x16 = ((x6._super * x15) + (x8 * x12.quot.high));
return ValU32Struct{
  .low = x14,   .high = x16};
}
ValU32Struct exec_OpDIV(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpDIVLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpDIV(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:141)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpDIV ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :141:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpDIV ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :141:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpDIV ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :141:20)))");
// OpDIV(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:142)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1, arg0.rs2, Val(1), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
ValU32Struct exec_OpDIVU(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpDIVULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpDIVU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:146)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpDIVU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :146:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpDIVU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :146:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpDIVU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :146:20)))");
// OpDIVU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:147)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1, arg0.rs2, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
ValU32Struct exec_OpREM(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpREMLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpREM(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:151)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpREM ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :151:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpREM ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :151:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpREM ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :151:20)))");
// OpREM(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:152)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1, arg0.rs2, Val(1), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.rem;
}
ValU32Struct exec_OpREMU(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpREMULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpREMU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:156)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpREMU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :156:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpREMU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :156:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpREMU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :156:20)))");
// OpREMU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:157)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1, arg0.rs2, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.rem;
}
InstOutputBaseStruct exec_Div0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Div0Layout> layout2)   {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:23)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
DivInputStruct x4 = exec_DivInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
ValU32Struct x5;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:26)
ValU32Struct x6 = exec_OpSRL(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm0._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm0._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
x5 = x6;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:27)
ValU32Struct x7 = exec_OpSRA(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm1));
x5 = x7;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:28)
ValU32Struct x8 = exec_OpSRLI(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm2._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
x5 = x8;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:29)
ValU32Struct x9 = exec_OpSRAI(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm3));
x5 = x9;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:30)
ValU32Struct x10 = exec_OpDIV(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm4._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
x5 = x10;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:31)
ValU32Struct x11 = exec_OpDIVU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm5._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
x5 = x11;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:32)
ValU32Struct x12 = exec_OpREM(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm6._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
x5 = x12;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:33)
ValU32Struct x13 = exec_OpREMU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm7._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)");
x5 = x13;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:35)
WriteRdStruct x14 = exec_WriteRd(ctx,arg0, x4._super, x4.decoded, Val(1), x5, LAYOUT_LOOKUP(layout2, _1));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:36)
Val x15 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x16 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x15,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:37)
BigIntTopStateStruct x17 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
return InstOutputBaseStruct{
  .newPc = x16._super,   .newState = Val(48),   .newMode = arg1_0.mode,   .topState = x17};
}
MiscInputStruct exec_MiscInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MiscInputLayout> layout2)   {
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:7)
EQZ((arg1_0.state - Val(48)), "MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:7)");
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:9)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:10)
ReadSourceRegsStruct x4 = exec_ReadSourceRegs(ctx,arg0, arg1_0, x3, LAYOUT_LOOKUP(layout2, sourceRegs));
return MiscInputStruct{
  ._super = arg1_0,   .decoded = x3,   .rs1 = x4.rs1,   .rs2 = x4.rs2};
}
InstOutputBaseStruct exec_FinalizeMisc(ExecContext& ctx,NondetRegStruct arg0, MiscInputStruct arg1_0, MiscOutputStruct arg2_0, BoundLayout<FinalizeMiscLayout> layout3)   {
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:23)
NormalizeU32Struct x4 = exec_NormalizeU32(ctx,arg2_0.toWrite, LAYOUT_LOOKUP(layout3, writeData));
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:24)
NormalizeU32Struct x5 = exec_NormalizeU32(ctx,arg2_0.newPc, LAYOUT_LOOKUP(layout3, pcNorm));
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:25)
WriteRdStruct x6 = exec_WriteRd(ctx,arg0, arg1_0._super, arg1_0.decoded, arg2_0.doWrite, x4._super, LAYOUT_LOOKUP(layout3, _0));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:26)
BigIntTopStateStruct x7 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
InstOutputBaseStruct x8 = InstOutputBaseStruct{
  .newPc = x5._super,   .newState = Val(48),   .newMode = arg1_0._super.mode,   .topState = x7};
return x8;
}
MiscOutputStruct exec_OpXOR(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpXORLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpXOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:100)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpXOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :100:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpXOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :100:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpXOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :100:20)))");
// OpXOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:101)
ValU32Struct x4 = exec_BitwiseXor(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, _0));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpOR(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpORLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:105)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :105:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :105:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :105:20)))");
// OpOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:106)
ValU32Struct x4 = exec_BitwiseOr(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, _0));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpAND(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpANDLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpAND(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:110)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpAND ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :110:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpAND ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :110:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpAND ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :110:20)))");
// OpAND(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:111)
ValU32Struct x4 = exec_BitwiseAnd(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, _0));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpSLT(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:115)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :115:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(2));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :115:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :115:20)))");
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:116)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:117)
DenormedValU32Struct x5 = DenormedValU32Struct{
  .low = x4.isLessThan._super,   .high = Val(0)};
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x6 = (arg0._super.pcU32.low + Val(4));
return MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x5,   .newPc = DenormedValU32Struct{
  .low = x6,   .high = arg0._super.pcU32.high}};
}
MiscOutputStruct exec_OpSLTU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:121)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :121:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(3));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :121:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :121:20)))");
// OpSLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:122)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
// OpSLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:123)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.isLessThan,   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
InstOutputBaseStruct exec_Misc0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Misc0Layout> layout2)   {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:30)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
MiscInputStruct x4 = exec_MiscInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:90)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:33)
Val x5 = (x4.decoded.opcode._super - Val(51));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:91)
Val x6 = (x4.rs1.low + x4.rs2.low);
Val x7 = (x4.rs1.high + x4.rs2.high);
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x8 = (x4._super.pcU32.low + Val(4));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
DenormedValU32Struct x9 = DenormedValU32Struct{
  .low = x8,   .high = x4._super.pcU32.high};
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
// OpSUB(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:95)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:34)
Val x10 = (x4.decoded.func7 - Val(32));
// builtin Add
// SubU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:33)
// OpSUB(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:96)
Val x11 = (x4.rs1.low + Val(65536));
Val x12 = (x4.rs1.high + Val(65535));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x13 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x11 - x4.rs2.low),   .high = (x12 - x4.rs2.high)},   .newPc = x9};
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpADDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:127)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:40)
Val x14 = (x4.decoded.opcode._super - Val(19));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpADDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:128)
Val x15 = (x4.rs1.low + x4.decoded.immI.low);
Val x16 = (x4.rs1.high + x4.decoded.immI.high);
MiscOutputStruct x17;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:90)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:33)
EQZ(x5, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at callsite( OpADD ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :90:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :33:28))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at callsite( OpADD ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :90:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :33:28))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(x4.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at callsite( OpADD ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :90:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :33:28))))");
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
x17 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x6,   .high = x7},   .newPc = x9};
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSUB(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:95)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:34)
EQZ(x5, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at callsite( OpSUB ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :95:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :34:28))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at callsite( OpSUB ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :95:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :34:28))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(x10, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at callsite( OpSUB ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :95:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :34:28))))");
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
x17 = x13;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:35)
MiscOutputStruct x18 = exec_OpXOR(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm2._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
x17 = x18;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:36)
MiscOutputStruct x19 = exec_OpOR(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm3._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
x17 = x19;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:37)
MiscOutputStruct x20 = exec_OpAND(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm4._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
x17 = x20;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:38)
MiscOutputStruct x21 = exec_OpSLT(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm5));
x17 = x21;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:39)
MiscOutputStruct x22 = exec_OpSLTU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm6._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
x17 = x22;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpADDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:127)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:40)
EQZ(x14, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at callsite( OpADDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :127:18) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :40:29))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at callsite( OpADDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :127:18) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :40:29))))");
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)");
x17 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x15,   .high = x16},   .newPc = x9};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:42)
InstOutputBaseStruct x23 = exec_FinalizeMisc(ctx,arg0, x4, x17, LAYOUT_LOOKUP(layout2, _super));
return x23;
}
MiscOutputStruct exec_OpXORI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpXORILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpXORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:132)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpXORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :132:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpXORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :132:18)))");
// OpXORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:133)
ValU32Struct x4 = exec_BitwiseXor(ctx,arg0.rs1, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, _0));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpORI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpORILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:137)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :137:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :137:18)))");
// OpORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:138)
ValU32Struct x4 = exec_BitwiseOr(ctx,arg0.rs1, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, _0));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpANDI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpANDILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpANDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:142)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpANDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :142:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpANDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :142:18)))");
// OpANDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:143)
ValU32Struct x4 = exec_BitwiseAnd(ctx,arg0.rs1, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, _0));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpSLTI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:147)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpSLTI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :147:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(2));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpSLTI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :147:18)))");
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:148)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, cmp));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:149)
DenormedValU32Struct x5 = DenormedValU32Struct{
  .low = x4.isLessThan._super,   .high = Val(0)};
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
Val x6 = (arg0._super.pcU32.low + Val(4));
return MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x5,   .newPc = DenormedValU32Struct{
  .low = x6,   .high = arg0._super.pcU32.high}};
}
MiscOutputStruct exec_OpSLTIU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTIULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpSLTIU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:153)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpSLTIU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :153:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(3));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpSLTIU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :153:18)))");
// OpSLTIU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:154)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, cmp));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
// OpSLTIU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:155)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.isLessThan,   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpBEQ(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBEQLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:159)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpBEQ ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :159:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpBEQ ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :159:18)))");
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:160)
CmpEqualStruct x3 = exec_CmpEqual(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:161)
Val x4 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x5 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
Val x6 = (arg0._super.pcU32.low + Val(4));
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x7 = (x3.isEqual._super * x4);
// builtin Sub
Val x8 = (Val(1) - x3.isEqual._super);
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x9 = (x3.isEqual._super * x5);
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:86)
MiscOutputStruct x10 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = (x7 + (x8 * x6)),   .high = (x9 + (x8 * arg0._super.pcU32.high))}};
return x10;
}
MiscOutputStruct exec_OpBNE(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBNELayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpBNE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:165)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpBNE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :165:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpBNE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :165:18)))");
// OpBNE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:166)
CmpEqualStruct x4 = exec_CmpEqual(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// builtin Sub
// OpBNE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:167)
Val x5 = (Val(1) - x4.isEqual._super);
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x6 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x7 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
Val x8 = (arg0._super.pcU32.low + Val(4));
// builtin Sub
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x9 = (Val(1) - x5);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x10 = DenormedValU32Struct{
  .low = ((x5 * x6) + (x9 * x8)),   .high = ((x5 * x7) + (x9 * arg0._super.pcU32.high))};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:86)
MiscOutputStruct x11 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x10};
return x11;
}
MiscOutputStruct exec_OpBLT(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBLTLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:171)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpBLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :171:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpBLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :171:18)))");
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:172)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:173)
Val x5 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x6 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
Val x7 = (arg0._super.pcU32.low + Val(4));
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x8 = (x4.isLessThan._super * x5);
// builtin Sub
Val x9 = (Val(1) - x4.isLessThan._super);
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x10 = (x4.isLessThan._super * x6);
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:86)
MiscOutputStruct x11 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = (x8 + (x9 * x7)),   .high = (x10 + (x9 * arg0._super.pcU32.high))}};
return x11;
}
InstOutputBaseStruct exec_Misc1(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Misc1Layout> layout2)   {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:46)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
MiscInputStruct x4 = exec_MiscInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
MiscOutputStruct x5;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:49)
MiscOutputStruct x6 = exec_OpXORI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm0._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
x5 = x6;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:50)
MiscOutputStruct x7 = exec_OpORI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm1._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
x5 = x7;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:51)
MiscOutputStruct x8 = exec_OpANDI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm2._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
x5 = x8;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:52)
MiscOutputStruct x9 = exec_OpSLTI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm3));
x5 = x9;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:53)
MiscOutputStruct x10 = exec_OpSLTIU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm4._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
x5 = x10;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:54)
MiscOutputStruct x11 = exec_OpBEQ(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm5._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
x5 = x11;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:55)
MiscOutputStruct x12 = exec_OpBNE(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm6._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)");
x5 = x12;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:56)
MiscOutputStruct x13 = exec_OpBLT(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm7));
x5 = x13;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:58)
InstOutputBaseStruct x14 = exec_FinalizeMisc(ctx,arg0, x4, x5, LAYOUT_LOOKUP(layout2, _super));
return x14;
}
MiscOutputStruct exec_OpBGE(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBGELayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:177)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpBGE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :177:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpBGE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :177:18)))");
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:178)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// builtin Sub
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:179)
Val x5 = (Val(1) - x4.isLessThan._super);
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x6 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x7 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
Val x8 = (arg0._super.pcU32.low + Val(4));
// builtin Sub
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x9 = (Val(1) - x5);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x10 = DenormedValU32Struct{
  .low = ((x5 * x6) + (x9 * x8)),   .high = ((x5 * x7) + (x9 * arg0._super.pcU32.high))};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:86)
MiscOutputStruct x11 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x10};
return x11;
}
MiscOutputStruct exec_OpBLTU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBLTULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:183)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpBLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :183:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpBLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :183:18)))");
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:184)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:185)
Val x5 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x6 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
Val x7 = (arg0._super.pcU32.low + Val(4));
// builtin Sub
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x8 = (Val(1) - x4.isLessThan);
// builtin Add
Val x9 = ((x4.isLessThan * x5) + (x8 * x7));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x10 = ((x4.isLessThan * x6) + (x8 * arg0._super.pcU32.high));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:86)
MiscOutputStruct x11 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = x9,   .high = x10}};
return x11;
}
MiscOutputStruct exec_OpBGEU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBGEULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:189)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpBGEU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :189:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpBGEU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :189:18)))");
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:190)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1, arg0.rs2, LAYOUT_LOOKUP(layout1, cmp));
// builtin Sub
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:191)
Val x5 = (Val(1) - x4.isLessThan);
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x6 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x7 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
Val x8 = (arg0._super.pcU32.low + Val(4));
// builtin Sub
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x9 = (Val(1) - x5);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x10 = DenormedValU32Struct{
  .low = ((x5 * x6) + (x9 * x8)),   .high = ((x5 * x7) + (x9 * arg0._super.pcU32.high))};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:86)
MiscOutputStruct x11 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x10};
return x11;
}
InstOutputBaseStruct exec_Misc2(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Misc2Layout> layout2)   {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:62)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
MiscInputStruct x4 = exec_MiscInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:91)
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:195)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:68)
Val x5 = (x4.decoded.opcode._super - Val(111));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:197)
Val x6 = (x4._super.pcU32.low + Val(4));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
DenormedValU32Struct x7 = DenormedValU32Struct{
  .low = x6,   .high = x4._super.pcU32.high};
// builtin Add
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:198)
Val x8 = (x4._super.pcU32.low + x4.decoded.immJ.low);
Val x9 = (x4._super.pcU32.high + x4.decoded.immJ.high);
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpJALR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:202)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:69)
Val x10 = (x4.decoded.opcode._super - Val(103));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpJALR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:205)
Val x11 = (x4.rs1.low + x4.decoded.immI.low);
Val x12 = (x4.rs1.high + x4.decoded.immI.high);
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:91)
// OpLUI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:209)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:70)
Val x13 = (x4.decoded.opcode._super - Val(55));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// Denorm(zirgen/circuit/rv32im/v2/dsl/u32.zir:38)
// OpLUI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:210)
DenormedValU32Struct x14 = DenormedValU32Struct{
  .low = x4.decoded.immU.low,   .high = x4.decoded.immU.high};
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:91)
// OpAUIPC(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:214)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:71)
Val x15 = (x4.decoded.opcode._super - Val(23));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpAUIPC(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:215)
Val x16 = (x4._super.pcU32.low + x4.decoded.immU.low);
Val x17 = (x4._super.pcU32.high + x4.decoded.immU.high);
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpECALL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:220)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:72)
Val x18 = (x4.decoded.opcode._super - Val(115));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpECALL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:221)
DenormedValU32Struct x19 = DenormedValU32Struct{
  .low = x4._super.pcU32.low,   .high = x4._super.pcU32.high};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
MiscOutputStruct x20 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x19};
MiscOutputStruct x21;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:65)
MiscOutputStruct x22 = exec_OpBGE(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm0));
x21 = x22;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:66)
MiscOutputStruct x23 = exec_OpBLTU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm1._super));
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
x21 = x23;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:67)
MiscOutputStruct x24 = exec_OpBGEU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm2._super));
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
x21 = x24;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:91)
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:195)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:68)
EQZ(x5, "loc(callsite( VerifyOpcode ( zirgen/circuit/rv32im/v2/dsl/inst.zir :91:19) at callsite( OpJAL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :195:16) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :68:28))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x7,   .newPc = DenormedValU32Struct{
  .low = x8,   .high = x9}};
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpJALR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:202)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:69)
EQZ(x10, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at callsite( OpJALR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :202:18) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :69:29))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at callsite( OpJALR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :202:18) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :69:29))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x7,   .newPc = DenormedValU32Struct{
  .low = x11,   .high = x12}};
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:91)
// OpLUI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:209)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:70)
EQZ(x13, "loc(callsite( VerifyOpcode ( zirgen/circuit/rv32im/v2/dsl/inst.zir :91:19) at callsite( OpLUI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :209:16) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :70:28))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x14,   .newPc = x7};
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:91)
// OpAUIPC(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:214)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:71)
EQZ(x15, "loc(callsite( VerifyOpcode ( zirgen/circuit/rv32im/v2/dsl/inst.zir :91:19) at callsite( OpAUIPC ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :214:16) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :71:30))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x16,   .high = x17},   .newPc = x7};
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpECALL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:220)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:72)
EQZ(x18, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at callsite( OpECALL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :220:20) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :72:30))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at callsite( OpECALL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :220:20) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :72:30))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(x4.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at callsite( OpECALL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :220:20) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :72:30))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)");
x21 = x20;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:74)
InstOutputBaseStruct x25 = exec_FinalizeMisc(ctx,arg0, x4, x21, LAYOUT_LOOKUP(layout2, _super));
return x25;
}
MulInputStruct exec_MulInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MulInputLayout> layout2)   {
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:8)
EQZ((arg1_0.state - Val(48)), "MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:8)");
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:10)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:11)
ReadSourceRegsStruct x4 = exec_ReadSourceRegs(ctx,arg0, arg1_0, x3, LAYOUT_LOOKUP(layout2, sourceRegs));
return MulInputStruct{
  ._super = arg1_0,   .decoded = x3,   .rs1 = x4.rs1,   .rs2 = x4.rs2};
}
DoMulStruct exec_DoMul(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, Val arg2_0, Val arg3, BoundLayout<DoMulLayout> layout4)   {
// DoMul(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:42)
MultiplyAccumulateStruct x5 = exec_MultiplyAccumulate(ctx,arg0, arg1_0, ValU32Struct{
  .low = Val(0),   .high = Val(0)}, MultiplySettingsStruct{
  .aSigned = arg2_0,   .bSigned = arg3,   .cSigned = Val(0)}, LAYOUT_LOOKUP(layout4, mul));
return DoMulStruct{
  .low = x5.outLow,   .high = x5.outHigh};
}
ValU32Struct exec_OpSLL(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpSLLLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:49)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSLL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :49:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSLL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :49:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSLL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :49:20)))");
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:50)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.rs2.low, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:51)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.low;
}
ValU32Struct exec_OpSLLI(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpSLLILayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:56)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpSLLI ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :56:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpSLLI ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :56:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpSLLI ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :56:20)))");
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:57)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.decoded.rs2, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:58)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.low;
}
ValU32Struct exec_OpMUL(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpMUL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:63)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpMUL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :63:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpMUL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :63:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x3 = (arg0.decoded.func7 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpMUL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :63:20)))");
// OpMUL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:64)
DoMulStruct x4 = exec_DoMul(ctx,arg0.rs1, arg0.rs2, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x4.low;
}
ValU32Struct exec_OpMULH(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULHLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpMULH(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:69)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpMULH ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :69:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpMULH ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :69:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpMULH ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :69:20)))");
// OpMULH(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:70)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1, arg0.rs2, Val(1), Val(1), LAYOUT_LOOKUP(layout1, _0));
return x5.high;
}
ValU32Struct exec_OpMULHSU(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULHSULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpMULHSU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:75)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpMULHSU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :75:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(2));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpMULHSU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :75:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpMULHSU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :75:20)))");
// OpMULHSU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:76)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1, arg0.rs2, Val(1), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.high;
}
ValU32Struct exec_OpMULHU(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULHULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:102)
// OpMULHU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:81)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :102:19) at  OpMULHU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :81:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:103)
Val x3 = (arg0.decoded.func3 - Val(3));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :103:18) at  OpMULHU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :81:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:104)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :104:18) at  OpMULHU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :81:20)))");
// OpMULHU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:82)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1, arg0.rs2, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.high;
}
InstOutputBaseStruct exec_Mul0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Mul0Layout> layout2)   {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:23)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
MulInputStruct x4 = exec_MulInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// IllegalMulOp(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:19)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:32)
ValU32Struct x5 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
ValU32Struct x6;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:26)
ValU32Struct x7 = exec_OpSLL(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm0));
x6 = x7;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:27)
ValU32Struct x8 = exec_OpSLLI(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm1));
x6 = x8;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:28)
ValU32Struct x9 = exec_OpMUL(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm2._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
x6 = x9;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:29)
ValU32Struct x10 = exec_OpMULH(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm3._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm3._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
x6 = x10;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:30)
ValU32Struct x11 = exec_OpMULHSU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm4._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
x6 = x11;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:31)
ValU32Struct x12 = exec_OpMULHU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm5._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
x6 = x12;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// IllegalMulOp(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:18)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:32)
EQZ(Val(2013265920), "loc(callsite( IllegalMulOp ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :18:6) at  Mul0 ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :32:18)))");
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra2.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra3.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra4.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra5.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra6.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra7.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra8.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra9.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra10.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra11.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra12.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra13.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra14.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra15.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra16.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra17.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra18.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
x6 = x5;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// IllegalMulOp(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:18)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:33)
EQZ(Val(2013265920), "loc(callsite( IllegalMulOp ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :18:6) at  Mul0 ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :33:18)))");
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra2.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra3.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra4.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra5.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra6.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra7.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra8.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra9.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra10.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra11.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra12.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra13.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra14.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra15.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra16.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra17.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra18.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)");
x6 = x5;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:35)
WriteRdStruct x13 = exec_WriteRd(ctx,arg0, x4._super, x4.decoded, Val(1), x6, LAYOUT_LOOKUP(layout2, _1));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:36)
Val x14 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x15 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x14,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:37)
BigIntTopStateStruct x16 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
return InstOutputBaseStruct{
  .newPc = x15._super,   .newState = Val(48),   .newMode = arg1_0.mode,   .topState = x16};
}
MemLoadInputStruct exec_MemLoadInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MemLoadInputLayout> layout2)   {
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:8)
EQZ((arg1_0.state - Val(48)), "MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:8)");
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:10)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:11)
GetDataStruct x4 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs1, LAYOUT_LOOKUP(layout2, rs1));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:12)
Val x5 = (x4._super.low + x3.immI.low);
Val x6 = (x4._super.high + x3.immI.high);
NormalizeU32Struct x7 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x5,   .high = x6}, LAYOUT_LOOKUP(layout2, addrU32));
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:13)
AddrDecomposeBitsStruct x8 = exec_AddrDecomposeBits(ctx,x7._super, arg1_0.mode, LAYOUT_LOOKUP(layout2, addr));
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:14)
GetDataStruct x9 = exec_MemoryRead(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout2, data));
return MemLoadInputStruct{
  .ii = arg1_0,   .decoded = x3,   .addr = x8,   .data = x9};
}
MemStoreInputStruct exec_MemStoreInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MemStoreInputLayout> layout2)   {
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:18)
EQZ((arg1_0.state - Val(48)), "MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:18)");
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:20)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:21)
ReadSourceRegsStruct x4 = exec_ReadSourceRegs(ctx,arg0, arg1_0, x3, LAYOUT_LOOKUP(layout2, sourceRegs));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:24)
Val x5 = (x4.rs1.low + x3.immS.low);
Val x6 = (x4.rs1.high + x3.immS.high);
NormalizeU32Struct x7 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x5,   .high = x6}, LAYOUT_LOOKUP(layout2, addrU32));
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:25)
AddrDecomposeBitsStruct x8 = exec_AddrDecomposeBits(ctx,x7._super, arg1_0.mode, LAYOUT_LOOKUP(layout2, addr));
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:26)
GetDataStruct x9 = exec_MemoryRead(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout2, data));
return MemStoreInputStruct{
  .decoded = x3,   .rs2 = x4.rs2,   .addr = x8,   .data = x9};
}
MemStoreFinalizeStruct exec_MemStoreFinalize(ExecContext& ctx,NondetRegStruct arg0, MemStoreInputStruct arg1_0, ValU32Struct arg2_0, BoundLayout<MemStoreFinalizeLayout> layout3)   {
// MemStoreFinalize(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:30)
MemoryWriteStruct x4 = exec_MemoryWrite(ctx,arg0, arg1_0.addr._super, arg2_0, LAYOUT_LOOKUP(layout3, _0));
return MemStoreFinalizeStruct{
};
}
SplitWordStruct exec_SplitWord(ExecContext& ctx,Val arg0, BoundLayout<SplitWordLayout> layout1)   {
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
NondetRegStruct x2 = exec_NondetU8Reg(ctx,bitAnd(arg0, Val(255)), LAYOUT_LOOKUP(layout1, byte0));
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3 = exec_NondetU8Reg(ctx,(bitAnd(arg0, Val(65280)) * Val(2005401601)), LAYOUT_LOOKUP(layout1, byte1));
// builtin Add
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:36)
Val x4 = ((x3._super * Val(256)) + x2._super);
EQZ((arg0 - x4), "SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:36)");
return SplitWordStruct{
  .byte0 = x2,   .byte1 = x3};
}
ValU32Struct exec_OpLB(ExecContext& ctx,MemLoadInputStruct arg0, BoundLayout<OpLBLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:86)
Val x2 = (arg0.decoded.opcode._super - Val(3));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpLB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :86:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpLB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :86:18)))");
// builtin Mul
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:87)
Val x3 = (arg0.addr.low1._super * arg0.data._super.high);
// builtin Sub
Val x4 = (Val(1) - arg0.addr.low1._super);
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:88)
SplitWordStruct x5 = exec_SplitWord(ctx,(x3 + (x4 * arg0.data._super.low)), LAYOUT_LOOKUP(layout1, bytes));
// builtin Mul
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:89)
Val x6 = (arg0.addr.low0._super * x5.byte1._super);
// builtin Sub
Val x7 = (Val(1) - arg0.addr.low0._super);
// builtin Add
Val x8 = (x6 + (x7 * x5.byte0._super));
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:90)
NondetRegStruct x9 = exec_NondetBitReg(ctx,(bitAnd(x8, Val(128)) * Val(1997537281)), LAYOUT_LOOKUP(layout1, highBit));
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:91)
NondetRegStruct x10 = exec_NondetU8Reg(ctx,(bitAnd(x8, Val(127)) * Val(2)), LAYOUT_LOOKUP(layout1, low7x2));
// builtin Add
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:92)
Val x11 = ((x9._super * Val(128)) + (x10._super * Val(1006632961)));
EQZ((x8 - x11), "OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:92)");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:93)
ValU32Struct x12 = ValU32Struct{
  .low = (x8 + (x9._super * Val(65280))),   .high = (x9._super * Val(65535))};
return x12;
}
ValU32Struct exec_OpLH(ExecContext& ctx,MemLoadInputStruct arg0, BoundLayout<OpLHLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:97)
Val x2 = (arg0.decoded.opcode._super - Val(3));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpLH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :97:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpLH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :97:18)))");
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:98)
EQZ(arg0.addr.low0._super, "OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:98)");
// builtin Mul
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:99)
Val x4 = (arg0.addr.low1._super * arg0.data._super.high);
// builtin Sub
Val x5 = (Val(1) - arg0.addr.low1._super);
// builtin Add
Val x6 = (x4 + (x5 * arg0.data._super.low));
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:100)
NondetRegStruct x7 = exec_NondetBitReg(ctx,(bitAnd(x6, Val(32768)) * Val(2013204481)), LAYOUT_LOOKUP(layout1, highBit));
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:101)
NondetU16RegStruct x8 = exec_NondetU16Reg(ctx,(bitAnd(x6, Val(32767)) * Val(2)), LAYOUT_LOOKUP(layout1, low15x2));
// builtin Mul
// Div(<preamble>:19)
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:102)
Val x9 = (x8._super._super * Val(1006632961));
// builtin Add
Val x10 = ((x7._super * Val(32768)) + x9);
EQZ((x6 - x10), "OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:102)");
return ValU32Struct{
  .low = x6,   .high = (x7._super * Val(65535))};
}
ValU32Struct exec_OpLBU(ExecContext& ctx,MemLoadInputStruct arg0, BoundLayout<OpLBULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:114)
Val x2 = (arg0.decoded.opcode._super - Val(3));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpLBU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :114:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpLBU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :114:18)))");
// builtin Mul
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:115)
Val x4 = (arg0.addr.low1._super * arg0.data._super.high);
// builtin Sub
Val x5 = (Val(1) - arg0.addr.low1._super);
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:116)
SplitWordStruct x6 = exec_SplitWord(ctx,(x4 + (x5 * arg0.data._super.low)), LAYOUT_LOOKUP(layout1, bytes));
// builtin Mul
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:117)
Val x7 = (arg0.addr.low0._super * x6.byte1._super);
// builtin Sub
Val x8 = (Val(1) - arg0.addr.low0._super);
return ValU32Struct{
  .low = (x7 + (x8 * x6.byte0._super)),   .high = Val(0)};
}
InstOutputBaseStruct exec_Mem0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Mem0Layout> layout2)   {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:50)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
MemLoadInputStruct x4 = exec_MemLoadInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:107)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:55)
Val x5 = (x4.decoded.opcode._super - Val(3));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x6 = (x4.decoded.func3 - Val(2));
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:122)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:57)
Val x7 = (x4.decoded.func3 - Val(5));
// builtin Mul
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:124)
Val x8 = (x4.addr.low1._super * x4.data._super.high);
// builtin Sub
Val x9 = (Val(1) - x4.addr.low1._super);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:41)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:58)
ValU32Struct x10 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
ValU32Struct x11;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:53)
ValU32Struct x12 = exec_OpLB(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm0._super));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:54)
ValU32Struct x13 = exec_OpLH(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm1._super));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = x13;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:107)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:55)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :107:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :55:10))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(x6, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :107:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :55:10))))");
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:108)
EQZ(x4.addr.low0._super, "loc(callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :108:20) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :55:10)))");
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:109)
EQZ(x4.addr.low1._super, "loc(callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :109:20) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :55:10)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = x4.data._super;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:56)
ValU32Struct x14 = exec_OpLBU(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm3._super));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = x14;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:122)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:57)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at callsite( OpLHU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :122:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :57:11))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(x7, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at callsite( OpLHU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :122:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :57:11))))");
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:123)
EQZ(x4.addr.low0._super, "loc(callsite( OpLHU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :123:20) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :57:11)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = ValU32Struct{
  .low = (x8 + (x9 * x4.data._super.low)),   .high = Val(0)};
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:40)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:58)
EQZ(Val(2013265920), "loc(callsite( IllegalLoadOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :40:6) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :58:19)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = x10;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:40)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:59)
EQZ(Val(2013265920), "loc(callsite( IllegalLoadOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :40:6) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :59:19)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = x10;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:40)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:60)
EQZ(Val(2013265920), "loc(callsite( IllegalLoadOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :40:6) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :60:19)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)");
x11 = x10;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:62)
WriteRdStruct x15 = exec_WriteRd(ctx,arg0, x4.ii, x4.decoded, Val(1), x11, LAYOUT_LOOKUP(layout2, _1));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:63)
Val x16 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x17 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x16,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:64)
BigIntTopStateStruct x18 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
return InstOutputBaseStruct{
  .newPc = x17._super,   .newState = Val(48),   .newMode = arg1_0.mode,   .topState = x18};
}
ValU32Struct exec_OpSB(ExecContext& ctx,MemStoreInputStruct arg0, BoundLayout<OpSBLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:129)
Val x2 = (arg0.decoded.opcode._super - Val(35));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at  OpSB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :129:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at  OpSB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :129:18)))");
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:130)
Val x3 = (arg0.addr.low1._super * arg0.data._super.high);
// builtin Sub
Val x4 = (Val(1) - arg0.addr.low1._super);
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:131)
SplitWordStruct x5 = exec_SplitWord(ctx,(x3 + (x4 * arg0.data._super.low)), LAYOUT_LOOKUP(layout1, origBytes));
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:132)
SplitWordStruct x6 = exec_SplitWord(ctx,arg0.rs2.low, LAYOUT_LOOKUP(layout1, newBytes));
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:137)
Val x7 = (arg0.addr.low0._super * x5.byte0._super);
// builtin Sub
Val x8 = (Val(1) - arg0.addr.low0._super);
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:138)
Val x9 = (arg0.addr.low0._super * x6.byte0._super);
Val x10 = (((x8 * x5.byte1._super) + x9) * Val(256));
// builtin Add
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:137)
Val x11 = ((x7 + (x8 * x6.byte0._super)) + x10);
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:141)
Val x12 = (arg0.addr.low1._super * arg0.data._super.low);
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:142)
Val x13 = (arg0.addr.low1._super * x11);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:140)
ValU32Struct x14 = ValU32Struct{
  .low = (x12 + (x4 * x11)),   .high = ((x4 * arg0.data._super.high) + x13)};
return x14;
}
InstOutputBaseStruct exec_Mem1(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Mem1Layout> layout2)   {
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:68)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
MemStoreInputStruct x4 = exec_MemStoreInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:147)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:72)
Val x5 = (x4.decoded.opcode._super - Val(35));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
Val x6 = (x4.decoded.func3 - Val(1));
// builtin Mul
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:153)
Val x7 = (x4.addr.low1._super * x4.data._super.low);
// builtin Sub
Val x8 = (Val(1) - x4.addr.low1._super);
// builtin Mul
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:154)
Val x9 = (x4.addr.low1._super * x4.rs2.low);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:152)
ValU32Struct x10 = ValU32Struct{
  .low = (x7 + (x8 * x4.rs2.low)),   .high = ((x8 * x4.data._super.high) + x9)};
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:159)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:73)
Val x11 = (x4.decoded.func3 - Val(2));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:46)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:74)
ValU32Struct x12 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
ValU32Struct x13;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:71)
ValU32Struct x14 = exec_OpSB(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm0));
x13 = x14;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:147)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:72)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at callsite( OpSH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :147:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :72:10))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(x6, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at callsite( OpSH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :147:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :72:10))))");
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:148)
EQZ(x4.addr.low0._super, "loc(callsite( OpSH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :148:20) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :72:10)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
x13 = x10;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:96)
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:159)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:73)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :96:19) at callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :159:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :73:10))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:97)
EQZ(x11, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :97:18) at callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :159:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :73:10))))");
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:160)
EQZ(x4.addr.low0._super, "loc(callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :160:20) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :73:10)))");
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:161)
EQZ(x4.addr.low1._super, "loc(callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :161:20) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :73:10)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
x13 = x4.rs2;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:45)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:74)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :45:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :74:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
x13 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:45)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:75)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :45:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :75:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
x13 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:45)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:76)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :45:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :76:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
x13 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:45)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:77)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :45:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :77:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
x13 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:45)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:78)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :45:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :78:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)");
x13 = x12;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:80)
MemStoreFinalizeStruct x15 = exec_MemStoreFinalize(ctx,arg0, x4, x13, LAYOUT_LOOKUP(layout2, _1));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:81)
Val x16 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x17 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x16,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:82)
BigIntTopStateStruct x18 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
return InstOutputBaseStruct{
  .newPc = x17._super,   .newState = Val(48),   .newMode = arg1_0.mode,   .topState = x18};
}
DigestRegStruct back_DigestReg(ExecContext& ctx,Index distance0, BoundLayout<DigestRegLayout> layout1)   {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:7)
DigestRegValues_SuperStruct8Array x2 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout1, values), ([&](Val8Array::value_type x3, BoundLayout<DigestRegValues_SuperLayout8LayoutArray::value_type> x4) {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:8)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(x4, low));
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:9)
NondetRegStruct x6 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(x4, high));
return DigestRegValues_SuperStruct{
  .low = x5,   .high = x6};

}));
return DigestRegStruct{
  .values = x2};
}
DigestRegStruct exec_DigestReg(ExecContext& ctx,ValU32Struct8Array arg0, BoundLayout<DigestRegLayout> layout1)   {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:7)
DigestRegValues_SuperStruct8Array x2 = map(arg0, LAYOUT_LOOKUP(layout1, values), ([&](ValU32Struct8Array::value_type x3, BoundLayout<DigestRegValues_SuperLayout8LayoutArray::value_type> x4) {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:8)
NondetRegStruct x5 = exec_Reg(ctx,x3.low, LAYOUT_LOOKUP(x4, low));
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:9)
NondetRegStruct x6 = exec_Reg(ctx,x3.high, LAYOUT_LOOKUP(x4, high));
return DigestRegValues_SuperStruct{
  .low = x5,   .high = x6};

}));
return DigestRegStruct{
  .values = x2};
}
InstOutputBaseStruct exec_ControlLoadRoot(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlLoadRootLayout> layout2, GlobalBuf global3)   {
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:18)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:20)
EQZ(arg1_0.state, "ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:20)");
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:22)
ControlLoadRoot__0Struct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x6, BoundLayout<ControlLoadRoot__0_SuperLayout8LayoutArray::value_type> x7) {
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:23)
GetDataStruct x8 = exec_MemoryPageIn(ctx,arg0, (x6 + Val(1140850680)), LAYOUT_LOOKUP(x7, mem));
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:19)
DigestRegStruct x9 = back_DigestReg(ctx,0, LAYOUT_LOOKUP(x4, stateIn));
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:24)
Val x10 = (x9.values[to_size_t(x6)].low._super - x8._super.low);
EQZ(x10, "ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:24)");
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:19)
DigestRegStruct x11 = back_DigestReg(ctx,0, LAYOUT_LOOKUP(x4, stateIn));
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:25)
Val x12 = (x11.values[to_size_t(x6)].high._super - x8._super.high);
EQZ(x12, "ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:25)");
return ControlLoadRoot__0Struct{
};

}));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:27)
BigIntTopStateStruct x13 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
InstOutputBaseStruct x14 = InstOutputBaseStruct{
  .newPc = ValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newState = Val(16),   .newMode = Val(0),   .topState = x13};
return x14;
}
InstOutputBaseStruct exec_ControlResume(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlResumeLayout> layout2, GlobalBuf global3)   {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:30)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:31)
EQZ((arg1_0.state - Val(1)), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:31)");
// builtin Add
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:33)
Val x5 = (arg1_0.pcU32.low + arg1_0.pcU32.high);
NondetRegStruct x6 = exec_IsZero(ctx,x5, LAYOUT_LOOKUP(layout2, pcZero));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:38)
BigIntTopStateStruct x7 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
InstOutputBaseStruct x8;
if (to_size_t(x6._super)) {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:36)
GetDataStruct x9 = exec_MemoryRead(ctx,arg0, Val(1073725572), LAYOUT_LOOKUP(layout2, _super.arm0._super.pc));
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:37)
GetDataStruct x10 = exec_MemoryRead(ctx,arg0, Val(1073725573), LAYOUT_LOOKUP(layout2, _super.arm0._super.mode));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:38)
InstOutputBaseStruct x11 = InstOutputBaseStruct{
  .newPc = x9._super,   .newState = Val(1),   .newMode = x10._super.low,   .topState = x7};
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
x8 = x11;
} else if (to_size_t((Val(1) - x6._super))) {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:41)
ControlResume_SuperArm1_Super__0Struct8Array x12 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _super.arm1._1), ([&](Val8Array::value_type x13, BoundLayout<ControlResume_SuperArm1_Super__0_SuperLayout8LayoutArray::value_type> x14) {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:40)
DigestRegStruct x15 = back_DigestReg(ctx,0, LAYOUT_LOOKUP(x4, input));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:43)
ValU32Struct x16 = ValU32Struct{
  .low = x15.values[to_size_t(x13)].low._super,   .high = x15.values[to_size_t(x13)].high._super};
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:42)
MemoryWriteStruct x17 = exec_MemoryWrite(ctx,arg0, (x13 + Val(1073725592)), x16, LAYOUT_LOOKUP(x14, _0));
return ControlResume_SuperArm1_Super__0Struct{
};

}));
x8 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = Val(48),   .newMode = arg1_0.mode,   .topState = x7};
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x8;
}
InstOutputBaseStruct exec_ControlUserECALL(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlUserECALLLayout> layout2)   {
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:50)
NondetRegStruct x3 = exec_Reg(ctx,arg1_0.mode, LAYOUT_LOOKUP(layout2, safeMode));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:51)
AddrDecomposeBitsStruct x4 = exec_AddrDecomposeBits(ctx,arg1_0.pcU32, x3._super, LAYOUT_LOOKUP(layout2, pcAddr));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:52)
EQZ(x4.low2, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:52)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:53)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, x4._super, LAYOUT_LOOKUP(layout2, loadInst));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:54)
EQZ(x5._super.high, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:54)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:55)
Val x6 = (x5._super.low - Val(115));
EQZ(x6, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:55)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:56)
EQZ((arg1_0.state - Val(48)), "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:56)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:57)
EQZ(arg1_0.mode, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:57)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:58)
GetDataStruct x7 = exec_MemoryRead(ctx,arg0, Val(1073726464), LAYOUT_LOOKUP(layout2, newPcAddr));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:59)
MemoryWriteStruct x8 = exec_MemoryWrite(ctx,arg0, Val(1073725568), arg1_0.pcU32, LAYOUT_LOOKUP(layout2, _0));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:60)
BigIntTopStateStruct x9 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
return InstOutputBaseStruct{
  .newPc = x7._super,   .newState = Val(48),   .newMode = Val(1),   .topState = x9};
}
InstOutputBaseStruct exec_ControlMRET(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlMRETLayout> layout2)   {
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:64)
NondetRegStruct x3 = exec_Reg(ctx,arg1_0.mode, LAYOUT_LOOKUP(layout2, safeMode));
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:65)
AddrDecomposeBitsStruct x4 = exec_AddrDecomposeBits(ctx,arg1_0.pcU32, x3._super, LAYOUT_LOOKUP(layout2, pcAddr));
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:66)
EQZ(x4.low2, "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:66)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:67)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, x4._super, LAYOUT_LOOKUP(layout2, loadInst));
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:68)
Val x6 = (x5._super.high - Val(12320));
EQZ(x6, "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:68)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:69)
Val x7 = (x5._super.low - Val(115));
EQZ(x7, "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:69)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:70)
EQZ((arg1_0.state - Val(48)), "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:70)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:71)
EQZ((arg1_0.mode - Val(1)), "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:71)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:72)
GetDataStruct x8 = exec_MemoryRead(ctx,arg0, Val(1073725568), LAYOUT_LOOKUP(layout2, pc));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:73)
Val x9 = (x8._super.low + Val(4));
NormalizeU32Struct x10 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x9,   .high = x8._super.high}, LAYOUT_LOOKUP(layout2, pcAdd));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:74)
BigIntTopStateStruct x11 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
return InstOutputBaseStruct{
  .newPc = x10._super,   .newState = Val(48),   .newMode = Val(0),   .topState = x11};
}
InstOutputBaseStruct exec_ControlSuspend(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlSuspendLayout> layout2, GlobalBuf global3)   {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:77)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// builtin Add
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:79)
Val x5 = (arg1_0.pcU32.low + arg1_0.pcU32.high);
NondetRegStruct x6 = exec_IsZero(ctx,x5, LAYOUT_LOOKUP(layout2, pcZero));
// builtin Component
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:88)
ComponentStruct x7 = ComponentStruct{
};
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:96)
ValU32Struct x8 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
BigIntTopStateStruct x9 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
InstOutputBaseStruct x10;
if (to_size_t(x6._super)) {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:81)
EQZ((arg1_0.state - Val(4)), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:81)");
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:86)
GetDataStruct8Array x11 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _super.arm0._1), ([&](Val8Array::value_type x12, BoundLayout<MemoryReadLayout8LayoutArray::value_type> x13) {
GetDataStruct x14 = exec_MemoryRead(ctx,arg0, (x12 + Val(1073725584)), x13);
return x14;

}));
ValU32Struct8Array x15 = ValU32Struct8Array{x11[0]._super, x11[1]._super, x11[2]._super, x11[3]._super, x11[4]._super, x11[5]._super, x11[6]._super, x11[7]._super};
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:85)
DigestRegStruct x16 = exec_DigestReg(ctx,x15, LAYOUT_LOOKUP(x4, output));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:83)
NondetRegStruct x17 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, isTerminate));
// builtin Sub
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:88)
Val x18 = (Val(1) - x17._super);
ComponentStruct x19;
if (to_size_t(x18)) {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:89)
NondetRegStruct x20 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA0low));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:90)
NondetRegStruct x21 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA0high));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:91)
NondetRegStruct x22 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA1low));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:92)
NondetRegStruct x23 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA1high));
x19 = x7;
} else if (to_size_t((Val(1) - x18))) {
x19 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x10 = InstOutputBaseStruct{
  .newPc = x8,   .newState = Val(16),   .newMode = Val(3),   .topState = x9};
} else if (to_size_t((Val(1) - x6._super))) {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:100)
NondetRegStruct x24 = exec_Reg(ctx,arg1_0.state, LAYOUT_LOOKUP(layout2, _super.arm1._super.state));
// builtin Sub
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:101)
Val x25 = (x24._super - Val(48));
EQZ((x25 * (x24._super - Val(4))), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:101)");
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:104)
NondetRegStruct x26 = exec_Reg(ctx,(x25 * Val(1875997790)), LAYOUT_LOOKUP(x4, isTerminate));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:106)
MemoryWriteStruct x27 = exec_MemoryWrite(ctx,arg0, Val(1073725572), arg1_0.pcU32, LAYOUT_LOOKUP(layout2, _super.arm1._super._0));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:107)
MemoryWriteStruct x28 = exec_MemoryWrite(ctx,arg0, Val(1073725573), ValU32Struct{
  .low = arg1_0.mode,   .high = Val(0)}, LAYOUT_LOOKUP(layout2, _super.arm1._super._1));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
x10 = InstOutputBaseStruct{
  .newPc = x8,   .newState = Val(4),   .newMode = arg1_0.mode,   .topState = x9};
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x10;
}
InstOutputBaseStruct exec_ControlStoreRoot(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlStoreRootLayout> layout2, GlobalBuf global3)   {
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:113)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:114)
EQZ((arg1_0.state - Val(5)), "ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:114)");
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:116)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x6, BoundLayout<MemoryPageOutLayout8LayoutArray::value_type> x7) {
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:117)
GetDataStruct x8 = exec_MemoryPageOut(ctx,arg0, (x6 + Val(1140850680)), x7);
return x8;

}));
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:116)
ValU32Struct8Array x9 = ValU32Struct8Array{x5[0]._super, x5[1]._super, x5[2]._super, x5[3]._super, x5[4]._super, x5[5]._super, x5[6]._super, x5[7]._super};
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:115)
DigestRegStruct x10 = exec_DigestReg(ctx,x9, LAYOUT_LOOKUP(x4, stateOut));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:120)
BigIntTopStateStruct x11 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
InstOutputBaseStruct x12 = InstOutputBaseStruct{
  .newPc = ValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newState = Val(6),   .newMode = Val(0),   .topState = x11};
return x12;
}
InstOutputBaseStruct exec_ControlTable(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlTableLayout> layout2)   {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:124)
EQZ((arg1_0.state - Val(6)), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:124)");
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:125)
NondetRegStruct x3 = exec_Reg(ctx,arg1_0.pcU32.low, LAYOUT_LOOKUP(layout2, entry));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:126)
NondetRegStruct x4 = exec_Reg(ctx,arg1_0.mode, LAYOUT_LOOKUP(layout2, mode));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:130)
Val16Array x5 = Val16Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15)};
// builtin Add
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:135)
Val x6 = (x3._super + Val(16));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:138)
ValU32Struct x7 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
BigIntTopStateStruct x8 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:140)
ValU32Struct x9 = ValU32Struct{
  .low = x6,   .high = Val(0)};
InstOutputBaseStruct x10;
if (to_size_t(x4._super)) {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:130)
ControlTable_SuperArm0_Super__0Struct16Array x11 = map(x5, LAYOUT_LOOKUP(layout2, _super.arm0._super._1), ([&](Val16Array::value_type x12, BoundLayout<ControlTable_SuperArm0_Super__0_SuperLayout16LayoutArray::value_type> x13) {
// builtin Add
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:131)
Val x14 = (x3._super + x12);
// LookupCurrent(zirgen/circuit/rv32im/v2/dsl/lookups.zir:5)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)
Val x15 = INVOKE_EXTERN(ctx,lookupCurrent, Val(16), x14);
ArgU16Struct x16 = exec_ArgU16(ctx,neg_0(x15), x14, LAYOUT_LOOKUP(x13, arg));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:133)
Val x17 = (x16.val._super - x14);
EQZ(x17, "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:133)");
return ControlTable_SuperArm0_Super__0Struct{
};

}));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:136)
NondetRegStruct x18 = exec_IsZero(ctx,(x6 - Val(65536)), LAYOUT_LOOKUP(layout2, _super.arm0._super.done));
InstOutputBaseStruct x19;
if (to_size_t(x18._super)) {
x19 = InstOutputBaseStruct{
  .newPc = x7,   .newState = Val(7),   .newMode = Val(0),   .topState = x8};
} else if (to_size_t((Val(1) - x18._super))) {
x19 = InstOutputBaseStruct{
  .newPc = x9,   .newState = Val(6),   .newMode = Val(1),   .topState = x8};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
x10 = x19;
} else if (to_size_t((Val(1) - x4._super))) {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:144)
ControlTable_SuperArm1_Super__0Struct16Array x20 = map(x5, LAYOUT_LOOKUP(layout2, _super.arm1._super._1), ([&](Val16Array::value_type x21, BoundLayout<ControlTable_SuperArm1_Super__0_SuperLayout16LayoutArray::value_type> x22) {
// builtin Add
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:145)
Val x23 = (x3._super + x21);
// LookupCurrent(zirgen/circuit/rv32im/v2/dsl/lookups.zir:5)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:146)
Val x24 = INVOKE_EXTERN(ctx,lookupCurrent, Val(8), x23);
ArgU8Struct x25 = exec_ArgU8(ctx,neg_0(x24), x23, LAYOUT_LOOKUP(x22, arg));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:147)
Val x26 = (x25.val._super - x23);
EQZ(x26, "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:147)");
return ControlTable_SuperArm1_Super__0Struct{
};

}));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:150)
NondetRegStruct x27 = exec_IsZero(ctx,(x6 - Val(256)), LAYOUT_LOOKUP(layout2, _super.arm1._super.done));
InstOutputBaseStruct x28;
if (to_size_t(x27._super)) {
x28 = InstOutputBaseStruct{
  .newPc = x7,   .newState = Val(6),   .newMode = Val(1),   .topState = x8};
} else if (to_size_t((Val(1) - x27._super))) {
x28 = InstOutputBaseStruct{
  .newPc = x9,   .newState = Val(6),   .newMode = Val(0),   .topState = x8};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
x10 = x28;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x10;
}
InstOutputBaseStruct exec_ControlDone(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlDoneLayout> layout2, GlobalBuf global3)   {
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:159)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:160)
EQZ((arg1_0.state - Val(7)), "ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:160)");
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:161)
NondetRegStruct x5 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, isTerminate));
// builtin Mul
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:163)
Val x6 = ((Val(1) - arg1_0.mode) * (Val(1) - x5._super));
// builtin Component
ComponentStruct x7 = ComponentStruct{
};
ComponentStruct x8;
if (to_size_t(x6)) {
// Log(<preamble>:22)
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:164)
INVOKE_EXTERN(ctx,log, "Verifying end state", std::initializer_list<Val>{});
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:162)
NondetRegStruct x9 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, shutdownCycle));
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:165)
IsCycleStruct x10 = exec_IsCycle(ctx,(arg0._super - x9._super), LAYOUT_LOOKUP(layout2, _2.arm0._0));
x8 = x7;
} else if (to_size_t((Val(1) - x6))) {
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:163)
STORE(LAYOUT_LOOKUP(layout2, _2.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _2.arm1._extra0.count._super), 0), "ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:163)");
x8 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:169)
BigIntTopStateStruct x11 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
InstOutputBaseStruct x12 = InstOutputBaseStruct{
  .newPc = ValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newState = Val(7),   .newMode = Val(1),   .topState = x11};
return x12;
}
InstOutputBaseStruct exec_Control0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Control0Layout> layout2, GlobalBuf global3)   {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:173)
DoCycleTableStruct x4 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
InstOutputBaseStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:175)
InstOutputBaseStruct x6 = exec_ControlLoadRoot(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm0._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:176)
InstOutputBaseStruct x7 = exec_ControlResume(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm1._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x7;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:177)
InstOutputBaseStruct x8 = exec_ControlUserECALL(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm2._super));
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra40.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra41.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra42.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra43.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra44.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
InstOutputBaseStruct x9 = exec_ControlMRET(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm3._super));
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra40.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra41.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra42.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra43.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra44.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra45.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:179)
InstOutputBaseStruct x10 = exec_ControlSuspend(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm4._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x10;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:180)
InstOutputBaseStruct x11 = exec_ControlStoreRoot(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm5._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x11;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:181)
InstOutputBaseStruct x12 = exec_ControlTable(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm6._super));
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:182)
InstOutputBaseStruct x13 = exec_ControlDone(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm7._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra40.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra41.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra42.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra43.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra44.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra45.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra46.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra46.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra47.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra47.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra48.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra48.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra49.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra49.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra50.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra50.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra51.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra51.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra52.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra52.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra53.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra53.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra54.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra54.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:174)");
x5 = x13;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x5;
}
OneHot_6_Struct exec_OneHot_6_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_6_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct6Array x2 = map(Val6Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val6Array::value_type x3, BoundLayout<NondetRegLayout6LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// builtin Add
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
Val x8 = ((x7 + x2[4]._super) + x2[5]._super);
EQZ((x8 - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// builtin Mul
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x9 = (x2[2]._super * Val(2));
Val x10 = (x2[3]._super * Val(3));
Val x11 = (x2[4]._super * Val(4));
Val x12 = (x2[5]._super * Val(5));
// builtin Add
Val x13 = (x2[1]._super + x9);
Val x14 = (((x13 + x10) + x11) + x12);
EQZ((x14 - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_6_Struct{
  ._super = x2};
}
ECallOutputStruct exec_MachineECall(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, BoundLayout<MachineECallLayout> layout3)   {
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:26)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout3, loadInst));
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:27)
EQZ((arg1_0.state - Val(48)), "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:27)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:28)
EQZ(x4._super.high, "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:28)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:29)
Val x5 = (x4._super.low - Val(115));
EQZ(x5, "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:29)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:30)
EQZ((arg1_0.mode - Val(1)), "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:30)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:31)
GetDataStruct x6 = exec_MemoryRead(ctx,arg0, Val(1073725457), LAYOUT_LOOKUP(layout3, dispatchIdx));
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:32)
EQZ(x6._super.high, "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:32)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:33)
OneHot_6_Struct x7 = exec_OneHot_6_(ctx,x6._super.low, LAYOUT_LOOKUP(layout3, dispatch));
Val x8;
if (to_size_t(x7._super[0]._super)) {
x8 = Val(9);
} else if (to_size_t(x7._super[1]._super)) {
x8 = Val(10);
} else if (to_size_t(x7._super[2]._super)) {
x8 = Val(11);
} else if (to_size_t(x7._super[3]._super)) {
x8 = Val(16);
} else if (to_size_t(x7._super[4]._super)) {
x8 = Val(32);
} else if (to_size_t(x7._super[5]._super)) {
x8 = Val(40);
} else {
   assert(0 && "Reached unreachable mux arm");
}
return ECallOutputStruct{
  .state = x8,   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
}
ECallOutputStruct exec_ECallTerminate(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECallTerminateLayout> layout2, GlobalBuf global3)   {
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:45)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:46)
EQZ((arg1_0.state - Val(9)), "ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:46)");
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:47)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725450), LAYOUT_LOOKUP(layout2, a0));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:48)
GetDataStruct x6 = exec_MemoryRead(ctx,arg0, Val(1073725451), LAYOUT_LOOKUP(layout2, a1));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:49)
NondetRegStruct x7 = exec_Reg(ctx,x5._super.low, LAYOUT_LOOKUP(x4, termA0low));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:50)
NondetRegStruct x8 = exec_Reg(ctx,x5._super.high, LAYOUT_LOOKUP(x4, termA0high));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:51)
NondetRegStruct x9 = exec_Reg(ctx,x6._super.low, LAYOUT_LOOKUP(x4, termA1low));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:52)
NondetRegStruct x10 = exec_Reg(ctx,x6._super.high, LAYOUT_LOOKUP(x4, termA1high));
return ECallOutputStruct{
  .state = Val(4),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
}
OneHot_4_Struct exec_OneHot_4_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_4_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct4Array x2 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val4Array::value_type x3, BoundLayout<NondetRegLayout4LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// builtin Add
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
EQZ((x7 - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// builtin Mul
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x8 = (x2[2]._super * Val(2));
Val x9 = (x2[3]._super * Val(3));
// builtin Add
Val x10 = (x2[1]._super + x8);
EQZ(((x10 + x9) - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_4_Struct{
  ._super = x2};
}
DecomposeLow2Struct exec_DecomposeLow2(ExecContext& ctx,Val arg0, BoundLayout<DecomposeLow2Layout> layout1)   {
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:59)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,(bitAnd(arg0, Val(65532)) * Val(1509949441)), LAYOUT_LOOKUP(layout1, high));
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:60)
NondetRegStruct x3 = exec_NondetReg(ctx,bitAnd(arg0, Val(3)), LAYOUT_LOOKUP(layout1, low2));
// builtin Mul
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:61)
Val x4 = (x2._super._super * Val(4));
EQZ((arg0 - (x4 + x3._super)), "DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:61)");
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:62)
OneHot_4_Struct x5 = exec_OneHot_4_(ctx,x3._super, LAYOUT_LOOKUP(layout1, low2Hot));
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:63)
NondetRegStruct x6 = exec_IsZero(ctx,x2._super._super, LAYOUT_LOOKUP(layout1, highZero));
// builtin Mul
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:64)
Val x7 = (x6._super * x5._super[0]._super);
NondetRegStruct x8 = exec_Reg(ctx,x7, LAYOUT_LOOKUP(layout1, isZero));
// builtin Add
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:66)
Val x9 = (x5._super[1]._super + x5._super[2]._super);
return DecomposeLow2Struct{
  .high = x2,   .low2 = x3,   .low2Hot = x5,   .highZero = x6,   .isZero = x8,   .low2Nonzero = (x9 + x5._super[3]._super)};
}
ECallOutputStruct exec_ECallHostReadSetup(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECallHostReadSetupLayout> layout2)   {
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:70)
EQZ((arg1_0.state - Val(10)), "ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:70)");
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:72)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, Val(1073725450), LAYOUT_LOOKUP(layout2, fd));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:73)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, Val(1073725451), LAYOUT_LOOKUP(layout2, ptr));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:74)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725452), LAYOUT_LOOKUP(layout2, len));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:76)
EQZ(x5._super.high, "ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:76)");
// HostReadPrepare(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:7)
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:78)
Val x6 = INVOKE_EXTERN(ctx,hostReadPrepare, x3._super.low, x5._super.low);
NondetU16RegStruct x7 = exec_NondetU16Reg(ctx,x6, LAYOUT_LOOKUP(layout2, newLen));
// builtin Sub
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:80)
Val x8 = (x5._super.low - x7._super._super);
NondetU16RegStruct x9 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, diff));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:82)
ValU32Struct x10 = ValU32Struct{
  .low = x7._super._super,   .high = Val(0)};
MemoryWriteStruct x11 = exec_MemoryWrite(ctx,arg0, Val(1073725450), x10, LAYOUT_LOOKUP(layout2, _0));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:84)
DecomposeLow2Struct x12 = exec_DecomposeLow2(ctx,x4._super.low, LAYOUT_LOOKUP(layout2, ptrDecomp));
// builtin Mul
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:85)
Val x13 = (x4._super.high * Val(16384));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:86)
DecomposeLow2Struct x14 = exec_DecomposeLow2(ctx,x7._super._super, LAYOUT_LOOKUP(layout2, lenDecomp));
// builtin Mul
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:88)
Val x15 = (x14.highZero._super * x14.low2Nonzero);
NondetRegStruct x16 = exec_Reg(ctx,x15, LAYOUT_LOOKUP(layout2, len123));
// builtin Sub
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:90)
Val x17 = ((x16._super + x12.low2Nonzero) - (x16._super * x12.low2Nonzero));
NondetRegStruct x18 = exec_Reg(ctx,x17, LAYOUT_LOOKUP(layout2, uneven));
// builtin Mul
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:94)
Val x19 = (x14.isZero._super * Val(48));
// builtin Sub
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:96)
Val x20 = (Val(1) - x14.isZero._super);
// builtin Add
Val x21 = ((x19 + ((x20 * x18._super) * Val(12))) + ((x20 * (Val(1) - x18._super)) * Val(13)));
return ECallOutputStruct{
  .state = x21,   .s0 = (x13 + x12.high._super._super),   .s1 = x12.low2._super,   .s2 = x7._super._super};
}
ECallOutputStruct exec_ECallHostWrite(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECallHostWriteLayout> layout2)   {
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:103)
EQZ((arg1_0.state - Val(11)), "ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:103)");
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:105)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, Val(1073725450), LAYOUT_LOOKUP(layout2, fd));
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:106)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, Val(1073725451), LAYOUT_LOOKUP(layout2, ptr));
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:107)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725452), LAYOUT_LOOKUP(layout2, len));
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:108)
EQZ(x3._super.high, "ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:108)");
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:109)
EQZ(x5._super.high, "ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:109)");
// HostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:10)
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:111)
Val x6 = INVOKE_EXTERN(ctx,hostWrite, x3._super.low, x4._super.low, x4._super.high, x5._super.low);
NondetU16RegStruct x7 = exec_NondetU16Reg(ctx,x6, LAYOUT_LOOKUP(layout2, newLen));
// builtin Sub
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:113)
Val x8 = (x5._super.low - x7._super._super);
NondetU16RegStruct x9 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, diff));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:115)
ValU32Struct x10 = ValU32Struct{
  .low = x7._super._super,   .high = Val(0)};
MemoryWriteStruct x11 = exec_MemoryWrite(ctx,arg0, Val(1073725450), x10, LAYOUT_LOOKUP(layout2, _0));
return ECallOutputStruct{
  .state = Val(48),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
}
ECallOutputStruct exec_ECallHostReadBytes(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, Val arg3, Val arg4, BoundLayout<ECallHostReadBytesLayout> layout5)   {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:121)
EQZ((arg1_0.state - Val(12)), "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:121)");
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:123)
Val x6 = (arg4 - Val(1));
DecomposeLow2Struct x7 = exec_DecomposeLow2(ctx,x6, LAYOUT_LOOKUP(layout5, lenDecomp));
// builtin Mul
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:125)
Val x8 = (x7.highZero._super * x7.low2Nonzero);
NondetRegStruct x9 = exec_Reg(ctx,x8, LAYOUT_LOOKUP(layout5, len123));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:127)
NondetRegStruct x10 = exec_IsZero(ctx,(arg3 - Val(3)), LAYOUT_LOOKUP(layout5, nextPtrEven));
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:128)
Val x11 = (Val(1) - x10._super);
// builtin Add
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:129)
Val x12 = ((x10._super * (arg2_0 + Val(1))) + (x11 * arg2_0));
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:132)
Val x13 = ((x9._super + x11) - (x9._super * x11));
NondetRegStruct x14 = exec_Reg(ctx,x13, LAYOUT_LOOKUP(layout5, uneven));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:134)
NondetRegStruct x15 = exec_IsZero(ctx,x6, LAYOUT_LOOKUP(layout5, lenZero));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:136)
NondetRegStruct x16 = exec_NondetBitReg(ctx,bitAnd(arg3, Val(1)), LAYOUT_LOOKUP(layout5, low0));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:137)
NondetRegStruct x17 = exec_BitReg(ctx,((arg3 - x16._super) * Val(1006632961)), LAYOUT_LOOKUP(layout5, low1));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:139)
GetDataStruct x18 = exec_MemoryRead(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout5, origWord));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:141)
MemoryWriteUnconstrainedStruct x19 = exec_MemoryWriteUnconstrained(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout5, _0));
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:143)
Val x20 = (Val(1) - x17._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:144)
Val x21 = (x18._super.low - x19.io.newTxn.dataLow._super);
// builtin Component
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:143)
ComponentStruct x22 = ComponentStruct{
};
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:146)
Val x23 = (x18._super.high - x19.io.newTxn.dataHigh._super);
ComponentStruct x24;
if (to_size_t(x17._super)) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:144)
EQZ(x21, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:144)");
x24 = x22;
} else if (to_size_t(x20)) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:146)
EQZ(x23, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:146)");
x24 = x22;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Mul
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:149)
Val x25 = (x17._super * x18._super.high);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:150)
Val x26 = (x17._super * x19.io.newTxn.dataHigh._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:152)
SplitWordStruct x27 = exec_SplitWord(ctx,(x25 + (x20 * x18._super.low)), LAYOUT_LOOKUP(layout5, oldBytes));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:153)
SplitWordStruct x28 = exec_SplitWord(ctx,(x26 + (x20 * x19.io.newTxn.dataLow._super)), LAYOUT_LOOKUP(layout5, newBytes_0));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:156)
Val x29 = (x27.byte0._super - x28.byte0._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:158)
Val x30 = (x27.byte1._super - x28.byte1._super);
ComponentStruct x31;
if (to_size_t(x16._super)) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:156)
EQZ(x29, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:156)");
x31 = x22;
} else if (to_size_t((Val(1) - x16._super))) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:158)
EQZ(x30, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:158)");
x31 = x22;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:164)
Val x32 = (Val(1) - x15._super);
// builtin Add
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:162)
Val x33 = ((x15._super * Val(48)) + ((x32 * x14._super) * Val(12)));
return ECallOutputStruct{
  .state = (x33 + ((x32 * (Val(1) - x14._super)) * Val(13))),   .s0 = x12,   .s1 = (x11 * (arg3 + Val(1))),   .s2 = x6};
}
ECallOutputStruct exec_ECallHostReadWords(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, Val arg3, BoundLayout<ECallHostReadWordsLayout> layout4)   {
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:171)
EQZ((arg1_0.state - Val(13)), "ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:171)");
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:172)
DecomposeLow2Struct x5 = exec_DecomposeLow2(ctx,arg3, LAYOUT_LOOKUP(layout4, lenDecomp));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:173)
DecomposeLow2Struct x6 = exec_DecomposeLow2(ctx,x5.high._super._super, LAYOUT_LOOKUP(layout4, wordsDecomp));
// builtin Add
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:175)
Val x7 = (x6.low2Hot._super[1]._super + x6.low2Hot._super[2]._super);
// builtin Mul
Val x8 = ((x7 + x6.low2Hot._super[3]._super) * x6.highZero._super);
// builtin Sub
Val x9 = (Val(1) - x6.highZero._super);
// builtin Add
Val x10 = (x8 + x9);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:176)
Val x11 = (x6.low2Hot._super[2]._super + x6.low2Hot._super[3]._super);
Val x12 = ((x11 * x6.highZero._super) + x9);
// builtin Mul
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:177)
Val x13 = (x6.low2Hot._super[3]._super * x6.highZero._super);
// builtin Add
Val x14 = (x13 + x9);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:180)
Val x15 = (((x10 + x12) + x14) + x9);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:181)
ECallHostReadWords__0Struct4Array x16 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout4, _1), ([&](Val4Array::value_type x17, BoundLayout<ECallHostReadWords__0_SuperLayout4LayoutArray::value_type> x18) {
// builtin Mul
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:182)
Val x19 = (Val4Array{x10, x12, x14, x9}[to_size_t(x17)] * (arg2_0 + x17));
// builtin Sub
Val x20 = (Val(1) - Val4Array{x10, x12, x14, x9}[to_size_t(x17)]);
NondetRegStruct x21 = exec_Reg(ctx,(x19 + (x20 * (x17 + Val(1073725504)))), LAYOUT_LOOKUP(x18, addr));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:183)
MemoryWriteUnconstrainedStruct x22 = exec_MemoryWriteUnconstrained(ctx,arg0, x21._super, LAYOUT_LOOKUP(x18, _0));
return ECallHostReadWords__0Struct{
};

}));
// builtin Sub
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:185)
Val x23 = (x5.high._super._super - x15);
NondetRegStruct x24 = exec_IsZero(ctx,x23, LAYOUT_LOOKUP(layout4, newLenHighZero));
// builtin Mul
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:186)
Val x25 = (x24._super * (Val(1) - x5.low2Nonzero));
NondetRegStruct x26 = exec_Reg(ctx,x25, LAYOUT_LOOKUP(layout4, lenZero));
// builtin Sub
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:191)
Val x27 = (Val(1) - x26._super);
// builtin Add
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:189)
Val x28 = ((x26._super * Val(48)) + ((x27 * x24._super) * Val(12)));
return ECallOutputStruct{
  .state = (x28 + ((x27 * (Val(1) - x24._super)) * Val(13))),   .s0 = (arg2_0 + x15),   .s1 = Val(0),   .s2 = (arg3 - (x15 * Val(4)))};
}
InstOutputBaseStruct exec_ECall0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECall0Layout> layout2, GlobalBuf global3)   {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:201)
DoCycleTableStruct x4 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:202)
AddrDecomposeBitsStruct x5 = exec_AddrDecomposeBits(ctx,arg1_0.pcU32, arg1_0.mode, LAYOUT_LOOKUP(layout2, pcAddr));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:203)
EQZ(x5.low2, "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:203)");
// ECallOutput(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:12)
// IllegalECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:21)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:211)
ECallOutputStruct x6 = ECallOutputStruct{
  .state = Val(0),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
ECallOutputStruct x7;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:205)
ECallOutputStruct x8 = exec_MachineECall(ctx,arg0, arg1_0, x5._super, LAYOUT_LOOKUP(layout2, output.arm0._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:206)
ECallOutputStruct x9 = exec_ECallTerminate(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, output.arm1._super), global3);
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:207)
ECallOutputStruct x10 = exec_ECallHostReadSetup(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, output.arm2._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x10;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:208)
ECallOutputStruct x11 = exec_ECallHostWrite(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, output.arm3._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x11;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:209)
NondetRegStruct x12 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s0));
NondetRegStruct x13 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s1));
NondetRegStruct x14 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s2));
ECallOutputStruct x15 = exec_ECallHostReadBytes(ctx,arg0, arg1_0, x12._super, x13._super, x14._super, LAYOUT_LOOKUP(layout2, output.arm4._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x15;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:210)
NondetRegStruct x16 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s0));
NondetRegStruct x17 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s2));
ECallOutputStruct x18 = exec_ECallHostReadWords(ctx,arg0, arg1_0, x16._super, x17._super, LAYOUT_LOOKUP(layout2, output.arm5._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x18;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// IllegalECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:20)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:211)
EQZ(Val(2013265920), "loc(callsite( IllegalECall ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :20:6) at  ECall0 ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :211:18)))");
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra14.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra15.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra16.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra17.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra18.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra19.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// IllegalECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:20)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:212)
EQZ(Val(2013265920), "loc(callsite( IllegalECall ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :20:6) at  ECall0 ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :212:18)))");
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra14.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra15.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra16.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra17.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra18.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra19.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x6;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:214)
NondetRegStruct x19 = exec_Reg(ctx,x7.s0, LAYOUT_LOOKUP(layout2, s0));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:215)
NondetRegStruct x20 = exec_Reg(ctx,x7.s1, LAYOUT_LOOKUP(layout2, s1));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:216)
NondetRegStruct x21 = exec_Reg(ctx,x7.s2, LAYOUT_LOOKUP(layout2, s2));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:217)
NondetRegStruct x22 = exec_IsZero(ctx,(x7.state - Val(4)), LAYOUT_LOOKUP(layout2, isSuspend));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:218)
NondetRegStruct x23 = exec_IsZero(ctx,(x7.state - Val(48)), LAYOUT_LOOKUP(layout2, isDecode));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:219)
NondetRegStruct x24 = exec_IsZero(ctx,(x7.state - Val(16)), LAYOUT_LOOKUP(layout2, isP2Entry));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:220)
NondetRegStruct x25 = exec_IsZero(ctx,(x7.state - Val(32)), LAYOUT_LOOKUP(layout2, isShaEcall));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:221)
NondetRegStruct x26 = exec_IsZero(ctx,(x7.state - Val(40)), LAYOUT_LOOKUP(layout2, isBigIntEcall));
// builtin Add
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:222)
Val x27 = ((x22._super + x23._super) + x24._super);
// builtin Mul
Val x28 = (((x27 + x25._super) + x26._super) * Val(4));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
Val x29 = (arg1_0.pcU32.low + x28);
NormalizeU32Struct x30 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x29,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, addPC));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:223)
BigIntTopStateStruct x31 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
return InstOutputBaseStruct{
  .newPc = x30._super,   .newState = x7.state,   .newMode = Val(1),   .topState = x31};
}
NondetRegStruct exec_SBox(ExecContext& ctx,Val arg0, BoundLayout<SBoxLayout> layout1)   {
// SBox(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:25)
NondetRegStruct x2 = exec_Reg(ctx,((arg0 * arg0) * arg0), LAYOUT_LOOKUP(layout1, cubed));
// builtin Mul
// SBox(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:26)
Val x3 = ((x2._super * x2._super) * arg0);
NondetRegStruct x4 = exec_Reg(ctx,x3, LAYOUT_LOOKUP(layout1, _super));
return x4;
}
MultiplyByMIntStruct exec_DoIntRound(ExecContext& ctx,Val24Array arg0, Val arg1_0, BoundLayout<DoIntRoundLayout> layout2)   {
// DoIntRound(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:32)
NondetRegStruct x3 = exec_SBox(ctx,(arg0[0] + arg1_0), LAYOUT_LOOKUP(layout2, sbox));
// builtin Add
// MultiplyByMInt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:13)
// DoIntRound(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:34)
Val x4 = ((x3._super + arg0[1]) + arg0[2]);
Val x5 = (((x4 + arg0[3]) + arg0[4]) + arg0[5]);
Val x6 = (((x5 + arg0[6]) + arg0[7]) + arg0[8]);
Val x7 = (((x6 + arg0[9]) + arg0[10]) + arg0[11]);
Val x8 = (((x7 + arg0[12]) + arg0[13]) + arg0[14]);
Val x9 = (((x8 + arg0[15]) + arg0[16]) + arg0[17]);
Val x10 = (((x9 + arg0[18]) + arg0[19]) + arg0[20]);
Val x11 = (((x10 + arg0[21]) + arg0[22]) + arg0[23]);
// MultiplyByMInt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:14)
MultiplyByMInt_Super_SuperStruct24Array x12 = MultiplyByMInt_Super_SuperStruct24Array{MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (x3._super * Val(1083257840)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[1] * Val(375892129)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[2] * Val(111593398)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[3] * Val(1867716110)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[4] * Val(658182609)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[5] * Val(51866717)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[6] * Val(1928969209)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[7] * Val(1942928017)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[8] * Val(1558116381)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[9] * Val(20525701)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[10] * Val(1188752902)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[11] * Val(106789798)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[12] * Val(1389833583)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[13] * Val(98371040)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[14] * Val(1001081699)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[15] * Val(1792686146)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[16] * Val(801504236)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[17] * Val(1997365680)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[18] * Val(1461037801)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[19] * Val(65998480)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[20] * Val(1974912880)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[21] * Val(606789471)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[22] * Val(13683276)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11 + (arg0[23] * Val(918610824)))}};
return MultiplyByMIntStruct{
  ._super = x12};
}
DoIntRoundsStruct exec_DoIntRounds(ExecContext& ctx,Val24Array arg0, BoundLayout<DoIntRoundsLayout> layout1)   {
// DoIntRounds(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:38)
DoIntRounds__0_SuperStruct21Array x2 = DoIntRounds__0_SuperStruct21Array{DoIntRounds__0_SuperStruct{
  ._super = Val(497520322)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1930103076)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1052077299)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1540960371)}, DoIntRounds__0_SuperStruct{
  ._super = Val(924863639)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1365519753)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1726563304)}, DoIntRounds__0_SuperStruct{
  ._super = Val(440300254)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1891545577)}, DoIntRounds__0_SuperStruct{
  ._super = Val(822033215)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1111544260)}, DoIntRounds__0_SuperStruct{
  ._super = Val(308575117)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1708681573)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1240419708)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1199068823)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1186174623)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1551596046)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1886977120)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1327682690)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1210751726)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1810596765)}};
Val24Array x3 = reduce(x2, arg0, LAYOUT_LOOKUP(layout1, _super), ([&](Val24Array x4, DoIntRounds__0_SuperStruct21Array::value_type x5, BoundLayout<DoIntRoundLayout21LayoutArray::value_type> x6) {
MultiplyByMIntStruct x7 = exec_DoIntRound(ctx,x4, x5._super, x6);
Val24Array x8 = Val24Array{x7._super[0]._super, x7._super[1]._super, x7._super[2]._super, x7._super[3]._super, x7._super[4]._super, x7._super[5]._super, x7._super[6]._super, x7._super[7]._super, x7._super[8]._super, x7._super[9]._super, x7._super[10]._super, x7._super[11]._super, x7._super[12]._super, x7._super[13]._super, x7._super[14]._super, x7._super[15]._super, x7._super[16]._super, x7._super[17]._super, x7._super[18]._super, x7._super[19]._super, x7._super[20]._super, x7._super[21]._super, x7._super[22]._super, x7._super[23]._super};
return x8;

}));
return DoIntRoundsStruct{
  ._super = x3};
}
MultiplyByMExtStruct exec_DoExtRound(ExecContext& ctx,Val24Array arg0, Val24Array arg1_0, BoundLayout<DoExtRoundLayout> layout2)   {
// DoExtRound(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:103)
NondetRegStruct24Array x3 = map(Val24Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val24Array::value_type x4, BoundLayout<SBoxLayout24LayoutArray::value_type> x5) {
NondetRegStruct x6 = exec_SBox(ctx,(arg0[to_size_t(x4)] + arg1_0[to_size_t(x4)]), x5);
return x6;

}));
// builtin Add
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:61)
Val x7 = (x3[0]._super + x3[1]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x8 = (x3[2]._super + x3[3]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x9 = (x3[1]._super * Val(2));
// builtin Add
Val x10 = (x9 + x8);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x11 = (x3[3]._super * Val(2));
// builtin Add
Val x12 = (x11 + x7);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x13 = ((x8 * Val(4)) + x12);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x14 = ((x7 * Val(4)) + x10);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x15 = (x12 + x14);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x16 = (x10 + x13);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x17 = (x3[4]._super + x3[5]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x18 = (x3[6]._super + x3[7]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x19 = (x3[5]._super * Val(2));
// builtin Add
Val x20 = (x19 + x18);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x21 = (x3[7]._super * Val(2));
// builtin Add
Val x22 = (x21 + x17);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x23 = ((x18 * Val(4)) + x22);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x24 = ((x17 * Val(4)) + x20);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x25 = (x22 + x24);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x26 = (x20 + x23);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x27 = (x3[8]._super + x3[9]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x28 = (x3[10]._super + x3[11]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x29 = (x3[9]._super * Val(2));
// builtin Add
Val x30 = (x29 + x28);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x31 = (x3[11]._super * Val(2));
// builtin Add
Val x32 = (x31 + x27);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x33 = ((x28 * Val(4)) + x32);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x34 = ((x27 * Val(4)) + x30);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x35 = (x32 + x34);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x36 = (x30 + x33);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x37 = (x3[12]._super + x3[13]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x38 = (x3[14]._super + x3[15]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x39 = (x3[13]._super * Val(2));
// builtin Add
Val x40 = (x39 + x38);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x41 = (x3[15]._super * Val(2));
// builtin Add
Val x42 = (x41 + x37);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x43 = ((x38 * Val(4)) + x42);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x44 = ((x37 * Val(4)) + x40);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x45 = (x42 + x44);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x46 = (x40 + x43);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x47 = (x3[16]._super + x3[17]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x48 = (x3[18]._super + x3[19]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x49 = (x3[17]._super * Val(2));
// builtin Add
Val x50 = (x49 + x48);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x51 = (x3[19]._super * Val(2));
// builtin Add
Val x52 = (x51 + x47);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x53 = ((x48 * Val(4)) + x52);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x54 = ((x47 * Val(4)) + x50);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x55 = (x52 + x54);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x56 = (x50 + x53);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x57 = (x3[20]._super + x3[21]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x58 = (x3[22]._super + x3[23]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x59 = (x3[21]._super * Val(2));
// builtin Add
Val x60 = (x59 + x58);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x61 = (x3[23]._super * Val(2));
// builtin Add
Val x62 = (x61 + x57);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x63 = ((x58 * Val(4)) + x62);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x64 = ((x57 * Val(4)) + x60);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x65 = (x62 + x64);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x66 = (x60 + x63);
// ReduceVec4(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:54)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:64)
Val x67 = (((x15 + x25) + x35) + x45);
Val x68 = (((x14 + x24) + x34) + x44);
Val x69 = (((x16 + x26) + x36) + x46);
Val x70 = (((x13 + x23) + x33) + x43);
Val x71 = ((x67 + x55) + x65);
Val x72 = ((x68 + x54) + x64);
Val x73 = ((x69 + x56) + x66);
Val x74 = ((x70 + x53) + x63);
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:65)
MultiplyByMExt_Super_SuperStruct24Array x75 = MultiplyByMExt_Super_SuperStruct24Array{MultiplyByMExt_Super_SuperStruct{
  ._super = (x15 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x14 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x16 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x13 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x25 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x24 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x26 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x23 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x35 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x34 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x36 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x33 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x45 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x44 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x46 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x43 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x55 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x54 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x56 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x53 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x65 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x64 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x66 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x63 + x74)}};
return MultiplyByMExtStruct{
  ._super = x75};
}
MultiplyByMExtStruct exec_DoExtRoundByIdx(ExecContext& ctx,Val24Array arg0, Val arg1_0, BoundLayout<DoExtRoundByIdxLayout> layout2)   {
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:115)
OneHot_8_Struct x3 = exec_OneHot_8_(ctx,arg1_0, LAYOUT_LOOKUP(layout2, idxHot));
// builtin Mul
// MultBy(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:111)
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:119)
Val x4 = (x3._super[0]._super * Val(262278199));
Val x5 = (x3._super[0]._super * Val(127253399));
Val x6 = (x3._super[0]._super * Val(314968988));
Val x7 = (x3._super[0]._super * Val(246143118));
Val x8 = (x3._super[0]._super * Val(157582794));
Val x9 = (x3._super[0]._super * Val(118043943));
Val x10 = (x3._super[0]._super * Val(454905424));
Val x11 = (x3._super[0]._super * Val(815798990));
Val x12 = (x3._super[0]._super * Val(1004040026));
Val x13 = (x3._super[0]._super * Val(1773108264));
Val x14 = (x3._super[0]._super * Val(1066694495));
Val x15 = (x3._super[0]._super * Val(1930780904));
Val x16 = (x3._super[0]._super * Val(1180307149));
Val x17 = (x3._super[0]._super * Val(1464793095));
Val x18 = (x3._super[0]._super * Val(1660766320));
Val x19 = (x3._super[0]._super * Val(1389166148));
Val x20 = (x3._super[0]._super * Val(343354132));
Val x21 = (x3._super[0]._super * Val(1307439985));
Val x22 = (x3._super[0]._super * Val(638242172));
Val x23 = (x3._super[0]._super * Val(525458520));
Val x24 = (x3._super[0]._super * Val(1964135730));
Val x25 = (x3._super[0]._super * Val(1751797115));
Val x26 = (x3._super[0]._super * Val(1421525369));
Val x27 = (x3._super[0]._super * Val(831813382));
Val x28 = (x3._super[1]._super * Val(695835963));
Val x29 = (x3._super[1]._super * Val(1845603984));
Val x30 = (x3._super[1]._super * Val(540703332));
Val x31 = (x3._super[1]._super * Val(1333667262));
Val x32 = (x3._super[1]._super * Val(1917861751));
Val x33 = (x3._super[1]._super * Val(1170029417));
Val x34 = (x3._super[1]._super * Val(1989924532));
Val x35 = (x3._super[1]._super * Val(1518763784));
Val x36 = (x3._super[1]._super * Val(1339793538));
Val x37 = (x3._super[1]._super * Val(622609176));
Val x38 = (x3._super[1]._super * Val(686842369));
Val x39 = (x3._super[1]._super * Val(1737016378));
Val x40 = (x3._super[1]._super * Val(1282239129));
Val x41 = (x3._super[1]._super * Val(897025192));
Val x42 = (x3._super[1]._super * Val(716894289));
Val x43 = (x3._super[1]._super * Val(1997503974));
Val x44 = (x3._super[1]._super * Val(395622276));
Val x45 = (x3._super[1]._super * Val(1201063290));
Val x46 = (x3._super[1]._super * Val(1917549072));
Val x47 = (x3._super[1]._super * Val(1150912935));
Val x48 = (x3._super[1]._super * Val(1687379185));
Val x49 = (x3._super[1]._super * Val(1507936940));
Val x50 = (x3._super[1]._super * Val(241306552));
Val x51 = (x3._super[1]._super * Val(989176635));
Val x52 = (x3._super[2]._super * Val(1147522062));
Val x53 = (x3._super[2]._super * Val(27129487));
Val x54 = (x3._super[2]._super * Val(1257820264));
Val x55 = (x3._super[2]._super * Val(142102402));
Val x56 = (x3._super[2]._super * Val(217046702));
Val x57 = (x3._super[2]._super * Val(1664590951));
Val x58 = (x3._super[2]._super * Val(855276054));
Val x59 = (x3._super[2]._super * Val(1215259350));
Val x60 = (x3._super[2]._super * Val(946500736));
Val x61 = (x3._super[2]._super * Val(552696906));
Val x62 = (x3._super[2]._super * Val(1424297384));
Val x63 = (x3._super[2]._super * Val(538103555));
Val x64 = (x3._super[2]._super * Val(1608853840));
Val x65 = (x3._super[2]._super * Val(162510541));
Val x66 = (x3._super[2]._super * Val(623051854));
Val x67 = (x3._super[2]._super * Val(1549062383));
Val x68 = (x3._super[2]._super * Val(1908416316));
Val x69 = (x3._super[2]._super * Val(1622328571));
Val x70 = (x3._super[2]._super * Val(1079030649));
Val x71 = (x3._super[2]._super * Val(1584033957));
Val x72 = (x3._super[2]._super * Val(1099252725));
Val x73 = (x3._super[2]._super * Val(1910423126));
Val x74 = (x3._super[2]._super * Val(447555988));
Val x75 = (x3._super[2]._super * Val(862495875));
Val x76 = (x3._super[3]._super * Val(128479034));
Val x77 = (x3._super[3]._super * Val(1587822577));
Val x78 = (x3._super[3]._super * Val(608401422));
Val x79 = (x3._super[3]._super * Val(1290028279));
Val x80 = (x3._super[3]._super * Val(342857858));
Val x81 = (x3._super[3]._super * Val(825405577));
Val x82 = (x3._super[3]._super * Val(427731030));
Val x83 = (x3._super[3]._super * Val(1718628547));
Val x84 = (x3._super[3]._super * Val(588764636));
Val x85 = (x3._super[3]._super * Val(204228775));
Val x86 = (x3._super[3]._super * Val(1454563174));
Val x87 = (x3._super[3]._super * Val(1740472809));
Val x88 = (x3._super[3]._super * Val(1338899225));
Val x89 = (x3._super[3]._super * Val(1269493554));
Val x90 = (x3._super[3]._super * Val(53007114));
Val x91 = (x3._super[3]._super * Val(1647670797));
Val x92 = (x3._super[3]._super * Val(306391314));
Val x93 = (x3._super[3]._super * Val(172614232));
Val x94 = (x3._super[3]._super * Val(51256176));
Val x95 = (x3._super[3]._super * Val(1221257987));
Val x96 = (x3._super[3]._super * Val(1239734761));
Val x97 = (x3._super[3]._super * Val(273790406));
Val x98 = (x3._super[3]._super * Val(1781980094));
Val x99 = (x3._super[3]._super * Val(1291790245));
Val x100 = (x3._super[4]._super * Val(53041581));
Val x101 = (x3._super[4]._super * Val(723038058));
Val x102 = (x3._super[4]._super * Val(1439947916));
Val x103 = (x3._super[4]._super * Val(1136469704));
Val x104 = (x3._super[4]._super * Val(205609311));
Val x105 = (x3._super[4]._super * Val(1883820770));
Val x106 = (x3._super[4]._super * Val(14387587));
Val x107 = (x3._super[4]._super * Val(720724951));
Val x108 = (x3._super[4]._super * Val(1854174607));
Val x109 = (x3._super[4]._super * Val(1629316321));
Val x110 = (x3._super[4]._super * Val(530151394));
Val x111 = (x3._super[4]._super * Val(1679178250));
Val x112 = (x3._super[4]._super * Val(1549779579));
Val x113 = (x3._super[4]._super * Val(48375137));
Val x114 = (x3._super[4]._super * Val(976057819));
Val x115 = (x3._super[4]._super * Val(463976218));
Val x116 = (x3._super[4]._super * Val(875839332));
Val x117 = (x3._super[4]._super * Val(1946596189));
Val x118 = (x3._super[4]._super * Val(434078361));
Val x119 = (x3._super[4]._super * Val(1878280202));
Val x120 = (x3._super[4]._super * Val(1363837384));
Val x121 = (x3._super[4]._super * Val(1470845646));
Val x122 = (x3._super[4]._super * Val(1792450386));
Val x123 = (x3._super[4]._super * Val(1040977421));
Val x124 = (x3._super[5]._super * Val(1209164052));
Val x125 = (x3._super[5]._super * Val(714957516));
Val x126 = (x3._super[5]._super * Val(390340387));
Val x127 = (x3._super[5]._super * Val(1213686459));
Val x128 = (x3._super[5]._super * Val(790726260));
Val x129 = (x3._super[5]._super * Val(117294666));
Val x130 = (x3._super[5]._super * Val(140621810));
Val x131 = (x3._super[5]._super * Val(993455846));
Val x132 = (x3._super[5]._super * Val(1889603648));
Val x133 = (x3._super[5]._super * Val(78845751));
Val x134 = (x3._super[5]._super * Val(925018226));
Val x135 = (x3._super[5]._super * Val(708123747));
Val x136 = (x3._super[5]._super * Val(1647665372));
Val x137 = (x3._super[5]._super * Val(1649953458));
Val x138 = (x3._super[5]._super * Val(942439428));
Val x139 = (x3._super[5]._super * Val(1006235079));
Val x140 = (x3._super[5]._super * Val(238616145));
Val x141 = (x3._super[5]._super * Val(930036496));
Val x142 = (x3._super[5]._super * Val(1401020792));
Val x143 = (x3._super[5]._super * Val(989618631));
Val x144 = (x3._super[5]._super * Val(1545325389));
Val x145 = (x3._super[5]._super * Val(1715719711));
Val x146 = (x3._super[5]._super * Val(755691969));
Val x147 = (x3._super[5]._super * Val(150307788));
Val x148 = (x3._super[6]._super * Val(1567618575));
Val x149 = (x3._super[6]._super * Val(1663353317));
Val x150 = (x3._super[6]._super * Val(1950429111));
Val x151 = (x3._super[6]._super * Val(1891637550));
Val x152 = (x3._super[6]._super * Val(192082241));
Val x153 = (x3._super[6]._super * Val(1080533265));
Val x154 = (x3._super[6]._super * Val(1463323727));
Val x155 = (x3._super[6]._super * Val(890243564));
Val x156 = (x3._super[6]._super * Val(158646617));
Val x157 = (x3._super[6]._super * Val(1402624179));
Val x158 = (x3._super[6]._super * Val(59510015));
Val x159 = (x3._super[6]._super * Val(1198261138));
Val x160 = (x3._super[6]._super * Val(1065075039));
Val x161 = (x3._super[6]._super * Val(1150410028));
Val x162 = (x3._super[6]._super * Val(1293938517));
Val x163 = (x3._super[6]._super * Val(76770019));
Val x164 = (x3._super[6]._super * Val(1478577620));
Val x165 = (x3._super[6]._super * Val(1748789933));
Val x166 = (x3._super[6]._super * Val(457372011));
Val x167 = (x3._super[6]._super * Val(1841795381));
Val x168 = (x3._super[6]._super * Val(760115692));
Val x169 = (x3._super[6]._super * Val(1042892522));
Val x170 = (x3._super[6]._super * Val(1507649755));
Val x171 = (x3._super[6]._super * Val(1827572010));
Val x172 = (x3._super[7]._super * Val(1206940496));
Val x173 = (x3._super[7]._super * Val(1896271507));
Val x174 = (x3._super[7]._super * Val(1003792297));
Val x175 = (x3._super[7]._super * Val(738091882));
Val x176 = (x3._super[7]._super * Val(1124078057));
Val x177 = (x3._super[7]._super * Val(1889898));
Val x178 = (x3._super[7]._super * Val(813674331));
Val x179 = (x3._super[7]._super * Val(228520958));
Val x180 = (x3._super[7]._super * Val(1832911930));
Val x181 = (x3._super[7]._super * Val(781141772));
Val x182 = (x3._super[7]._super * Val(459826664));
Val x183 = (x3._super[7]._super * Val(202271745));
Val x184 = (x3._super[7]._super * Val(1296144415));
Val x185 = (x3._super[7]._super * Val(1111203133));
Val x186 = (x3._super[7]._super * Val(1090783436));
Val x187 = (x3._super[7]._super * Val(641665156));
Val x188 = (x3._super[7]._super * Val(1393671120));
Val x189 = (x3._super[7]._super * Val(1303271640));
Val x190 = (x3._super[7]._super * Val(809508074));
Val x191 = (x3._super[7]._super * Val(162506101));
Val x192 = (x3._super[7]._super * Val(1262312258));
Val x193 = (x3._super[7]._super * Val(1672219447));
Val x194 = (x3._super[7]._super * Val(1608891156));
Val x195 = (x3._super[7]._super * Val(1380248020));
// builtin Add
// AddConsts(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:107)
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:118)
Val x196 = (((x4 + x28) + x52) + x76);
Val x197 = (((x5 + x29) + x53) + x77);
Val x198 = (((x6 + x30) + x54) + x78);
Val x199 = (((x7 + x31) + x55) + x79);
Val x200 = (((x8 + x32) + x56) + x80);
Val x201 = (((x9 + x33) + x57) + x81);
Val x202 = (((x10 + x34) + x58) + x82);
Val x203 = (((x11 + x35) + x59) + x83);
Val x204 = (((x12 + x36) + x60) + x84);
Val x205 = (((x13 + x37) + x61) + x85);
Val x206 = (((x14 + x38) + x62) + x86);
Val x207 = (((x15 + x39) + x63) + x87);
Val x208 = (((x16 + x40) + x64) + x88);
Val x209 = (((x17 + x41) + x65) + x89);
Val x210 = (((x18 + x42) + x66) + x90);
Val x211 = (((x19 + x43) + x67) + x91);
Val x212 = (((x20 + x44) + x68) + x92);
Val x213 = (((x21 + x45) + x69) + x93);
Val x214 = (((x22 + x46) + x70) + x94);
Val x215 = (((x23 + x47) + x71) + x95);
Val x216 = (((x24 + x48) + x72) + x96);
Val x217 = (((x25 + x49) + x73) + x97);
Val x218 = (((x26 + x50) + x74) + x98);
Val x219 = (((x27 + x51) + x75) + x99);
Val x220 = (((x196 + x100) + x124) + x148);
Val x221 = (((x197 + x101) + x125) + x149);
Val x222 = (((x198 + x102) + x126) + x150);
Val x223 = (((x199 + x103) + x127) + x151);
Val x224 = (((x200 + x104) + x128) + x152);
Val x225 = (((x201 + x105) + x129) + x153);
Val x226 = (((x202 + x106) + x130) + x154);
Val x227 = (((x203 + x107) + x131) + x155);
Val x228 = (((x204 + x108) + x132) + x156);
Val x229 = (((x205 + x109) + x133) + x157);
Val x230 = (((x206 + x110) + x134) + x158);
Val x231 = (((x207 + x111) + x135) + x159);
Val x232 = (((x208 + x112) + x136) + x160);
Val x233 = (((x209 + x113) + x137) + x161);
Val x234 = (((x210 + x114) + x138) + x162);
Val x235 = (((x211 + x115) + x139) + x163);
Val x236 = (((x212 + x116) + x140) + x164);
Val x237 = (((x213 + x117) + x141) + x165);
Val x238 = (((x214 + x118) + x142) + x166);
Val x239 = (((x215 + x119) + x143) + x167);
Val x240 = (((x216 + x120) + x144) + x168);
Val x241 = (((x217 + x121) + x145) + x169);
Val x242 = (((x218 + x122) + x146) + x170);
Val x243 = (((x219 + x123) + x147) + x171);
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:122)
MultiplyByMExtStruct x244 = exec_DoExtRound(ctx,arg0, Val24Array{(x220 + x172), (x221 + x173), (x222 + x174), (x223 + x175), (x224 + x176), (x225 + x177), (x226 + x178), (x227 + x179), (x228 + x180), (x229 + x181), (x230 + x182), (x231 + x183), (x232 + x184), (x233 + x185), (x234 + x186), (x235 + x187), (x236 + x188), (x237 + x189), (x238 + x190), (x239 + x191), (x240 + x192), (x241 + x193), (x242 + x194), (x243 + x195)}, LAYOUT_LOOKUP(layout2, _super));
return x244;
}
PoseidonStateStruct back_PoseidonState(ExecContext& ctx,Index distance0, BoundLayout<PoseidonStateLayout> layout1)   {
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
NondetRegStruct x2 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, hasState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x3 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, stateAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x4 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, bufOutAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, isElem));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x6 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, checkOut));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x7 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, loadTxType));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x8 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, nextState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x9 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, subState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x10 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, bufInAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x11 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, count));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x12 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, mode));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct24Array x13 = map(Val24Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23)}, LAYOUT_LOOKUP(layout1, inner), ([&](Val24Array::value_type x14, BoundLayout<NondetRegLayout24LayoutArray::value_type> x15) {
NondetRegStruct x16 = back_Reg(ctx,distance0, x15);
return x16;

}));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x17 = back_ExtReg(ctx,distance0, LAYOUT_LOOKUP(layout1, zcheck));
return PoseidonStateStruct{
  .hasState = x2,   .stateAddr = x3,   .bufOutAddr = x4,   .isElem = x5,   .checkOut = x6,   .loadTxType = x7,   .nextState = x8,   .subState = x9,   .bufInAddr = x10,   .count = x11,   .mode = x12,   .inner = x13,   .zcheck = x17};
}
PoseidonStateStruct exec_PoseidonState(ExecContext& ctx,PoseidonOpDefStruct arg0, Val arg1_0, Val arg2_0, Val arg3, Val arg4, Val arg5, Val24Array arg6, ExtVal arg7, BoundLayout<PoseidonStateLayout> layout8)   {
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
NondetRegStruct x9 = exec_Reg(ctx,arg0.hasState, LAYOUT_LOOKUP(layout8, hasState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x10 = exec_Reg(ctx,arg0.stateAddr, LAYOUT_LOOKUP(layout8, stateAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x11 = exec_Reg(ctx,arg0.bufOutAddr, LAYOUT_LOOKUP(layout8, bufOutAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x12 = exec_Reg(ctx,arg0.isElem, LAYOUT_LOOKUP(layout8, isElem));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x13 = exec_Reg(ctx,arg0.checkOut, LAYOUT_LOOKUP(layout8, checkOut));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x14 = exec_Reg(ctx,arg0.loadTxType, LAYOUT_LOOKUP(layout8, loadTxType));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x15 = exec_Reg(ctx,arg1_0, LAYOUT_LOOKUP(layout8, nextState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x16 = exec_Reg(ctx,arg2_0, LAYOUT_LOOKUP(layout8, subState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x17 = exec_Reg(ctx,arg3, LAYOUT_LOOKUP(layout8, bufInAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x18 = exec_Reg(ctx,arg4, LAYOUT_LOOKUP(layout8, count));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x19 = exec_Reg(ctx,arg5, LAYOUT_LOOKUP(layout8, mode));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct24Array x20 = map(arg6, LAYOUT_LOOKUP(layout8, inner), ([&](Val24Array::value_type x21, BoundLayout<NondetRegLayout24LayoutArray::value_type> x22) {
NondetRegStruct x23 = exec_Reg(ctx,x21, x22);
return x23;

}));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x24 = exec_ExtReg(ctx,arg7, LAYOUT_LOOKUP(layout8, zcheck));
return PoseidonStateStruct{
  .hasState = x9,   .stateAddr = x10,   .bufOutAddr = x11,   .isElem = x12,   .checkOut = x13,   .loadTxType = x14,   .nextState = x15,   .subState = x16,   .bufInAddr = x17,   .count = x18,   .mode = x19,   .inner = x20,   .zcheck = x24};
}
PoseidonStateStruct exec_PoseidonInvalid(ExecContext& ctx,BoundLayout<PoseidonStateLayout> layout0)   {
// PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:52)
EQZ(Val(2013265920), "PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:52)");
// PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:61)
PoseidonStateStruct x1 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = Val(0),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(0)}, Val(0), Val(0), Val(0), Val(0), Val(0), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout0);
return x1;
}
ReadAddrStruct exec_ReadAddr(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<ReadAddrLayout> layout2)   {
// ReadAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:78)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, (arg1_0 + Val(1073725440)), LAYOUT_LOOKUP(layout2, addr32));
// builtin Mul
// ReadAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:79)
Val x4 = (x3._super.high * Val(16384));
// Div(<preamble>:19)
Val x5 = (x3._super.low * Val(1509949441));
return ReadAddrStruct{
  ._super = (x4 + x5)};
}
PoseidonStateStruct exec_PoseidonEcall(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonEcallLayout> layout2)   {
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:84)
ReadAddrStruct x3 = exec_ReadAddr(ctx,arg0, Val(10), LAYOUT_LOOKUP(layout2, stateAddr));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:85)
ReadAddrStruct x4 = exec_ReadAddr(ctx,arg0, Val(11), LAYOUT_LOOKUP(layout2, bufInAddr));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:86)
ReadAddrStruct x5 = exec_ReadAddr(ctx,arg0, Val(12), LAYOUT_LOOKUP(layout2, bufOutAddr));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:87)
GetDataStruct x6 = exec_MemoryRead(ctx,arg0, Val(1073725453), LAYOUT_LOOKUP(layout2, bitsAndCount));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:90)
NondetRegStruct x7 = exec_IsZero(ctx,x3._super, LAYOUT_LOOKUP(layout2, _0));
// builtin Sub
Val x8 = (Val(1) - x7._super);
// builtin BitAnd
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:94)
Val x9 = bitAnd(x6._super.high, Val(32768));
NondetRegStruct x10 = exec_NondetBitReg(ctx,(x9 * Val(2013204481)), LAYOUT_LOOKUP(layout2, isElem));
// builtin BitAnd
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:95)
Val x11 = bitAnd(x6._super.high, Val(16384));
NondetRegStruct x12 = exec_NondetBitReg(ctx,(x11 * Val(2013143041)), LAYOUT_LOOKUP(layout2, checkOut));
// builtin Add
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:96)
Val x13 = ((x10._super * Val(32768)) + (x12._super * Val(16384)));
Val x14 = (x6._super.high - x13);
EQZ(x14, "PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:96)");
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:99)
NondetRegStruct x15 = exec_IsZero(ctx,x6._super.low, LAYOUT_LOOKUP(layout2, countZero));
// builtin Sub
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:102)
Val x16 = (Val(1) - x15._super);
// builtin Add
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:101)
Val x17 = ((x15._super * Val(48)) + ((x16 * x8) * Val(17)));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:105)
PoseidonStateStruct x18 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = x8,   .stateAddr = x3._super,   .bufOutAddr = x5._super,   .isElem = x10._super,   .checkOut = x12._super,   .loadTxType = Val(0)}, (x17 + ((x16 * (Val(1) - x8)) * Val(18))), Val(0), x4._super, x6._super.low, arg1_0, Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x18;
}
PoseidonStateStruct exec_PoseidonPagingEntry(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// builtin Mul
// Div(<preamble>:19)
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:110)
Val x3 = (arg1_0 * Val(1342177281));
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:114)
Val x4 = ((Val(1) - x3) * Val(1140850688));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:111)
PoseidonOpDefStruct x5 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = ((x3 * Val(1073741824)) + x4),   .isElem = Val(1),   .checkOut = Val(1),   .loadTxType = Val(1)};
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:119)
PoseidonStateStruct x6 = exec_PoseidonState(ctx,x5, Val(22), Val(0), Val(0), Val(0), arg1_0, Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x6;
}
PoseidonStateStruct exec_PoseidonEntry(ExecContext& ctx,NondetRegStruct arg0, ValU32Struct arg1_0, Val arg2_0, BoundLayout<PoseidonEntryLayout> layout3)   {
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:131)
NondetRegStruct x4 = exec_IsZero(ctx,(arg1_0.low + arg1_0.high), LAYOUT_LOOKUP(layout3, pcZero));
PoseidonStateStruct x5;
if (to_size_t(x4._super)) {
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:133)
PoseidonStateStruct x6 = exec_PoseidonPagingEntry(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout3, _super.arm0._super));
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra0.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra1.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra2.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra3.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra4.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra5.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra6.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra7.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra8.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra9.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra10.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra11.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
x5 = x6;
} else if (to_size_t((Val(1) - x4._super))) {
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:135)
PoseidonStateStruct x7 = exec_PoseidonEcall(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout3, _super.arm1));
x5 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)
PoseidonStateStruct x8 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout3, _super._super));
return x8;
}
ReadElemStruct exec_ReadElem(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<ReadElemLayout> layout2)   {
// ReadElem(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:140)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, elem32));
// builtin Mul
// ReadElem(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:141)
Val x4 = (x3._super.high * Val(65536));
return ReadElemStruct{
  ._super = (x4 + x3._super.low)};
}
PoseidonStateStruct exec_PoseidonLoadState(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadStateLayout> layout2)   {
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:146)
ReadElemStruct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x4, BoundLayout<ReadElemLayout8LayoutArray::value_type> x5) {
// builtin Add
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:147)
Val x6 = (arg1_0.stateAddr._super + x4);
ReadElemStruct x7 = exec_ReadElem(ctx,arg0, x6, x5);
return x7;

}));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:156)
PoseidonOpDefStruct x8 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:149)
Val24Array x9 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x3[0]._super, x3[1]._super, x3[2]._super, x3[3]._super, x3[4]._super, x3[5]._super, x3[6]._super, x3[7]._super};
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:156)
PoseidonStateStruct x10 = exec_PoseidonState(ctx,x8, Val(18), Val(0), arg1_0.bufInAddr._super, arg1_0.count._super, arg1_0.mode._super, x9, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x10;
}
PoseidonStateStruct exec_PoseidonLoadInShort(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInShortLayout> layout2, GlobalBuf global3)   {
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:176)
OneHot_3_Struct x4 = exec_OneHot_3_(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, txType));
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:177)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x6, BoundLayout<MemoryGetLayout8LayoutArray::value_type> x7) {
// builtin Add
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:178)
Val x8 = (arg1_0.bufInAddr._super + x6);
GetDataStruct x9 = exec_MemoryGet(ctx,arg0, x8, x4, x7);
return x9;

}));
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:159)
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:180)
BoundLayout<_globalLayout> x10 = BIND_LAYOUT(kLayoutGlobal, global3);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x11 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x10, rng));
// builtin ExtMul
// PolyEvalStateReduce(zirgen/circuit/rv32im/v2/dsl/poly.zir:14)
// PolyEval(zirgen/circuit/rv32im/v2/dsl/poly.zir:18)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:170)
ExtVal x12 = (x11._super * ExtVal(1, 0, 0, 0));
// builtin MakeExt
ExtVal x13 = (x5[0].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x14 = (x12 * x11._super);
// builtin MakeExt
ExtVal x15 = (x5[0].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x16 = (((x13 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x15 * x12));
// builtin ExtMul
ExtVal x17 = (x14 * x11._super);
// builtin MakeExt
ExtVal x18 = (x5[1].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x19 = (x17 * x11._super);
// builtin MakeExt
ExtVal x20 = (x5[1].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x21 = (x19 * x11._super);
// builtin MakeExt
ExtVal x22 = (x5[2].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x23 = (((x16 + (x18 * x14)) + (x20 * x17)) + (x22 * x19));
// builtin ExtMul
ExtVal x24 = (x21 * x11._super);
// builtin MakeExt
ExtVal x25 = (x5[2].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x26 = (x24 * x11._super);
// builtin MakeExt
ExtVal x27 = (x5[3].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x28 = (x26 * x11._super);
// builtin MakeExt
ExtVal x29 = (x5[3].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x30 = (((x23 + (x25 * x21)) + (x27 * x24)) + (x29 * x26));
// builtin ExtMul
ExtVal x31 = (x28 * x11._super);
// builtin MakeExt
ExtVal x32 = (x5[4].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x33 = (x31 * x11._super);
// builtin MakeExt
ExtVal x34 = (x5[4].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x35 = (x33 * x11._super);
// builtin MakeExt
ExtVal x36 = (x5[5].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x37 = (((x30 + (x32 * x28)) + (x34 * x31)) + (x36 * x33));
// builtin ExtMul
ExtVal x38 = (x35 * x11._super);
// builtin MakeExt
ExtVal x39 = (x5[5].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x40 = (x38 * x11._super);
// builtin MakeExt
ExtVal x41 = (x5[6].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x42 = (x40 * x11._super);
// builtin MakeExt
ExtVal x43 = (x5[6].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x44 = (((x37 + (x39 * x35)) + (x41 * x38)) + (x43 * x40));
// builtin ExtMul
ExtVal x45 = (x42 * x11._super);
// builtin MakeExt
ExtVal x46 = (x5[7].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x47 = (x5[7].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:171)
ExtVal x48 = (arg1_0.zcheck._super * (x45 * x11._super));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:194)
PoseidonOpDefStruct x49 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// builtin Add
Val x50 = (arg1_0.bufInAddr._super + Val(8));
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:61)
Val x51 = (x5[0]._super.low + x5[0]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x52 = (x5[1]._super.low + x5[1]._super.high);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x53 = (x5[0]._super.high * Val(2));
// builtin Add
Val x54 = (x53 + x52);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x55 = (x5[1]._super.high * Val(2));
// builtin Add
Val x56 = (x55 + x51);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x57 = ((x52 * Val(4)) + x56);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x58 = ((x51 * Val(4)) + x54);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x59 = (x56 + x58);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x60 = (x54 + x57);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x61 = (x5[2]._super.low + x5[2]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x62 = (x5[3]._super.low + x5[3]._super.high);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x63 = (x5[2]._super.high * Val(2));
// builtin Add
Val x64 = (x63 + x62);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x65 = (x5[3]._super.high * Val(2));
// builtin Add
Val x66 = (x65 + x61);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x67 = ((x62 * Val(4)) + x66);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x68 = ((x61 * Val(4)) + x64);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x69 = (x66 + x68);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x70 = (x64 + x67);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x71 = (x5[4]._super.low + x5[4]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x72 = (x5[5]._super.low + x5[5]._super.high);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x73 = (x5[4]._super.high * Val(2));
// builtin Add
Val x74 = (x73 + x72);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x75 = (x5[5]._super.high * Val(2));
// builtin Add
Val x76 = (x75 + x71);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x77 = ((x72 * Val(4)) + x76);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x78 = ((x71 * Val(4)) + x74);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x79 = (x76 + x78);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x80 = (x74 + x77);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x81 = (x5[6]._super.low + x5[6]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x82 = (x5[7]._super.low + x5[7]._super.high);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x83 = (x5[6]._super.high * Val(2));
// builtin Add
Val x84 = (x83 + x82);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x85 = (x5[7]._super.high * Val(2));
// builtin Add
Val x86 = (x85 + x81);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x87 = ((x82 * Val(4)) + x86);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x88 = ((x81 * Val(4)) + x84);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x89 = (x86 + x88);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x90 = (x84 + x87);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x91 = (arg1_0.inner[16]._super + arg1_0.inner[17]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x92 = (arg1_0.inner[18]._super + arg1_0.inner[19]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x93 = (arg1_0.inner[17]._super * Val(2));
// builtin Add
Val x94 = (x93 + x92);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x95 = (arg1_0.inner[19]._super * Val(2));
// builtin Add
Val x96 = (x95 + x91);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x97 = ((x92 * Val(4)) + x96);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x98 = ((x91 * Val(4)) + x94);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x99 = (x96 + x98);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x100 = (x94 + x97);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x101 = (arg1_0.inner[20]._super + arg1_0.inner[21]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x102 = (arg1_0.inner[22]._super + arg1_0.inner[23]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x103 = (arg1_0.inner[21]._super * Val(2));
// builtin Add
Val x104 = (x103 + x102);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x105 = (arg1_0.inner[23]._super * Val(2));
// builtin Add
Val x106 = (x105 + x101);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x107 = ((x102 * Val(4)) + x106);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x108 = ((x101 * Val(4)) + x104);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x109 = (x106 + x108);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x110 = (x104 + x107);
// ReduceVec4(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:54)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:64)
Val x111 = (((x59 + x69) + x79) + x89);
Val x112 = (((x58 + x68) + x78) + x88);
Val x113 = (((x60 + x70) + x80) + x90);
Val x114 = (((x57 + x67) + x77) + x87);
Val x115 = ((x111 + x99) + x109);
Val x116 = ((x112 + x98) + x108);
Val x117 = ((x113 + x100) + x110);
Val x118 = ((x114 + x97) + x107);
PoseidonStateStruct x119 = exec_PoseidonState(ctx,x49, Val(24), Val(0), x50, arg1_0.count._super, arg1_0.mode._super, Val24Array{(x59 + x115), (x58 + x116), (x60 + x117), (x57 + x118), (x69 + x115), (x68 + x116), (x70 + x117), (x67 + x118), (x79 + x115), (x78 + x116), (x80 + x117), (x77 + x118), (x89 + x115), (x88 + x116), (x90 + x117), (x87 + x118), (x99 + x115), (x98 + x116), (x100 + x117), (x97 + x118), (x109 + x115), (x108 + x116), (x110 + x117), (x107 + x118)}, (x48 + ((x44 + (x46 * x42)) + (x47 * x45))), LAYOUT_LOOKUP(layout2, _super));
return x119;
}
PoseidonStateStruct exec_PoseidonLoadInLow(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInLowLayout> layout2, GlobalBuf global3)   {
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:199)
OneHot_3_Struct x4 = exec_OneHot_3_(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, txType));
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:200)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x6, BoundLayout<MemoryGetLayout8LayoutArray::value_type> x7) {
// builtin Add
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:201)
Val x8 = (arg1_0.bufInAddr._super + x6);
GetDataStruct x9 = exec_MemoryGet(ctx,arg0, x8, x4, x7);
return x9;

}));
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:159)
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:203)
BoundLayout<_globalLayout> x10 = BIND_LAYOUT(kLayoutGlobal, global3);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x11 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x10, rng));
// builtin ExtMul
// PolyEvalStateReduce(zirgen/circuit/rv32im/v2/dsl/poly.zir:14)
// PolyEval(zirgen/circuit/rv32im/v2/dsl/poly.zir:18)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:170)
ExtVal x12 = (x11._super * ExtVal(1, 0, 0, 0));
// builtin MakeExt
ExtVal x13 = (x5[0].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x14 = (x12 * x11._super);
// builtin MakeExt
ExtVal x15 = (x5[0].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x16 = (((x13 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x15 * x12));
// builtin ExtMul
ExtVal x17 = (x14 * x11._super);
// builtin MakeExt
ExtVal x18 = (x5[1].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x19 = (x17 * x11._super);
// builtin MakeExt
ExtVal x20 = (x5[1].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x21 = (x19 * x11._super);
// builtin MakeExt
ExtVal x22 = (x5[2].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x23 = (((x16 + (x18 * x14)) + (x20 * x17)) + (x22 * x19));
// builtin ExtMul
ExtVal x24 = (x21 * x11._super);
// builtin MakeExt
ExtVal x25 = (x5[2].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x26 = (x24 * x11._super);
// builtin MakeExt
ExtVal x27 = (x5[3].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x28 = (x26 * x11._super);
// builtin MakeExt
ExtVal x29 = (x5[3].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x30 = (((x23 + (x25 * x21)) + (x27 * x24)) + (x29 * x26));
// builtin ExtMul
ExtVal x31 = (x28 * x11._super);
// builtin MakeExt
ExtVal x32 = (x5[4].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x33 = (x31 * x11._super);
// builtin MakeExt
ExtVal x34 = (x5[4].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x35 = (x33 * x11._super);
// builtin MakeExt
ExtVal x36 = (x5[5].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x37 = (((x30 + (x32 * x28)) + (x34 * x31)) + (x36 * x33));
// builtin ExtMul
ExtVal x38 = (x35 * x11._super);
// builtin MakeExt
ExtVal x39 = (x5[5].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x40 = (x38 * x11._super);
// builtin MakeExt
ExtVal x41 = (x5[6].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x42 = (x40 * x11._super);
// builtin MakeExt
ExtVal x43 = (x5[6].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x44 = (((x37 + (x39 * x35)) + (x41 * x38)) + (x43 * x40));
// builtin ExtMul
ExtVal x45 = (x42 * x11._super);
// builtin MakeExt
ExtVal x46 = (x5[7].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x47 = (x5[7].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:171)
ExtVal x48 = (arg1_0.zcheck._super * (x45 * x11._super));
// builtin Mul
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:206)
Val x49 = (x5[0]._super.high * Val(65536));
Val x50 = (x5[1]._super.high * Val(65536));
Val x51 = (x5[2]._super.high * Val(65536));
Val x52 = (x5[3]._super.high * Val(65536));
Val x53 = (x5[4]._super.high * Val(65536));
Val x54 = (x5[5]._super.high * Val(65536));
Val x55 = (x5[6]._super.high * Val(65536));
Val x56 = (x5[7]._super.high * Val(65536));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:211)
PoseidonOpDefStruct x57 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// builtin Add
Val x58 = (arg1_0.bufInAddr._super + Val(8));
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:204)
Val24Array x59 = Val24Array{(x49 + x5[0]._super.low), (x50 + x5[1]._super.low), (x51 + x5[2]._super.low), (x52 + x5[3]._super.low), (x53 + x5[4]._super.low), (x54 + x5[5]._super.low), (x55 + x5[6]._super.low), (x56 + x5[7]._super.low), arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:211)
PoseidonStateStruct x60 = exec_PoseidonState(ctx,x57, Val(18), Val(1), x58, arg1_0.count._super, arg1_0.mode._super, x59, (x48 + ((x44 + (x46 * x42)) + (x47 * x45))), LAYOUT_LOOKUP(layout2, _super));
return x60;
}
PoseidonStateStruct exec_PoseidonLoadInHigh(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInHighLayout> layout2, GlobalBuf global3)   {
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:216)
OneHot_3_Struct x4 = exec_OneHot_3_(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, txType));
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:217)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x6, BoundLayout<MemoryGetLayout8LayoutArray::value_type> x7) {
// builtin Add
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:218)
Val x8 = (arg1_0.bufInAddr._super + x6);
GetDataStruct x9 = exec_MemoryGet(ctx,arg0, x8, x4, x7);
return x9;

}));
// builtin Mul
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:222)
Val x10 = (x5[0]._super.high * Val(65536));
Val x11 = (x5[1]._super.high * Val(65536));
// builtin Add
Val x12 = (x11 + x5[1]._super.low);
// builtin Mul
Val x13 = (x5[2]._super.high * Val(65536));
Val x14 = (x5[3]._super.high * Val(65536));
// builtin Add
Val x15 = (x14 + x5[3]._super.low);
// builtin Mul
Val x16 = (x5[4]._super.high * Val(65536));
Val x17 = (x5[5]._super.high * Val(65536));
// builtin Add
Val x18 = (x17 + x5[5]._super.low);
// builtin Mul
Val x19 = (x5[6]._super.high * Val(65536));
Val x20 = (x5[7]._super.high * Val(65536));
// builtin Add
Val x21 = (x20 + x5[7]._super.low);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:159)
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:227)
BoundLayout<_globalLayout> x22 = BIND_LAYOUT(kLayoutGlobal, global3);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x23 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x22, rng));
// builtin ExtMul
// PolyEvalStateReduce(zirgen/circuit/rv32im/v2/dsl/poly.zir:14)
// PolyEval(zirgen/circuit/rv32im/v2/dsl/poly.zir:18)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:170)
ExtVal x24 = (x23._super * ExtVal(1, 0, 0, 0));
// builtin MakeExt
ExtVal x25 = (x5[0].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x26 = (x24 * x23._super);
// builtin MakeExt
ExtVal x27 = (x5[0].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x28 = (((x25 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x27 * x24));
// builtin ExtMul
ExtVal x29 = (x26 * x23._super);
// builtin MakeExt
ExtVal x30 = (x5[1].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x31 = (x29 * x23._super);
// builtin MakeExt
ExtVal x32 = (x5[1].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x33 = (x31 * x23._super);
// builtin MakeExt
ExtVal x34 = (x5[2].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x35 = (((x28 + (x30 * x26)) + (x32 * x29)) + (x34 * x31));
// builtin ExtMul
ExtVal x36 = (x33 * x23._super);
// builtin MakeExt
ExtVal x37 = (x5[2].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x38 = (x36 * x23._super);
// builtin MakeExt
ExtVal x39 = (x5[3].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x40 = (x38 * x23._super);
// builtin MakeExt
ExtVal x41 = (x5[3].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x42 = (((x35 + (x37 * x33)) + (x39 * x36)) + (x41 * x38));
// builtin ExtMul
ExtVal x43 = (x40 * x23._super);
// builtin MakeExt
ExtVal x44 = (x5[4].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x45 = (x43 * x23._super);
// builtin MakeExt
ExtVal x46 = (x5[4].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x47 = (x45 * x23._super);
// builtin MakeExt
ExtVal x48 = (x5[5].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x49 = (((x42 + (x44 * x40)) + (x46 * x43)) + (x48 * x45));
// builtin ExtMul
ExtVal x50 = (x47 * x23._super);
// builtin MakeExt
ExtVal x51 = (x5[5].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x52 = (x50 * x23._super);
// builtin MakeExt
ExtVal x53 = (x5[6].diffLow + ExtVal(0, 0, 0, 0));
// builtin ExtMul
ExtVal x54 = (x52 * x23._super);
// builtin MakeExt
ExtVal x55 = (x5[6].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
ExtVal x56 = (((x49 + (x51 * x47)) + (x53 * x50)) + (x55 * x52));
// builtin ExtMul
ExtVal x57 = (x54 * x23._super);
// builtin MakeExt
ExtVal x58 = (x5[7].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x59 = (x5[7].diffHigh + ExtVal(0, 0, 0, 0));
// builtin ExtMul
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:171)
ExtVal x60 = (arg1_0.zcheck._super * (x57 * x23._super));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:228)
PoseidonOpDefStruct x61 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// builtin Add
Val x62 = (arg1_0.bufInAddr._super + Val(8));
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:61)
Val x63 = (arg1_0.inner[0]._super + arg1_0.inner[1]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x64 = (arg1_0.inner[2]._super + arg1_0.inner[3]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x65 = (arg1_0.inner[1]._super * Val(2));
// builtin Add
Val x66 = (x65 + x64);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x67 = (arg1_0.inner[3]._super * Val(2));
// builtin Add
Val x68 = (x67 + x63);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x69 = ((x64 * Val(4)) + x68);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x70 = ((x63 * Val(4)) + x66);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x71 = (x68 + x70);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x72 = (x66 + x69);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x73 = (arg1_0.inner[4]._super + arg1_0.inner[5]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x74 = (arg1_0.inner[6]._super + arg1_0.inner[7]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x75 = (arg1_0.inner[5]._super * Val(2));
// builtin Add
Val x76 = (x75 + x74);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x77 = (arg1_0.inner[7]._super * Val(2));
// builtin Add
Val x78 = (x77 + x73);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x79 = ((x74 * Val(4)) + x78);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x80 = ((x73 * Val(4)) + x76);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x81 = (x78 + x80);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x82 = (x76 + x79);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x83 = ((x10 + x5[0]._super.low) + x12);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x84 = ((x13 + x5[2]._super.low) + x15);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x85 = ((x12 * Val(2)) + x84);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x86 = ((x15 * Val(2)) + x83);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x87 = ((x84 * Val(4)) + x86);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x88 = ((x83 * Val(4)) + x85);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x89 = (x86 + x88);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x90 = (x85 + x87);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x91 = ((x16 + x5[4]._super.low) + x18);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x92 = ((x19 + x5[6]._super.low) + x21);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x93 = ((x18 * Val(2)) + x92);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x94 = ((x21 * Val(2)) + x91);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x95 = ((x92 * Val(4)) + x94);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x96 = ((x91 * Val(4)) + x93);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x97 = (x94 + x96);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x98 = (x93 + x95);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x99 = (arg1_0.inner[16]._super + arg1_0.inner[17]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x100 = (arg1_0.inner[18]._super + arg1_0.inner[19]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x101 = (arg1_0.inner[17]._super * Val(2));
// builtin Add
Val x102 = (x101 + x100);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x103 = (arg1_0.inner[19]._super * Val(2));
// builtin Add
Val x104 = (x103 + x99);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x105 = ((x100 * Val(4)) + x104);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x106 = ((x99 * Val(4)) + x102);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x107 = (x104 + x106);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x108 = (x102 + x105);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x109 = (arg1_0.inner[20]._super + arg1_0.inner[21]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x110 = (arg1_0.inner[22]._super + arg1_0.inner[23]._super);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x111 = (arg1_0.inner[21]._super * Val(2));
// builtin Add
Val x112 = (x111 + x110);
// builtin Mul
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x113 = (arg1_0.inner[23]._super * Val(2));
// builtin Add
Val x114 = (x113 + x109);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x115 = ((x110 * Val(4)) + x114);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x116 = ((x109 * Val(4)) + x112);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x117 = (x114 + x116);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x118 = (x112 + x115);
// ReduceVec4(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:54)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:64)
Val x119 = (((x71 + x81) + x89) + x97);
Val x120 = (((x70 + x80) + x88) + x96);
Val x121 = (((x72 + x82) + x90) + x98);
Val x122 = (((x69 + x79) + x87) + x95);
Val x123 = ((x119 + x107) + x117);
Val x124 = ((x120 + x106) + x116);
Val x125 = ((x121 + x108) + x118);
Val x126 = ((x122 + x105) + x115);
PoseidonStateStruct x127 = exec_PoseidonState(ctx,x61, Val(24), Val(0), x62, arg1_0.count._super, arg1_0.mode._super, Val24Array{(x71 + x123), (x70 + x124), (x72 + x125), (x69 + x126), (x81 + x123), (x80 + x124), (x82 + x125), (x79 + x126), (x89 + x123), (x88 + x124), (x90 + x125), (x87 + x126), (x97 + x123), (x96 + x124), (x98 + x125), (x95 + x126), (x107 + x123), (x106 + x124), (x108 + x125), (x105 + x126), (x117 + x123), (x116 + x124), (x118 + x125), (x115 + x126)}, (x60 + ((x56 + (x58 * x54)) + (x59 * x57))), LAYOUT_LOOKUP(layout2, _super));
return x127;
}
PoseidonStateStruct exec_PoseidonLoadIn(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInLayout> layout2, GlobalBuf global3)   {
// builtin Add
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:232)
Val x4 = (arg1_0.isElem._super + arg1_0.subState._super);
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:233)
OneHot_3_Struct x5 = exec_OneHot_3_(ctx,x4, LAYOUT_LOOKUP(layout2, _0));
PoseidonStateStruct x6;
if (to_size_t(x5._super[0]._super)) {
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:234)
PoseidonStateStruct x7 = exec_PoseidonLoadInShort(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm0), global3);
x6 = x7;
} else if (to_size_t(x5._super[1]._super)) {
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:235)
PoseidonStateStruct x8 = exec_PoseidonLoadInLow(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm1), global3);
x6 = x8;
} else if (to_size_t(x5._super[2]._super)) {
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:236)
PoseidonStateStruct x9 = exec_PoseidonLoadInHigh(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm2), global3);
x6 = x9;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:233)
PoseidonStateStruct x10 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, _super._super));
return x10;
}
PoseidonStateStruct exec_PoseidonExtRound(ExecContext& ctx,PoseidonStateStruct arg0, BoundLayout<PoseidonExtRoundLayout> layout1)   {
// builtin Sub
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:241)
Val x2 = (arg0.subState._super - Val(3));
NondetRegStruct x3 = exec_IsZero(ctx,x2, LAYOUT_LOOKUP(layout1, isRound3));
// builtin Sub
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:242)
Val x4 = (arg0.subState._super - Val(7));
NondetRegStruct x5 = exec_IsZero(ctx,x4, LAYOUT_LOOKUP(layout1, isRound7));
// builtin Sub
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:243)
Val x6 = (arg0.count._super - Val(1));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:244)
NondetRegStruct x7 = exec_IsZero(ctx,x6, LAYOUT_LOOKUP(layout1, lastBlock));
// builtin Sub
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:245)
Val x8 = (arg0.count._super - x5._super);
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:248)
Val x9 = ((Val(1) - x3._super) - x5._super);
// builtin Add
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:247)
Val x10 = ((x3._super * Val(25)) + (x9 * Val(24)));
// builtin Mul
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:249)
Val x11 = (x5._super * (Val(1) - x7._super));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:250)
Val x12 = ((x5._super * x7._super) * Val(21));
// builtin Add
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:251)
Val x13 = (arg0.subState._super + Val(1));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:240)
Val24Array x14 = Val24Array{arg0.inner[0]._super, arg0.inner[1]._super, arg0.inner[2]._super, arg0.inner[3]._super, arg0.inner[4]._super, arg0.inner[5]._super, arg0.inner[6]._super, arg0.inner[7]._super, arg0.inner[8]._super, arg0.inner[9]._super, arg0.inner[10]._super, arg0.inner[11]._super, arg0.inner[12]._super, arg0.inner[13]._super, arg0.inner[14]._super, arg0.inner[15]._super, arg0.inner[16]._super, arg0.inner[17]._super, arg0.inner[18]._super, arg0.inner[19]._super, arg0.inner[20]._super, arg0.inner[21]._super, arg0.inner[22]._super, arg0.inner[23]._super};
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:252)
MultiplyByMExtStruct x15 = exec_DoExtRoundByIdx(ctx,x14, arg0.subState._super, LAYOUT_LOOKUP(layout1, nextInner));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:253)
PoseidonOpDefStruct x16 = PoseidonOpDefStruct{
  .hasState = arg0.hasState._super,   .stateAddr = arg0.stateAddr._super,   .bufOutAddr = arg0.bufOutAddr._super,   .isElem = arg0.isElem._super,   .checkOut = arg0.checkOut._super,   .loadTxType = arg0.loadTxType._super};
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:252)
Val24Array x17 = Val24Array{x15._super[0]._super, x15._super[1]._super, x15._super[2]._super, x15._super[3]._super, x15._super[4]._super, x15._super[5]._super, x15._super[6]._super, x15._super[7]._super, x15._super[8]._super, x15._super[9]._super, x15._super[10]._super, x15._super[11]._super, x15._super[12]._super, x15._super[13]._super, x15._super[14]._super, x15._super[15]._super, x15._super[16]._super, x15._super[17]._super, x15._super[18]._super, x15._super[19]._super, x15._super[20]._super, x15._super[21]._super, x15._super[22]._super, x15._super[23]._super};
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:253)
PoseidonStateStruct x18 = exec_PoseidonState(ctx,x16, ((x10 + (x11 * Val(18))) + x12), (x9 * x13), arg0.bufInAddr._super, x8, arg0.mode._super, x17, arg0.zcheck._super, LAYOUT_LOOKUP(layout1, _super));
return x18;
}
PoseidonStateStruct exec_PoseidonIntRounds(ExecContext& ctx,PoseidonStateStruct arg0, BoundLayout<PoseidonIntRoundsLayout> layout1)   {
// PoseidonIntRounds(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:256)
Val24Array x2 = Val24Array{arg0.inner[0]._super, arg0.inner[1]._super, arg0.inner[2]._super, arg0.inner[3]._super, arg0.inner[4]._super, arg0.inner[5]._super, arg0.inner[6]._super, arg0.inner[7]._super, arg0.inner[8]._super, arg0.inner[9]._super, arg0.inner[10]._super, arg0.inner[11]._super, arg0.inner[12]._super, arg0.inner[13]._super, arg0.inner[14]._super, arg0.inner[15]._super, arg0.inner[16]._super, arg0.inner[17]._super, arg0.inner[18]._super, arg0.inner[19]._super, arg0.inner[20]._super, arg0.inner[21]._super, arg0.inner[22]._super, arg0.inner[23]._super};
// PoseidonIntRounds(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:257)
DoIntRoundsStruct x3 = exec_DoIntRounds(ctx,x2, LAYOUT_LOOKUP(layout1, nextInner));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonIntRounds(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:258)
PoseidonOpDefStruct x4 = PoseidonOpDefStruct{
  .hasState = arg0.hasState._super,   .stateAddr = arg0.stateAddr._super,   .bufOutAddr = arg0.bufOutAddr._super,   .isElem = arg0.isElem._super,   .checkOut = arg0.checkOut._super,   .loadTxType = arg0.loadTxType._super};
PoseidonStateStruct x5 = exec_PoseidonState(ctx,x4, Val(24), Val(4), arg0.bufInAddr._super, arg0.count._super, arg0.mode._super, x3._super, arg0.zcheck._super, LAYOUT_LOOKUP(layout1, _super));
return x5;
}
PoseidonStateStruct exec_PoseidonCheckOut(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonCheckOutLayout> layout2)   {
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:262)
PoseidonCheckOut__0Struct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x4, BoundLayout<PoseidonCheckOut__0_SuperLayout8LayoutArray::value_type> x5) {
// builtin Add
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:264)
Val x6 = (arg1_0.bufOutAddr._super + x4);
ReadElemStruct x7 = exec_ReadElem(ctx,arg0, x6, LAYOUT_LOOKUP(x5, goal));
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:265)
Val x8 = (x7._super - arg1_0.inner[to_size_t(x4)]._super);
EQZ(x8, "PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:265)");
return PoseidonCheckOut__0Struct{
};

}));
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:267)
NondetRegStruct x9 = exec_IsZero(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, isNormal));
// builtin Mul
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:268)
Val x10 = ((Val(1) - x9._super) * Val(22));
// builtin Add
Val x11 = ((x9._super * Val(48)) + x10);
// builtin Mul
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:269)
Val x12 = (arg1_0.hasState._super * Val(23));
// builtin Sub
Val x13 = (Val(1) - arg1_0.hasState._super);
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:277)
PoseidonOpDefStruct x14 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:261)
Val24Array x15 = Val24Array{arg1_0.inner[0]._super, arg1_0.inner[1]._super, arg1_0.inner[2]._super, arg1_0.inner[3]._super, arg1_0.inner[4]._super, arg1_0.inner[5]._super, arg1_0.inner[6]._super, arg1_0.inner[7]._super, arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:277)
PoseidonStateStruct x16 = exec_PoseidonState(ctx,x14, (x12 + (x13 * x11)), Val(0), Val(0), Val(0), arg1_0.mode._super, x15, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x16;
}
FieldToWordStruct exec_FieldToWord(ExecContext& ctx,Val arg0, BoundLayout<FieldToWordLayout> layout1)   {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0, Val(65535)), LAYOUT_LOOKUP(layout1, low));
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
NondetU16RegStruct x3 = exec_U16Reg(ctx,((arg0 - x2._super._super) * Val(2013235201)), LAYOUT_LOOKUP(layout1, high));
// builtin Isz
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:287)
Val x4 = isz(x2._super._super);
NondetRegStruct x5 = exec_NondetBitReg(ctx,x4, LAYOUT_LOOKUP(layout1, lowIsZero));
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x6 = (Val(30720) - x3._super._super);
// builtin Component
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
ComponentStruct x7 = ComponentStruct{
};
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x8 = (Val(30719) - x3._super._super);
ComponentStruct x9;
if (to_size_t(x5._super)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:291)
EQZ(x2._super._super, "FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:291)");
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
NondetU16RegStruct x10 = exec_U16Reg(ctx,x6, LAYOUT_LOOKUP(layout1, _2.arm0._0));
x9 = x7;
} else if (to_size_t((Val(1) - x5._super))) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
NondetU16RegStruct x11 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout1, _2.arm1._0));
x9 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:297)
ValU32Struct x12 = ValU32Struct{
  .low = x2._super._super,   .high = x3._super._super};
return FieldToWordStruct{
  .ret = x12};
}
PoseidonStateStruct exec_PoseidonStoreOut(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonStoreOutLayout> layout2)   {
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:301)
PoseidonStoreOut__0Struct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x4, BoundLayout<PoseidonStoreOut__0_SuperLayout8LayoutArray::value_type> x5) {
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:302)
FieldToWordStruct x6 = exec_FieldToWord(ctx,arg1_0.inner[to_size_t(x4)]._super, LAYOUT_LOOKUP(x5, ftw));
// builtin Add
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:303)
Val x7 = (arg1_0.bufOutAddr._super + x4);
MemoryWriteStruct x8 = exec_MemoryWrite(ctx,arg0, x7, x6.ret, LAYOUT_LOOKUP(x5, mw));
return PoseidonStoreOut__0Struct{
};

}));
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:307)
NondetRegStruct x9 = exec_IsZero(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, isNormal));
// builtin Mul
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:308)
Val x10 = ((Val(1) - x9._super) * Val(22));
// builtin Add
Val x11 = ((x9._super * Val(48)) + x10);
// builtin Mul
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:310)
Val x12 = (arg1_0.hasState._super * Val(23));
// builtin Sub
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:311)
Val x13 = (Val(1) - arg1_0.hasState._super);
// builtin ExtInv
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:312)
ExtVal x14 = inv_0(arg1_0.zcheck._super);
NondetExtRegStruct x15 = exec_NondetExtReg(ctx,x14, LAYOUT_LOOKUP(layout2, extInv));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:313)
PoseidonOpDefStruct x16 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:300)
Val24Array x17 = Val24Array{arg1_0.inner[0]._super, arg1_0.inner[1]._super, arg1_0.inner[2]._super, arg1_0.inner[3]._super, arg1_0.inner[4]._super, arg1_0.inner[5]._super, arg1_0.inner[6]._super, arg1_0.inner[7]._super, arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:313)
PoseidonStateStruct x18 = exec_PoseidonState(ctx,x16, (x12 + (x13 * x11)), Val(0), Val(0), Val(0), arg1_0.mode._super, x17, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x18;
}
PoseidonStateStruct exec_PoseidonDoOut(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonDoOutLayout> layout2)   {
// builtin Sub
// PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)
Val x3 = (Val(1) - arg1_0.checkOut._super);
PoseidonStateStruct x4;
if (to_size_t(arg1_0.checkOut._super)) {
PoseidonStateStruct x5 = exec_PoseidonCheckOut(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm0._super));
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)");
x4 = x5;
} else if (to_size_t(x3)) {
PoseidonStateStruct x6 = exec_PoseidonStoreOut(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm1));
x4 = x6;
} else {
   assert(0 && "Reached unreachable mux arm");
}
PoseidonStateStruct x7 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, _super._super));
return x7;
}
PoseidonStateStruct exec_PoseidonStoreState(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonStoreStateLayout> layout2)   {
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:321)
PoseidonStoreState__0Struct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x4, BoundLayout<PoseidonStoreState__0_SuperLayout8LayoutArray::value_type> x5) {
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:322)
FieldToWordStruct x6 = exec_FieldToWord(ctx,arg1_0.inner[to_size_t((x4 + Val(16)))]._super, LAYOUT_LOOKUP(x5, ftw));
// builtin Add
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:323)
Val x7 = (arg1_0.stateAddr._super + x4);
MemoryWriteStruct x8 = exec_MemoryWrite(ctx,arg0, x7, x6.ret, LAYOUT_LOOKUP(x5, mw));
return PoseidonStoreState__0Struct{
};

}));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:327)
PoseidonOpDefStruct x9 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:320)
Val24Array x10 = Val24Array{arg1_0.inner[0]._super, arg1_0.inner[1]._super, arg1_0.inner[2]._super, arg1_0.inner[3]._super, arg1_0.inner[4]._super, arg1_0.inner[5]._super, arg1_0.inner[6]._super, arg1_0.inner[7]._super, arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:327)
PoseidonStateStruct x11 = exec_PoseidonState(ctx,x9, Val(48), Val(0), Val(0), Val(0), arg1_0.mode._super, x10, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x11;
}
IsU24Struct exec_IsU24(ExecContext& ctx,Val arg0, BoundLayout<IsU24Layout> layout1)   {
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:341)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0, Val(65535)), LAYOUT_LOOKUP(layout1, low16));
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:342)
U8RegStruct x3 = exec_U8Reg(ctx,((arg0 - x2._super._super) * Val(2013235201)), LAYOUT_LOOKUP(layout1, _0));
return IsU24Struct{
};
}
PoseidonStateStruct exec_PoseidonPagingLoadNode(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingLoadNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:346)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(1),   .checkOut = Val(1),   .loadTxType = Val(1)};
// builtin Mul
// NodeIdxToAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:338)
// PoseidonPagingLoadNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:358)
Val x4 = (((arg1_0 * Val(2)) + Val(1)) * Val(8));
// PoseidonPagingLoadNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:354)
PoseidonStateStruct x5 = exec_PoseidonState(ctx,x3, Val(18), Val(0), (Val(1140850688) - x4), Val(1), Val(0), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x5;
}
PoseidonStateStruct exec_PoseidonPagingLoadPage(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingLoadPage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:368)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(0),   .checkOut = Val(1),   .loadTxType = Val(1)};
// PoseidonPagingLoadPage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:376)
PoseidonStateStruct x4 = exec_PoseidonState(ctx,x3, Val(18), Val(0), ((arg1_0 - Val(4194304)) * Val(256)), Val(32), Val(1), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x4;
}
PoseidonStateStruct exec_PoseidonPagingLoadDone(ExecContext& ctx,BoundLayout<PoseidonStateLayout> layout0)   {
// PoseidonPagingLoadDone(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:390)
PoseidonStateStruct x1 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = Val(1073741824),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(0)}, Val(1), Val(0), Val(0), Val(0), Val(2), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout0);
return x1;
}
PoseidonStateStruct exec_PoseidonPagingStoreNode(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingStoreNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:394)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(1),   .checkOut = Val(0),   .loadTxType = Val(2)};
// builtin Mul
// NodeIdxToAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:338)
// PoseidonPagingStoreNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:406)
Val x4 = (((arg1_0 * Val(2)) + Val(1)) * Val(8));
// PoseidonPagingStoreNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:402)
PoseidonStateStruct x5 = exec_PoseidonState(ctx,x3, Val(18), Val(0), (Val(1140850688) - x4), Val(1), Val(4), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x5;
}
PoseidonStateStruct exec_PoseidonPagingStorePage(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingStorePage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:416)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(2)};
// PoseidonPagingStorePage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:424)
PoseidonStateStruct x4 = exec_PoseidonState(ctx,x3, Val(18), Val(0), ((arg1_0 - Val(4194304)) * Val(256)), Val(32), Val(3), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x4;
}
PoseidonStateStruct exec_PoseidonPagingStoreDone(ExecContext& ctx,BoundLayout<PoseidonStateLayout> layout0)   {
// PoseidonPagingStoreDone(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:438)
PoseidonStateStruct x1 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = Val(1140850688),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(0)}, Val(5), Val(0), Val(0), Val(0), Val(5), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout0);
return x1;
}
PoseidonStateStruct exec_PoseidonPaging(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, PoseidonStateStruct arg2_0, BoundLayout<PoseidonPagingLayout> layout3)   {
// builtin Sub
// NodeAddrToIdx(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:337)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:442)
Val x4 = (Val(1140850688) - arg2_0.bufOutAddr._super);
// builtin Mul
// Div(<preamble>:19)
Val x5 = (x4 * Val(1761607681));
// nextPagingIdx(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:335)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:443)
auto [x6, x7] = INVOKE_EXTERN(ctx,nextPagingIdx);
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:444)
NondetRegStruct x8 = exec_NondetReg(ctx,x6, LAYOUT_LOOKUP(layout3, curIdx));
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:445)
NondetRegStruct x9 = exec_NondetReg(ctx,x7, LAYOUT_LOOKUP(layout3, curMode));
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:446)
OneHot_6_Struct x10 = exec_OneHot_6_(ctx,x9._super, LAYOUT_LOOKUP(layout3, modeSplit));
// builtin Add
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:447)
Val x11 = (x10._super[0]._super + x10._super[1]._super);
Val x12 = (x11 + x10._super[2]._super);
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:448)
IsU24Struct x13 = exec_IsU24(ctx,x8._super, LAYOUT_LOOKUP(layout3, _0));
// builtin Component
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:449)
ComponentStruct x14 = ComponentStruct{
};
ComponentStruct x15;
if (to_size_t(x12)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:450)
IsU24Struct x16 = exec_IsU24(ctx,(x8._super - (x5 + Val(1))), LAYOUT_LOOKUP(layout3, _3.arm0._0));
x15 = x14;
} else if (to_size_t((Val(1) - x12))) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:452)
IsU24Struct x17 = exec_IsU24(ctx,((x5 - Val(1)) - x8._super), LAYOUT_LOOKUP(layout3, _3.arm1._0));
x15 = x14;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:455)
NondetRegStruct x18 = exec_BitReg(ctx,(x9._super - arg1_0), LAYOUT_LOOKUP(layout3, _4));
PoseidonStateStruct x19;
if (to_size_t(x10._super[0]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:457)
PoseidonStateStruct x20 = exec_PoseidonPagingLoadNode(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm0));
x19 = x20;
} else if (to_size_t(x10._super[1]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:458)
PoseidonStateStruct x21 = exec_PoseidonPagingLoadPage(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm1));
x19 = x21;
} else if (to_size_t(x10._super[2]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:459)
PoseidonStateStruct x22 = exec_PoseidonPagingLoadDone(ctx,LAYOUT_LOOKUP(layout3, _super.arm2));
x19 = x22;
} else if (to_size_t(x10._super[3]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:460)
PoseidonStateStruct x23 = exec_PoseidonPagingStorePage(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm3));
x19 = x23;
} else if (to_size_t(x10._super[4]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:461)
PoseidonStateStruct x24 = exec_PoseidonPagingStoreNode(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm4));
x19 = x24;
} else if (to_size_t(x10._super[5]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:462)
PoseidonStateStruct x25 = exec_PoseidonPagingStoreDone(ctx,LAYOUT_LOOKUP(layout3, _super.arm5));
x19 = x25;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:456)
PoseidonStateStruct x26 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout3, _super._super));
return x26;
}
InstOutputBaseStruct exec_Poseidon0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Poseidon0Layout> layout2, GlobalBuf global3)   {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:467)
DoCycleTableStruct x4 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:468)
Val x5 = (arg1_0.state - (arg1_0.minor + Val(16)));
EQZ(x5, "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:468)");
PoseidonStateStruct x6;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:471)
PoseidonStateStruct x7 = exec_PoseidonEntry(ctx,arg0, arg1_0.pcU32, arg1_0.mode, LAYOUT_LOOKUP(layout2, stateRedef.arm0._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x7;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:472)
PoseidonStateStruct x8 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x9 = exec_PoseidonLoadState(ctx,arg0, x8, LAYOUT_LOOKUP(layout2, stateRedef.arm1._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:473)
PoseidonStateStruct x10 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x11 = exec_PoseidonLoadIn(ctx,arg0, x10, LAYOUT_LOOKUP(layout2, stateRedef.arm2._super), global3);
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x11;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:474)
PoseidonStateStruct x12 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm3._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra38.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra39.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra40.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra41.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra42.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra43.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra44.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra45.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra46.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra46.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra47.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra47.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra48.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra48.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra49.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra49.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:475)
PoseidonStateStruct x13 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm4._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra38.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra39.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra40.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra41.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra42.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra43.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra44.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra45.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra46.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra46.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra47.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra47.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra48.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra48.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra49.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra49.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x13;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:476)
PoseidonStateStruct x14 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x15 = exec_PoseidonDoOut(ctx,arg0, x14, LAYOUT_LOOKUP(layout2, stateRedef.arm5._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x15;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:477)
PoseidonStateStruct x16 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x17 = exec_PoseidonPaging(ctx,arg0, arg1_0.mode, x16, LAYOUT_LOOKUP(layout2, stateRedef.arm6._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra38.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra39.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra40.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra41.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra42.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra43.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra44.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra45.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x17;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:478)
PoseidonStateStruct x18 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x19 = exec_PoseidonStoreState(ctx,arg0, x18, LAYOUT_LOOKUP(layout2, stateRedef.arm7._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)");
x6 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
PoseidonStateStruct x20 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:480)
BigIntTopStateStruct x21 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
InstOutputBaseStruct x22 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x20.nextState._super,   .newMode = x20.mode._super,   .topState = x21};
return x22;
}
InstOutputBaseStruct exec_Poseidon1(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Poseidon1Layout> layout2)   {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:484)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:485)
Val x4 = (arg1_0.state - (arg1_0.minor + Val(24)));
EQZ(x4, "Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:485)");
PoseidonStateStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:488)
PoseidonStateStruct x6 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x7 = exec_PoseidonExtRound(ctx,x6, LAYOUT_LOOKUP(layout2, stateRedef.arm0));
x5 = x7;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:489)
PoseidonStateStruct x8 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x9 = exec_PoseidonIntRounds(ctx,x8, LAYOUT_LOOKUP(layout2, stateRedef.arm1));
x5 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:490)
PoseidonStateStruct x10 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm2));
x5 = x10;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:491)
PoseidonStateStruct x11 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm3));
x5 = x11;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:492)
PoseidonStateStruct x12 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm4));
x5 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:493)
PoseidonStateStruct x13 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm5));
x5 = x13;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:494)
PoseidonStateStruct x14 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm6));
x5 = x14;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:495)
PoseidonStateStruct x15 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm7));
x5 = x15;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:487)
PoseidonStateStruct x16 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:497)
BigIntTopStateStruct x17 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
InstOutputBaseStruct x18 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x16.nextState._super,   .newMode = x16.mode._super,   .topState = x17};
return x18;
}
CarryExtractStruct exec_CarryExtract(ExecContext& ctx,Val arg0, BoundLayout<CarryExtractLayout> layout1)   {
// builtin Mul
// Div(<preamble>:19)
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:34)
Val x2 = (bitAnd(arg0, Val(983040)) * Val(2013235201));
NondetRegStruct x3 = exec_NondetBitReg(ctx,bitAnd(x2, Val(1)), LAYOUT_LOOKUP(layout1, bit0));
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:35)
NondetRegStruct x4 = exec_NondetBitReg(ctx,(bitAnd(x2, Val(2)) * Val(1006632961)), LAYOUT_LOOKUP(layout1, bit1));
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:36)
NondetRegStruct x5 = exec_NondetBitReg(ctx,(bitAnd(x2, Val(4)) * Val(1509949441)), LAYOUT_LOOKUP(layout1, bit2));
// builtin Add
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:37)
Val x6 = ((x5._super * Val(4)) + (x4._super * Val(2)));
Val x7 = (x6 + x3._super);
return CarryExtractStruct{
  .carry = x7,   .out = (arg0 - (x7 * Val(65536)))};
}
UnpackReg_32__16_Struct exec_UnpackReg_32__16_(ExecContext& ctx,Val2Array arg0, BoundLayout<UnpackReg_32__16_Layout> layout1)   {
// Div(<preamble>:18)
// UnpackNondet(zirgen/circuit/rv32im/v2/dsl/pack.zir:29)
// UnpackReg(zirgen/circuit/rv32im/v2/dsl/pack.zir:34)
DivStruct x2 = DivStruct{
  ._super = bitAnd(arg0[0], Val(1))};
// builtin Mul
// Div(<preamble>:19)
Val x3 = (bitAnd(arg0[0], Val(2)) * Val(1006632961));
Val x4 = (bitAnd(arg0[0], Val(4)) * Val(1509949441));
Val x5 = (bitAnd(arg0[0], Val(8)) * Val(1761607681));
Val x6 = (bitAnd(arg0[0], Val(16)) * Val(1887436801));
Val x7 = (bitAnd(arg0[0], Val(32)) * Val(1950351361));
Val x8 = (bitAnd(arg0[0], Val(64)) * Val(1981808641));
Val x9 = (bitAnd(arg0[0], Val(128)) * Val(1997537281));
Val x10 = (bitAnd(arg0[0], Val(256)) * Val(2005401601));
Val x11 = (bitAnd(arg0[0], Val(512)) * Val(2009333761));
Val x12 = (bitAnd(arg0[0], Val(1024)) * Val(2011299841));
Val x13 = (bitAnd(arg0[0], Val(2048)) * Val(2012282881));
Val x14 = (bitAnd(arg0[0], Val(4096)) * Val(2012774401));
Val x15 = (bitAnd(arg0[0], Val(8192)) * Val(2013020161));
Val x16 = (bitAnd(arg0[0], Val(16384)) * Val(2013143041));
Val x17 = (bitAnd(arg0[0], Val(32768)) * Val(2013204481));
// Div(<preamble>:18)
DivStruct x18 = DivStruct{
  ._super = bitAnd(arg0[1], Val(1))};
// builtin Mul
// Div(<preamble>:19)
Val x19 = (bitAnd(arg0[1], Val(2)) * Val(1006632961));
Val x20 = (bitAnd(arg0[1], Val(4)) * Val(1509949441));
Val x21 = (bitAnd(arg0[1], Val(8)) * Val(1761607681));
Val x22 = (bitAnd(arg0[1], Val(16)) * Val(1887436801));
Val x23 = (bitAnd(arg0[1], Val(32)) * Val(1950351361));
Val x24 = (bitAnd(arg0[1], Val(64)) * Val(1981808641));
Val x25 = (bitAnd(arg0[1], Val(128)) * Val(1997537281));
Val x26 = (bitAnd(arg0[1], Val(256)) * Val(2005401601));
Val x27 = (bitAnd(arg0[1], Val(512)) * Val(2009333761));
Val x28 = (bitAnd(arg0[1], Val(1024)) * Val(2011299841));
Val x29 = (bitAnd(arg0[1], Val(2048)) * Val(2012282881));
Val x30 = (bitAnd(arg0[1], Val(4096)) * Val(2012774401));
Val x31 = (bitAnd(arg0[1], Val(8192)) * Val(2013020161));
Val x32 = (bitAnd(arg0[1], Val(16384)) * Val(2013143041));
Val x33 = (bitAnd(arg0[1], Val(32768)) * Val(2013204481));
// UnpackReg(zirgen/circuit/rv32im/v2/dsl/pack.zir:35)
NondetRegStruct32Array x34 = map(Val32Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23), Val(24), Val(25), Val(26), Val(27), Val(28), Val(29), Val(30), Val(31)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val32Array::value_type x35, BoundLayout<NondetRegLayout32LayoutArray::value_type> x36) {
NondetRegStruct x37 = exec_NondetBitReg(ctx,DivStruct32Array{x2, DivStruct{
  ._super = x3}, DivStruct{
  ._super = x4}, DivStruct{
  ._super = x5}, DivStruct{
  ._super = x6}, DivStruct{
  ._super = x7}, DivStruct{
  ._super = x8}, DivStruct{
  ._super = x9}, DivStruct{
  ._super = x10}, DivStruct{
  ._super = x11}, DivStruct{
  ._super = x12}, DivStruct{
  ._super = x13}, DivStruct{
  ._super = x14}, DivStruct{
  ._super = x15}, DivStruct{
  ._super = x16}, DivStruct{
  ._super = x17}, x18, DivStruct{
  ._super = x19}, DivStruct{
  ._super = x20}, DivStruct{
  ._super = x21}, DivStruct{
  ._super = x22}, DivStruct{
  ._super = x23}, DivStruct{
  ._super = x24}, DivStruct{
  ._super = x25}, DivStruct{
  ._super = x26}, DivStruct{
  ._super = x27}, DivStruct{
  ._super = x28}, DivStruct{
  ._super = x29}, DivStruct{
  ._super = x30}, DivStruct{
  ._super = x31}, DivStruct{
  ._super = x32}, DivStruct{
  ._super = x33}}[to_size_t(x35)]._super, x36);
return x37;

}));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// UnpackReg(zirgen/circuit/rv32im/v2/dsl/pack.zir:36)
Val x38 = (x34[1]._super * Val(2));
Val x39 = (x34[2]._super * Val(4));
Val x40 = (x34[3]._super * Val(8));
Val x41 = (x34[4]._super * Val(16));
Val x42 = (x34[5]._super * Val(32));
Val x43 = (x34[6]._super * Val(64));
Val x44 = (x34[7]._super * Val(128));
Val x45 = (x34[8]._super * Val(256));
Val x46 = (x34[9]._super * Val(512));
Val x47 = (x34[10]._super * Val(1024));
Val x48 = (x34[11]._super * Val(2048));
Val x49 = (x34[12]._super * Val(4096));
Val x50 = (x34[13]._super * Val(8192));
Val x51 = (x34[14]._super * Val(16384));
Val x52 = (x34[15]._super * Val(32768));
// builtin Add
Val x53 = (x34[0]._super + x38);
Val x54 = (((x53 + x39) + x40) + x41);
Val x55 = (((x54 + x42) + x43) + x44);
Val x56 = (((x55 + x45) + x46) + x47);
Val x57 = (((x56 + x48) + x49) + x50);
// builtin Mul
Val x58 = (x34[17]._super * Val(2));
Val x59 = (x34[18]._super * Val(4));
Val x60 = (x34[19]._super * Val(8));
Val x61 = (x34[20]._super * Val(16));
Val x62 = (x34[21]._super * Val(32));
Val x63 = (x34[22]._super * Val(64));
Val x64 = (x34[23]._super * Val(128));
Val x65 = (x34[24]._super * Val(256));
Val x66 = (x34[25]._super * Val(512));
Val x67 = (x34[26]._super * Val(1024));
Val x68 = (x34[27]._super * Val(2048));
Val x69 = (x34[28]._super * Val(4096));
Val x70 = (x34[29]._super * Val(8192));
Val x71 = (x34[30]._super * Val(16384));
Val x72 = (x34[31]._super * Val(32768));
// builtin Add
Val x73 = (x34[16]._super + x58);
Val x74 = (((x73 + x59) + x60) + x61);
Val x75 = (((x74 + x62) + x63) + x64);
Val x76 = (((x75 + x65) + x66) + x67);
Val x77 = (((x76 + x68) + x69) + x70);
// EqArr(zirgen/circuit/rv32im/v2/dsl/arr.zir:32)
Val x78 = (((x57 + x51) + x52) - arg0[0]);
EQZ(x78, "loc(callsite( EqArr ( zirgen/circuit/rv32im/v2/dsl/arr.zir :32:11) at  UnpackReg ( zirgen/circuit/rv32im/v2/dsl/pack.zir :36:14)))");
Val x79 = (((x77 + x71) + x72) - arg0[1]);
EQZ(x79, "loc(callsite( EqArr ( zirgen/circuit/rv32im/v2/dsl/arr.zir :32:11) at  UnpackReg ( zirgen/circuit/rv32im/v2/dsl/pack.zir :36:14)))");
return UnpackReg_32__16_Struct{
  ._super = x34};
}
UnpackReg_32__16_Struct exec_CarryAndExpand(ExecContext& ctx,Val2Array arg0, BoundLayout<CarryAndExpandLayout> layout1)   {
// CarryAndExpand(zirgen/circuit/rv32im/v2/dsl/sha2.zir:42)
CarryExtractStruct x2 = exec_CarryExtract(ctx,arg0[0], LAYOUT_LOOKUP(layout1, lowCarry));
// CarryAndExpand(zirgen/circuit/rv32im/v2/dsl/sha2.zir:43)
CarryExtractStruct x3 = exec_CarryExtract(ctx,(arg0[1] + x2.carry), LAYOUT_LOOKUP(layout1, highCarry));
// CarryAndExpand(zirgen/circuit/rv32im/v2/dsl/sha2.zir:44)
UnpackReg_32__16_Struct x4 = exec_UnpackReg_32__16_(ctx,Val2Array{x2.out, x3.out}, LAYOUT_LOOKUP(layout1, _super));
return x4;
}
ShaStateStruct back_ShaState(ExecContext& ctx,Index distance0, BoundLayout<ShaStateLayout> layout1)   {
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
NondetRegStruct x2 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, stateInAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x3 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, stateOutAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x4 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, dataAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, count));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x6 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, kAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x7 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, round));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x8 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, nextState));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
Val32Array x9 = Val32Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23), Val(24), Val(25), Val(26), Val(27), Val(28), Val(29), Val(30), Val(31)};
ShaStateAStruct32Array x10 = map(x9, LAYOUT_LOOKUP(layout1, a), ([&](Val32Array::value_type x11, BoundLayout<NondetRegLayout32LayoutArray::value_type> x12) {
NondetRegStruct x13 = back_NondetReg(ctx,distance0, x12);
return ShaStateAStruct{
  ._super = x13};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
ShaStateEStruct32Array x14 = map(x9, LAYOUT_LOOKUP(layout1, e), ([&](Val32Array::value_type x15, BoundLayout<NondetRegLayout32LayoutArray::value_type> x16) {
NondetRegStruct x17 = back_NondetReg(ctx,distance0, x16);
return ShaStateEStruct{
  ._super = x17};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
ShaStateWStruct32Array x18 = map(x9, LAYOUT_LOOKUP(layout1, w), ([&](Val32Array::value_type x19, BoundLayout<NondetRegLayout32LayoutArray::value_type> x20) {
NondetRegStruct x21 = back_NondetReg(ctx,distance0, x20);
return ShaStateWStruct{
  ._super = x21};

}));
return ShaStateStruct{
  .stateInAddr = x2,   .stateOutAddr = x3,   .dataAddr = x4,   .count = x5,   .kAddr = x6,   .round = x7,   .nextState = x8,   .a = x10,   .e = x14,   .w = x18};
}
ShaStateStruct exec_ShaState(ExecContext& ctx,Val32Array arg0, Val32Array arg1_0, Val32Array arg2_0, Val arg3, Val arg4, Val arg5, Val arg6, Val arg7, Val arg8, Val arg9, BoundLayout<ShaStateLayout> layout10)   {
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
NondetRegStruct x11 = exec_Reg(ctx,arg3, LAYOUT_LOOKUP(layout10, stateInAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x12 = exec_Reg(ctx,arg4, LAYOUT_LOOKUP(layout10, stateOutAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x13 = exec_Reg(ctx,arg5, LAYOUT_LOOKUP(layout10, dataAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x14 = exec_Reg(ctx,arg6, LAYOUT_LOOKUP(layout10, count));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x15 = exec_Reg(ctx,arg7, LAYOUT_LOOKUP(layout10, kAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x16 = exec_Reg(ctx,arg8, LAYOUT_LOOKUP(layout10, round));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x17 = exec_Reg(ctx,arg9, LAYOUT_LOOKUP(layout10, nextState));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
ShaStateAStruct32Array x18 = map(arg0, LAYOUT_LOOKUP(layout10, a), ([&](Val32Array::value_type x19, BoundLayout<NondetRegLayout32LayoutArray::value_type> x20) {
NondetRegStruct x21 = exec_NondetReg(ctx,x19, x20);
return ShaStateAStruct{
  ._super = x21};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
ShaStateEStruct32Array x22 = map(arg1_0, LAYOUT_LOOKUP(layout10, e), ([&](Val32Array::value_type x23, BoundLayout<NondetRegLayout32LayoutArray::value_type> x24) {
NondetRegStruct x25 = exec_NondetReg(ctx,x23, x24);
return ShaStateEStruct{
  ._super = x25};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
ShaStateWStruct32Array x26 = map(arg2_0, LAYOUT_LOOKUP(layout10, w), ([&](Val32Array::value_type x27, BoundLayout<NondetRegLayout32LayoutArray::value_type> x28) {
NondetRegStruct x29 = exec_NondetReg(ctx,x27, x28);
return ShaStateWStruct{
  ._super = x29};

}));
return ShaStateStruct{
  .stateInAddr = x11,   .stateOutAddr = x12,   .dataAddr = x13,   .count = x14,   .kAddr = x15,   .round = x16,   .nextState = x17,   .a = x18,   .e = x22,   .w = x26};
}
ShaStateStruct exec_ShaInvalid(ExecContext& ctx,BoundLayout<ShaStateLayout> layout0)   {
// ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:33)
EQZ(Val(2013265920), "ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:33)");
// ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:35)
Val32Array x1 = Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
// ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:34)
ShaStateStruct x2 = exec_ShaState(ctx,x1, x1, x1, Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(48), layout0);
return x2;
}
ShaStateStruct exec_ShaEcall(ExecContext& ctx,NondetRegStruct arg0, BoundLayout<ShaEcallLayout> layout1)   {
// Log(<preamble>:22)
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:44)
INVOKE_EXTERN(ctx,log, "SHA ECALL", std::initializer_list<Val>{});
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:46)
ReadAddrStruct x2 = exec_ReadAddr(ctx,arg0, Val(10), LAYOUT_LOOKUP(layout1, stateInAddr));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:47)
ReadAddrStruct x3 = exec_ReadAddr(ctx,arg0, Val(11), LAYOUT_LOOKUP(layout1, stateOutAddr));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:48)
ReadAddrStruct x4 = exec_ReadAddr(ctx,arg0, Val(12), LAYOUT_LOOKUP(layout1, dataAddr));
// Log(<preamble>:22)
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:49)
INVOKE_EXTERN(ctx,log, "Data Addr: ", std::initializer_list<Val>{x4._super});
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:50)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725453), LAYOUT_LOOKUP(layout1, _0));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:51)
ReadAddrStruct x6 = exec_ReadAddr(ctx,arg0, Val(14), LAYOUT_LOOKUP(layout1, kAddr));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:53)
Val32Array x7 = Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:52)
ShaStateStruct x8 = exec_ShaState(ctx,x7, x7, x7, x2._super, x3._super, x4._super, x5._super.low, x6._super, Val(0), Val(33), LAYOUT_LOOKUP(layout1, _super));
return x8;
}
ShaStateStruct exec_ShaLoadState(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, BoundLayout<ShaLoadStateLayout> layout2)   {
// builtin Sub
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:99)
Val x3 = (Val(3) - arg1_0.round._super);
NondetRegStruct x4 = exec_IsZero(ctx,x3, LAYOUT_LOOKUP(layout2, lastRound));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:100)
NondetRegStruct x5 = exec_IsZero(ctx,arg1_0.count._super, LAYOUT_LOOKUP(layout2, countZero));
// builtin Sub
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:101)
Val x6 = (Val(1) - x4._super);
Val x7;
if (to_size_t(x4._super)) {
Val x8;
if (to_size_t(x5._super)) {
x8 = Val(48);
} else if (to_size_t((Val(1) - x5._super))) {
x8 = Val(34);
} else {
   assert(0 && "Reached unreachable mux arm");
}
x7 = x8;
} else if (to_size_t(x6)) {
x7 = Val(33);
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Add
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:110)
Val x9 = (arg1_0.stateInAddr._super + Val(3));
GetDataStruct x10 = exec_MemoryRead(ctx,arg0, (x9 - arg1_0.round._super), LAYOUT_LOOKUP(layout2, a32));
// builtin Add
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:111)
Val x11 = (arg1_0.stateInAddr._super + Val(7));
GetDataStruct x12 = exec_MemoryRead(ctx,arg0, (x11 - arg1_0.round._super), LAYOUT_LOOKUP(layout2, e32));
// builtin Add
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:112)
Val x13 = (arg1_0.stateOutAddr._super + Val(3));
MemoryWriteStruct x14 = exec_MemoryWrite(ctx,arg0, (x13 - arg1_0.round._super), x10._super, LAYOUT_LOOKUP(layout2, _0));
// builtin Add
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:113)
Val x15 = (arg1_0.stateOutAddr._super + Val(7));
MemoryWriteStruct x16 = exec_MemoryWrite(ctx,arg0, (x15 - arg1_0.round._super), x12._super, LAYOUT_LOOKUP(layout2, _1));
// builtin BitAnd
// UnpackNondet(zirgen/circuit/rv32im/v2/dsl/pack.zir:29)
// UnpackU32NondetBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:71)
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:115)
Val x17 = bitAnd(x10._super.low, Val(1));
Val x18 = bitAnd(x10._super.low, Val(2));
Val x19 = bitAnd(x10._super.low, Val(4));
Val x20 = bitAnd(x10._super.low, Val(8));
Val x21 = bitAnd(x10._super.low, Val(16));
Val x22 = bitAnd(x10._super.low, Val(32));
Val x23 = bitAnd(x10._super.low, Val(64));
Val x24 = bitAnd(x10._super.low, Val(128));
Val x25 = bitAnd(x10._super.low, Val(256));
Val x26 = bitAnd(x10._super.low, Val(512));
Val x27 = bitAnd(x10._super.low, Val(1024));
Val x28 = bitAnd(x10._super.low, Val(2048));
Val x29 = bitAnd(x10._super.low, Val(4096));
Val x30 = bitAnd(x10._super.low, Val(8192));
Val x31 = bitAnd(x10._super.low, Val(16384));
Val x32 = bitAnd(x10._super.low, Val(32768));
Val x33 = bitAnd(x10._super.high, Val(1));
Val x34 = bitAnd(x10._super.high, Val(2));
Val x35 = bitAnd(x10._super.high, Val(4));
Val x36 = bitAnd(x10._super.high, Val(8));
Val x37 = bitAnd(x10._super.high, Val(16));
Val x38 = bitAnd(x10._super.high, Val(32));
Val x39 = bitAnd(x10._super.high, Val(64));
Val x40 = bitAnd(x10._super.high, Val(128));
Val x41 = bitAnd(x10._super.high, Val(256));
Val x42 = bitAnd(x10._super.high, Val(512));
Val x43 = bitAnd(x10._super.high, Val(1024));
Val x44 = bitAnd(x10._super.high, Val(2048));
Val x45 = bitAnd(x10._super.high, Val(4096));
Val x46 = bitAnd(x10._super.high, Val(8192));
Val x47 = bitAnd(x10._super.high, Val(16384));
Val x48 = bitAnd(x10._super.high, Val(32768));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:116)
Val x49 = bitAnd(x12._super.low, Val(1));
Val x50 = bitAnd(x12._super.low, Val(2));
Val x51 = bitAnd(x12._super.low, Val(4));
Val x52 = bitAnd(x12._super.low, Val(8));
Val x53 = bitAnd(x12._super.low, Val(16));
Val x54 = bitAnd(x12._super.low, Val(32));
Val x55 = bitAnd(x12._super.low, Val(64));
Val x56 = bitAnd(x12._super.low, Val(128));
Val x57 = bitAnd(x12._super.low, Val(256));
Val x58 = bitAnd(x12._super.low, Val(512));
Val x59 = bitAnd(x12._super.low, Val(1024));
Val x60 = bitAnd(x12._super.low, Val(2048));
Val x61 = bitAnd(x12._super.low, Val(4096));
Val x62 = bitAnd(x12._super.low, Val(8192));
Val x63 = bitAnd(x12._super.low, Val(16384));
Val x64 = bitAnd(x12._super.low, Val(32768));
Val x65 = bitAnd(x12._super.high, Val(1));
Val x66 = bitAnd(x12._super.high, Val(2));
Val x67 = bitAnd(x12._super.high, Val(4));
Val x68 = bitAnd(x12._super.high, Val(8));
Val x69 = bitAnd(x12._super.high, Val(16));
Val x70 = bitAnd(x12._super.high, Val(32));
Val x71 = bitAnd(x12._super.high, Val(64));
Val x72 = bitAnd(x12._super.high, Val(128));
Val x73 = bitAnd(x12._super.high, Val(256));
Val x74 = bitAnd(x12._super.high, Val(512));
Val x75 = bitAnd(x12._super.high, Val(1024));
Val x76 = bitAnd(x12._super.high, Val(2048));
Val x77 = bitAnd(x12._super.high, Val(4096));
Val x78 = bitAnd(x12._super.high, Val(8192));
Val x79 = bitAnd(x12._super.high, Val(16384));
Val x80 = bitAnd(x12._super.high, Val(32768));
// builtin Add
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:123)
Val x81 = (arg1_0.round._super + Val(1));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:114)
ShaStateStruct x82 = exec_ShaState(ctx,Val32Array{(x41 * Val(2005401601)), (x42 * Val(2009333761)), (x43 * Val(2011299841)), (x44 * Val(2012282881)), (x45 * Val(2012774401)), (x46 * Val(2013020161)), (x47 * Val(2013143041)), (x48 * Val(2013204481)), x33, (x34 * Val(1006632961)), (x35 * Val(1509949441)), (x36 * Val(1761607681)), (x37 * Val(1887436801)), (x38 * Val(1950351361)), (x39 * Val(1981808641)), (x40 * Val(1997537281)), (x25 * Val(2005401601)), (x26 * Val(2009333761)), (x27 * Val(2011299841)), (x28 * Val(2012282881)), (x29 * Val(2012774401)), (x30 * Val(2013020161)), (x31 * Val(2013143041)), (x32 * Val(2013204481)), x17, (x18 * Val(1006632961)), (x19 * Val(1509949441)), (x20 * Val(1761607681)), (x21 * Val(1887436801)), (x22 * Val(1950351361)), (x23 * Val(1981808641)), (x24 * Val(1997537281))}, Val32Array{(x73 * Val(2005401601)), (x74 * Val(2009333761)), (x75 * Val(2011299841)), (x76 * Val(2012282881)), (x77 * Val(2012774401)), (x78 * Val(2013020161)), (x79 * Val(2013143041)), (x80 * Val(2013204481)), x65, (x66 * Val(1006632961)), (x67 * Val(1509949441)), (x68 * Val(1761607681)), (x69 * Val(1887436801)), (x70 * Val(1950351361)), (x71 * Val(1981808641)), (x72 * Val(1997537281)), (x57 * Val(2005401601)), (x58 * Val(2009333761)), (x59 * Val(2011299841)), (x60 * Val(2012282881)), (x61 * Val(2012774401)), (x62 * Val(2013020161)), (x63 * Val(2013143041)), (x64 * Val(2013204481)), x49, (x50 * Val(1006632961)), (x51 * Val(1509949441)), (x52 * Val(1761607681)), (x53 * Val(1887436801)), (x54 * Val(1950351361)), (x55 * Val(1981808641)), (x56 * Val(1997537281))}, Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, arg1_0.dataAddr._super, arg1_0.count._super, arg1_0.kAddr._super, (x6 * x81), x7, LAYOUT_LOOKUP(layout2, _super));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:87)
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:126)
Val x83 = (x82.a[1]._super._super * Val(2));
Val x84 = (x82.a[2]._super._super * Val(4));
Val x85 = (x82.a[3]._super._super * Val(8));
Val x86 = (x82.a[4]._super._super * Val(16));
Val x87 = (x82.a[5]._super._super * Val(32));
Val x88 = (x82.a[6]._super._super * Val(64));
Val x89 = (x82.a[7]._super._super * Val(128));
// builtin Add
Val x90 = (x82.a[0]._super._super + x83);
Val x91 = (((x90 + x84) + x85) + x86);
Val x92 = (((x91 + x87) + x88) + x89);
// builtin Mul
Val x93 = (x82.a[9]._super._super * Val(2));
Val x94 = (x82.a[10]._super._super * Val(4));
Val x95 = (x82.a[11]._super._super * Val(8));
Val x96 = (x82.a[12]._super._super * Val(16));
Val x97 = (x82.a[13]._super._super * Val(32));
Val x98 = (x82.a[14]._super._super * Val(64));
Val x99 = (x82.a[15]._super._super * Val(128));
// builtin Add
Val x100 = (x82.a[8]._super._super + x93);
Val x101 = (((x100 + x94) + x95) + x96);
Val x102 = (((x101 + x97) + x98) + x99);
// builtin Mul
Val x103 = (x82.a[17]._super._super * Val(2));
Val x104 = (x82.a[18]._super._super * Val(4));
Val x105 = (x82.a[19]._super._super * Val(8));
Val x106 = (x82.a[20]._super._super * Val(16));
Val x107 = (x82.a[21]._super._super * Val(32));
Val x108 = (x82.a[22]._super._super * Val(64));
Val x109 = (x82.a[23]._super._super * Val(128));
// builtin Add
Val x110 = (x82.a[16]._super._super + x103);
Val x111 = (((x110 + x104) + x105) + x106);
Val x112 = (((x111 + x107) + x108) + x109);
// builtin Mul
Val x113 = (x82.a[25]._super._super * Val(2));
Val x114 = (x82.a[26]._super._super * Val(4));
Val x115 = (x82.a[27]._super._super * Val(8));
Val x116 = (x82.a[28]._super._super * Val(16));
Val x117 = (x82.a[29]._super._super * Val(32));
Val x118 = (x82.a[30]._super._super * Val(64));
Val x119 = (x82.a[31]._super._super * Val(128));
// builtin Add
Val x120 = (x82.a[24]._super._super + x113);
Val x121 = (((x120 + x114) + x115) + x116);
Val x122 = (((x121 + x117) + x118) + x119);
// builtin Sub
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:7)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:88)
Val x123 = (Val(1) - x82.a[0]._super._super);
// builtin Mul
Val x124 = (x82.a[0]._super._super * x123);
EQZ(x124, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x125 = (Val(1) - x82.a[1]._super._super);
// builtin Mul
Val x126 = (x82.a[1]._super._super * x125);
EQZ(x126, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x127 = (Val(1) - x82.a[2]._super._super);
// builtin Mul
Val x128 = (x82.a[2]._super._super * x127);
EQZ(x128, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x129 = (Val(1) - x82.a[3]._super._super);
// builtin Mul
Val x130 = (x82.a[3]._super._super * x129);
EQZ(x130, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x131 = (Val(1) - x82.a[4]._super._super);
// builtin Mul
Val x132 = (x82.a[4]._super._super * x131);
EQZ(x132, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x133 = (Val(1) - x82.a[5]._super._super);
// builtin Mul
Val x134 = (x82.a[5]._super._super * x133);
EQZ(x134, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x135 = (Val(1) - x82.a[6]._super._super);
// builtin Mul
Val x136 = (x82.a[6]._super._super * x135);
EQZ(x136, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x137 = (Val(1) - x82.a[7]._super._super);
// builtin Mul
Val x138 = (x82.a[7]._super._super * x137);
EQZ(x138, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x139 = (Val(1) - x82.a[8]._super._super);
// builtin Mul
Val x140 = (x82.a[8]._super._super * x139);
EQZ(x140, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x141 = (Val(1) - x82.a[9]._super._super);
// builtin Mul
Val x142 = (x82.a[9]._super._super * x141);
EQZ(x142, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x143 = (Val(1) - x82.a[10]._super._super);
// builtin Mul
Val x144 = (x82.a[10]._super._super * x143);
EQZ(x144, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x145 = (Val(1) - x82.a[11]._super._super);
// builtin Mul
Val x146 = (x82.a[11]._super._super * x145);
EQZ(x146, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x147 = (Val(1) - x82.a[12]._super._super);
// builtin Mul
Val x148 = (x82.a[12]._super._super * x147);
EQZ(x148, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x149 = (Val(1) - x82.a[13]._super._super);
// builtin Mul
Val x150 = (x82.a[13]._super._super * x149);
EQZ(x150, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x151 = (Val(1) - x82.a[14]._super._super);
// builtin Mul
Val x152 = (x82.a[14]._super._super * x151);
EQZ(x152, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x153 = (Val(1) - x82.a[15]._super._super);
// builtin Mul
Val x154 = (x82.a[15]._super._super * x153);
EQZ(x154, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x155 = (Val(1) - x82.a[16]._super._super);
// builtin Mul
Val x156 = (x82.a[16]._super._super * x155);
EQZ(x156, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x157 = (Val(1) - x82.a[17]._super._super);
// builtin Mul
Val x158 = (x82.a[17]._super._super * x157);
EQZ(x158, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x159 = (Val(1) - x82.a[18]._super._super);
// builtin Mul
Val x160 = (x82.a[18]._super._super * x159);
EQZ(x160, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x161 = (Val(1) - x82.a[19]._super._super);
// builtin Mul
Val x162 = (x82.a[19]._super._super * x161);
EQZ(x162, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x163 = (Val(1) - x82.a[20]._super._super);
// builtin Mul
Val x164 = (x82.a[20]._super._super * x163);
EQZ(x164, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x165 = (Val(1) - x82.a[21]._super._super);
// builtin Mul
Val x166 = (x82.a[21]._super._super * x165);
EQZ(x166, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x167 = (Val(1) - x82.a[22]._super._super);
// builtin Mul
Val x168 = (x82.a[22]._super._super * x167);
EQZ(x168, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x169 = (Val(1) - x82.a[23]._super._super);
// builtin Mul
Val x170 = (x82.a[23]._super._super * x169);
EQZ(x170, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x171 = (Val(1) - x82.a[24]._super._super);
// builtin Mul
Val x172 = (x82.a[24]._super._super * x171);
EQZ(x172, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x173 = (Val(1) - x82.a[25]._super._super);
// builtin Mul
Val x174 = (x82.a[25]._super._super * x173);
EQZ(x174, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x175 = (Val(1) - x82.a[26]._super._super);
// builtin Mul
Val x176 = (x82.a[26]._super._super * x175);
EQZ(x176, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x177 = (Val(1) - x82.a[27]._super._super);
// builtin Mul
Val x178 = (x82.a[27]._super._super * x177);
EQZ(x178, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x179 = (Val(1) - x82.a[28]._super._super);
// builtin Mul
Val x180 = (x82.a[28]._super._super * x179);
EQZ(x180, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x181 = (Val(1) - x82.a[29]._super._super);
// builtin Mul
Val x182 = (x82.a[29]._super._super * x181);
EQZ(x182, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x183 = (Val(1) - x82.a[30]._super._super);
// builtin Mul
Val x184 = (x82.a[30]._super._super * x183);
EQZ(x184, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// builtin Sub
Val x185 = (Val(1) - x82.a[31]._super._super);
// builtin Mul
Val x186 = (x82.a[31]._super._super * x185);
EQZ(x186, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:89)
Val x187 = (x10._super.low - ((x112 * Val(256)) + x122));
EQZ(x187, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :89:13) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21)))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:90)
Val x188 = (x10._super.high - ((x92 * Val(256)) + x102));
EQZ(x188, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :90:14) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21)))");
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:87)
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:127)
Val x189 = (x82.e[1]._super._super * Val(2));
Val x190 = (x82.e[2]._super._super * Val(4));
Val x191 = (x82.e[3]._super._super * Val(8));
Val x192 = (x82.e[4]._super._super * Val(16));
Val x193 = (x82.e[5]._super._super * Val(32));
Val x194 = (x82.e[6]._super._super * Val(64));
Val x195 = (x82.e[7]._super._super * Val(128));
// builtin Add
Val x196 = (x82.e[0]._super._super + x189);
Val x197 = (((x196 + x190) + x191) + x192);
Val x198 = (((x197 + x193) + x194) + x195);
// builtin Mul
Val x199 = (x82.e[9]._super._super * Val(2));
Val x200 = (x82.e[10]._super._super * Val(4));
Val x201 = (x82.e[11]._super._super * Val(8));
Val x202 = (x82.e[12]._super._super * Val(16));
Val x203 = (x82.e[13]._super._super * Val(32));
Val x204 = (x82.e[14]._super._super * Val(64));
Val x205 = (x82.e[15]._super._super * Val(128));
// builtin Add
Val x206 = (x82.e[8]._super._super + x199);
Val x207 = (((x206 + x200) + x201) + x202);
Val x208 = (((x207 + x203) + x204) + x205);
// builtin Mul
Val x209 = (x82.e[17]._super._super * Val(2));
Val x210 = (x82.e[18]._super._super * Val(4));
Val x211 = (x82.e[19]._super._super * Val(8));
Val x212 = (x82.e[20]._super._super * Val(16));
Val x213 = (x82.e[21]._super._super * Val(32));
Val x214 = (x82.e[22]._super._super * Val(64));
Val x215 = (x82.e[23]._super._super * Val(128));
// builtin Add
Val x216 = (x82.e[16]._super._super + x209);
Val x217 = (((x216 + x210) + x211) + x212);
Val x218 = (((x217 + x213) + x214) + x215);
// builtin Mul
Val x219 = (x82.e[25]._super._super * Val(2));
Val x220 = (x82.e[26]._super._super * Val(4));
Val x221 = (x82.e[27]._super._super * Val(8));
Val x222 = (x82.e[28]._super._super * Val(16));
Val x223 = (x82.e[29]._super._super * Val(32));
Val x224 = (x82.e[30]._super._super * Val(64));
Val x225 = (x82.e[31]._super._super * Val(128));
// builtin Add
Val x226 = (x82.e[24]._super._super + x219);
Val x227 = (((x226 + x220) + x221) + x222);
Val x228 = (((x227 + x223) + x224) + x225);
// builtin Sub
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:7)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:88)
Val x229 = (Val(1) - x82.e[0]._super._super);
// builtin Mul
Val x230 = (x82.e[0]._super._super * x229);
EQZ(x230, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x231 = (Val(1) - x82.e[1]._super._super);
// builtin Mul
Val x232 = (x82.e[1]._super._super * x231);
EQZ(x232, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x233 = (Val(1) - x82.e[2]._super._super);
// builtin Mul
Val x234 = (x82.e[2]._super._super * x233);
EQZ(x234, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x235 = (Val(1) - x82.e[3]._super._super);
// builtin Mul
Val x236 = (x82.e[3]._super._super * x235);
EQZ(x236, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x237 = (Val(1) - x82.e[4]._super._super);
// builtin Mul
Val x238 = (x82.e[4]._super._super * x237);
EQZ(x238, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x239 = (Val(1) - x82.e[5]._super._super);
// builtin Mul
Val x240 = (x82.e[5]._super._super * x239);
EQZ(x240, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x241 = (Val(1) - x82.e[6]._super._super);
// builtin Mul
Val x242 = (x82.e[6]._super._super * x241);
EQZ(x242, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x243 = (Val(1) - x82.e[7]._super._super);
// builtin Mul
Val x244 = (x82.e[7]._super._super * x243);
EQZ(x244, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x245 = (Val(1) - x82.e[8]._super._super);
// builtin Mul
Val x246 = (x82.e[8]._super._super * x245);
EQZ(x246, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x247 = (Val(1) - x82.e[9]._super._super);
// builtin Mul
Val x248 = (x82.e[9]._super._super * x247);
EQZ(x248, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x249 = (Val(1) - x82.e[10]._super._super);
// builtin Mul
Val x250 = (x82.e[10]._super._super * x249);
EQZ(x250, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x251 = (Val(1) - x82.e[11]._super._super);
// builtin Mul
Val x252 = (x82.e[11]._super._super * x251);
EQZ(x252, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x253 = (Val(1) - x82.e[12]._super._super);
// builtin Mul
Val x254 = (x82.e[12]._super._super * x253);
EQZ(x254, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x255 = (Val(1) - x82.e[13]._super._super);
// builtin Mul
Val x256 = (x82.e[13]._super._super * x255);
EQZ(x256, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x257 = (Val(1) - x82.e[14]._super._super);
// builtin Mul
Val x258 = (x82.e[14]._super._super * x257);
EQZ(x258, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x259 = (Val(1) - x82.e[15]._super._super);
// builtin Mul
Val x260 = (x82.e[15]._super._super * x259);
EQZ(x260, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x261 = (Val(1) - x82.e[16]._super._super);
// builtin Mul
Val x262 = (x82.e[16]._super._super * x261);
EQZ(x262, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x263 = (Val(1) - x82.e[17]._super._super);
// builtin Mul
Val x264 = (x82.e[17]._super._super * x263);
EQZ(x264, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x265 = (Val(1) - x82.e[18]._super._super);
// builtin Mul
Val x266 = (x82.e[18]._super._super * x265);
EQZ(x266, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x267 = (Val(1) - x82.e[19]._super._super);
// builtin Mul
Val x268 = (x82.e[19]._super._super * x267);
EQZ(x268, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x269 = (Val(1) - x82.e[20]._super._super);
// builtin Mul
Val x270 = (x82.e[20]._super._super * x269);
EQZ(x270, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x271 = (Val(1) - x82.e[21]._super._super);
// builtin Mul
Val x272 = (x82.e[21]._super._super * x271);
EQZ(x272, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x273 = (Val(1) - x82.e[22]._super._super);
// builtin Mul
Val x274 = (x82.e[22]._super._super * x273);
EQZ(x274, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x275 = (Val(1) - x82.e[23]._super._super);
// builtin Mul
Val x276 = (x82.e[23]._super._super * x275);
EQZ(x276, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x277 = (Val(1) - x82.e[24]._super._super);
// builtin Mul
Val x278 = (x82.e[24]._super._super * x277);
EQZ(x278, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x279 = (Val(1) - x82.e[25]._super._super);
// builtin Mul
Val x280 = (x82.e[25]._super._super * x279);
EQZ(x280, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x281 = (Val(1) - x82.e[26]._super._super);
// builtin Mul
Val x282 = (x82.e[26]._super._super * x281);
EQZ(x282, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x283 = (Val(1) - x82.e[27]._super._super);
// builtin Mul
Val x284 = (x82.e[27]._super._super * x283);
EQZ(x284, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x285 = (Val(1) - x82.e[28]._super._super);
// builtin Mul
Val x286 = (x82.e[28]._super._super * x285);
EQZ(x286, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x287 = (Val(1) - x82.e[29]._super._super);
// builtin Mul
Val x288 = (x82.e[29]._super._super * x287);
EQZ(x288, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x289 = (Val(1) - x82.e[30]._super._super);
// builtin Mul
Val x290 = (x82.e[30]._super._super * x289);
EQZ(x290, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// builtin Sub
Val x291 = (Val(1) - x82.e[31]._super._super);
// builtin Mul
Val x292 = (x82.e[31]._super._super * x291);
EQZ(x292, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:89)
Val x293 = (x12._super.low - ((x218 * Val(256)) + x228));
EQZ(x293, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :89:13) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21)))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:90)
Val x294 = (x12._super.high - ((x198 * Val(256)) + x208));
EQZ(x294, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :90:14) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21)))");
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)
EQZ(x82.w[0]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[1]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[2]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[3]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[4]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[5]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[6]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[7]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[8]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[9]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[10]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[11]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[12]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[13]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[14]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[15]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[16]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[17]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[18]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[19]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[20]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[21]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[22]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[23]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[24]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[25]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[26]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[27]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[28]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[29]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[30]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[31]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
return x82;
}
ShaStateStruct exec_ShaLoadData(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, ShaStateStruct arg2_0, ShaStateStruct arg3, ShaStateStruct arg4, BoundLayout<ShaLoadDataLayout> layout5)   {
// builtin Sub
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:133)
Val x6 = (Val(15) - arg1_0.round._super);
NondetRegStruct x7 = exec_IsZero(ctx,x6, LAYOUT_LOOKUP(layout5, lastRound));
// builtin Add
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:134)
Val x8 = (arg1_0.kAddr._super + arg1_0.round._super);
GetDataStruct x9 = exec_MemoryRead(ctx,arg0, x8, LAYOUT_LOOKUP(layout5, k));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:135)
GetDataStruct x10 = exec_MemoryRead(ctx,arg0, arg1_0.dataAddr._super, LAYOUT_LOOKUP(layout5, wMem));
// builtin BitAnd
// UnpackNondet(zirgen/circuit/rv32im/v2/dsl/pack.zir:29)
// UnpackU32NondetBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:71)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:136)
Val x11 = bitAnd(x10._super.low, Val(1));
Val x12 = bitAnd(x10._super.low, Val(2));
Val x13 = bitAnd(x10._super.low, Val(4));
Val x14 = bitAnd(x10._super.low, Val(8));
Val x15 = bitAnd(x10._super.low, Val(16));
Val x16 = bitAnd(x10._super.low, Val(32));
Val x17 = bitAnd(x10._super.low, Val(64));
Val x18 = bitAnd(x10._super.low, Val(128));
Val x19 = bitAnd(x10._super.low, Val(256));
Val x20 = bitAnd(x10._super.low, Val(512));
Val x21 = bitAnd(x10._super.low, Val(1024));
Val x22 = bitAnd(x10._super.low, Val(2048));
Val x23 = bitAnd(x10._super.low, Val(4096));
Val x24 = bitAnd(x10._super.low, Val(8192));
Val x25 = bitAnd(x10._super.low, Val(16384));
Val x26 = bitAnd(x10._super.low, Val(32768));
Val x27 = bitAnd(x10._super.high, Val(1));
Val x28 = bitAnd(x10._super.high, Val(2));
Val x29 = bitAnd(x10._super.high, Val(4));
Val x30 = bitAnd(x10._super.high, Val(8));
Val x31 = bitAnd(x10._super.high, Val(16));
Val x32 = bitAnd(x10._super.high, Val(32));
Val x33 = bitAnd(x10._super.high, Val(64));
Val x34 = bitAnd(x10._super.high, Val(128));
Val x35 = bitAnd(x10._super.high, Val(256));
Val x36 = bitAnd(x10._super.high, Val(512));
Val x37 = bitAnd(x10._super.high, Val(1024));
Val x38 = bitAnd(x10._super.high, Val(2048));
Val x39 = bitAnd(x10._super.high, Val(4096));
Val x40 = bitAnd(x10._super.high, Val(8192));
Val x41 = bitAnd(x10._super.high, Val(16384));
Val x42 = bitAnd(x10._super.high, Val(32768));
// UnpackU32NondetBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:72)
DivStruct32Array x43 = DivStruct32Array{DivStruct{
  ._super = (x35 * Val(2005401601))}, DivStruct{
  ._super = (x36 * Val(2009333761))}, DivStruct{
  ._super = (x37 * Val(2011299841))}, DivStruct{
  ._super = (x38 * Val(2012282881))}, DivStruct{
  ._super = (x39 * Val(2012774401))}, DivStruct{
  ._super = (x40 * Val(2013020161))}, DivStruct{
  ._super = (x41 * Val(2013143041))}, DivStruct{
  ._super = (x42 * Val(2013204481))}, DivStruct{
  ._super = x27}, DivStruct{
  ._super = (x28 * Val(1006632961))}, DivStruct{
  ._super = (x29 * Val(1509949441))}, DivStruct{
  ._super = (x30 * Val(1761607681))}, DivStruct{
  ._super = (x31 * Val(1887436801))}, DivStruct{
  ._super = (x32 * Val(1950351361))}, DivStruct{
  ._super = (x33 * Val(1981808641))}, DivStruct{
  ._super = (x34 * Val(1997537281))}, DivStruct{
  ._super = (x19 * Val(2005401601))}, DivStruct{
  ._super = (x20 * Val(2009333761))}, DivStruct{
  ._super = (x21 * Val(2011299841))}, DivStruct{
  ._super = (x22 * Val(2012282881))}, DivStruct{
  ._super = (x23 * Val(2012774401))}, DivStruct{
  ._super = (x24 * Val(2013020161))}, DivStruct{
  ._super = (x25 * Val(2013143041))}, DivStruct{
  ._super = (x26 * Val(2013204481))}, DivStruct{
  ._super = x11}, DivStruct{
  ._super = (x12 * Val(1006632961))}, DivStruct{
  ._super = (x13 * Val(1509949441))}, DivStruct{
  ._super = (x14 * Val(1761607681))}, DivStruct{
  ._super = (x15 * Val(1887436801))}, DivStruct{
  ._super = (x16 * Val(1950351361))}, DivStruct{
  ._super = (x17 * Val(1981808641))}, DivStruct{
  ._super = (x18 * Val(1997537281))}};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:137)
NondetRegStruct32Array x44 = map(Val32Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23), Val(24), Val(25), Val(26), Val(27), Val(28), Val(29), Val(30), Val(31)}, LAYOUT_LOOKUP(layout5, wBits), ([&](Val32Array::value_type x45, BoundLayout<NondetRegLayout32LayoutArray::value_type> x46) {
NondetRegStruct x47 = exec_NondetReg(ctx,x43[to_size_t(x45)]._super, x46);
return x47;

}));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:87)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:138)
Val x48 = (x44[1]._super * Val(2));
Val x49 = (x44[2]._super * Val(4));
Val x50 = (x44[3]._super * Val(8));
Val x51 = (x44[4]._super * Val(16));
Val x52 = (x44[5]._super * Val(32));
Val x53 = (x44[6]._super * Val(64));
Val x54 = (x44[7]._super * Val(128));
// builtin Add
Val x55 = (x44[0]._super + x48);
Val x56 = (((x55 + x49) + x50) + x51);
Val x57 = (((x56 + x52) + x53) + x54);
// builtin Mul
Val x58 = (x44[9]._super * Val(2));
Val x59 = (x44[10]._super * Val(4));
Val x60 = (x44[11]._super * Val(8));
Val x61 = (x44[12]._super * Val(16));
Val x62 = (x44[13]._super * Val(32));
Val x63 = (x44[14]._super * Val(64));
Val x64 = (x44[15]._super * Val(128));
// builtin Add
Val x65 = (x44[8]._super + x58);
Val x66 = (((x65 + x59) + x60) + x61);
Val x67 = (((x66 + x62) + x63) + x64);
// builtin Mul
Val x68 = (x44[17]._super * Val(2));
Val x69 = (x44[18]._super * Val(4));
Val x70 = (x44[19]._super * Val(8));
Val x71 = (x44[20]._super * Val(16));
Val x72 = (x44[21]._super * Val(32));
Val x73 = (x44[22]._super * Val(64));
Val x74 = (x44[23]._super * Val(128));
// builtin Add
Val x75 = (x44[16]._super + x68);
Val x76 = (((x75 + x69) + x70) + x71);
Val x77 = (((x76 + x72) + x73) + x74);
// builtin Mul
Val x78 = (x44[25]._super * Val(2));
Val x79 = (x44[26]._super * Val(4));
Val x80 = (x44[27]._super * Val(8));
Val x81 = (x44[28]._super * Val(16));
Val x82 = (x44[29]._super * Val(32));
Val x83 = (x44[30]._super * Val(64));
Val x84 = (x44[31]._super * Val(128));
// builtin Add
Val x85 = (x44[24]._super + x78);
Val x86 = (((x85 + x79) + x80) + x81);
Val x87 = (((x86 + x82) + x83) + x84);
// builtin Sub
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:7)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:88)
Val x88 = (Val(1) - x44[0]._super);
// builtin Mul
Val x89 = (x44[0]._super * x88);
EQZ(x89, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x90 = (Val(1) - x44[1]._super);
// builtin Mul
Val x91 = (x44[1]._super * x90);
EQZ(x91, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x92 = (Val(1) - x44[2]._super);
// builtin Mul
Val x93 = (x44[2]._super * x92);
EQZ(x93, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x94 = (Val(1) - x44[3]._super);
// builtin Mul
Val x95 = (x44[3]._super * x94);
EQZ(x95, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x96 = (Val(1) - x44[4]._super);
// builtin Mul
Val x97 = (x44[4]._super * x96);
EQZ(x97, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x98 = (Val(1) - x44[5]._super);
// builtin Mul
Val x99 = (x44[5]._super * x98);
EQZ(x99, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x100 = (Val(1) - x44[6]._super);
// builtin Mul
Val x101 = (x44[6]._super * x100);
EQZ(x101, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x102 = (Val(1) - x44[7]._super);
// builtin Mul
Val x103 = (x44[7]._super * x102);
EQZ(x103, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x104 = (Val(1) - x44[8]._super);
// builtin Mul
Val x105 = (x44[8]._super * x104);
EQZ(x105, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x106 = (Val(1) - x44[9]._super);
// builtin Mul
Val x107 = (x44[9]._super * x106);
EQZ(x107, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x108 = (Val(1) - x44[10]._super);
// builtin Mul
Val x109 = (x44[10]._super * x108);
EQZ(x109, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x110 = (Val(1) - x44[11]._super);
// builtin Mul
Val x111 = (x44[11]._super * x110);
EQZ(x111, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x112 = (Val(1) - x44[12]._super);
// builtin Mul
Val x113 = (x44[12]._super * x112);
EQZ(x113, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x114 = (Val(1) - x44[13]._super);
// builtin Mul
Val x115 = (x44[13]._super * x114);
EQZ(x115, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x116 = (Val(1) - x44[14]._super);
// builtin Mul
Val x117 = (x44[14]._super * x116);
EQZ(x117, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x118 = (Val(1) - x44[15]._super);
// builtin Mul
Val x119 = (x44[15]._super * x118);
EQZ(x119, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x120 = (Val(1) - x44[16]._super);
// builtin Mul
Val x121 = (x44[16]._super * x120);
EQZ(x121, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x122 = (Val(1) - x44[17]._super);
// builtin Mul
Val x123 = (x44[17]._super * x122);
EQZ(x123, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x124 = (Val(1) - x44[18]._super);
// builtin Mul
Val x125 = (x44[18]._super * x124);
EQZ(x125, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x126 = (Val(1) - x44[19]._super);
// builtin Mul
Val x127 = (x44[19]._super * x126);
EQZ(x127, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x128 = (Val(1) - x44[20]._super);
// builtin Mul
Val x129 = (x44[20]._super * x128);
EQZ(x129, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x130 = (Val(1) - x44[21]._super);
// builtin Mul
Val x131 = (x44[21]._super * x130);
EQZ(x131, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x132 = (Val(1) - x44[22]._super);
// builtin Mul
Val x133 = (x44[22]._super * x132);
EQZ(x133, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x134 = (Val(1) - x44[23]._super);
// builtin Mul
Val x135 = (x44[23]._super * x134);
EQZ(x135, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x136 = (Val(1) - x44[24]._super);
// builtin Mul
Val x137 = (x44[24]._super * x136);
EQZ(x137, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x138 = (Val(1) - x44[25]._super);
// builtin Mul
Val x139 = (x44[25]._super * x138);
EQZ(x139, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x140 = (Val(1) - x44[26]._super);
// builtin Mul
Val x141 = (x44[26]._super * x140);
EQZ(x141, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x142 = (Val(1) - x44[27]._super);
// builtin Mul
Val x143 = (x44[27]._super * x142);
EQZ(x143, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x144 = (Val(1) - x44[28]._super);
// builtin Mul
Val x145 = (x44[28]._super * x144);
EQZ(x145, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x146 = (Val(1) - x44[29]._super);
// builtin Mul
Val x147 = (x44[29]._super * x146);
EQZ(x147, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x148 = (Val(1) - x44[30]._super);
// builtin Mul
Val x149 = (x44[30]._super * x148);
EQZ(x149, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// builtin Sub
Val x150 = (Val(1) - x44[31]._super);
// builtin Mul
Val x151 = (x44[31]._super * x150);
EQZ(x151, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :7:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:89)
Val x152 = (x10._super.low - ((x77 * Val(256)) + x87));
EQZ(x152, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :89:13) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21)))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:90)
Val x153 = (x10._super.high - ((x57 * Val(256)) + x67));
EQZ(x153, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :90:14) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21)))");
// builtin Add
// BitXor(zirgen/circuit/rv32im/v2/dsl/bits.zir:51)
// XorU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:10)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:96)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:139)
Val x154 = (arg1_0.a[13]._super._super + arg1_0.a[22]._super._super);
// builtin Mul
Val x155 = (arg1_0.a[13]._super._super * Val(2));
// builtin Sub
Val x156 = (x154 - (x155 * arg1_0.a[22]._super._super));
// builtin Add
Val x157 = (arg1_0.a[14]._super._super + arg1_0.a[23]._super._super);
// builtin Mul
Val x158 = (arg1_0.a[14]._super._super * Val(2));
// builtin Sub
Val x159 = (x157 - (x158 * arg1_0.a[23]._super._super));
// builtin Add
Val x160 = (arg1_0.a[15]._super._super + arg1_0.a[24]._super._super);
// builtin Mul
Val x161 = (arg1_0.a[15]._super._super * Val(2));
// builtin Sub
Val x162 = (x160 - (x161 * arg1_0.a[24]._super._super));
// builtin Add
Val x163 = (arg1_0.a[16]._super._super + arg1_0.a[25]._super._super);
// builtin Mul
Val x164 = (arg1_0.a[16]._super._super * Val(2));
// builtin Sub
Val x165 = (x163 - (x164 * arg1_0.a[25]._super._super));
// builtin Add
Val x166 = (arg1_0.a[17]._super._super + arg1_0.a[26]._super._super);
// builtin Mul
Val x167 = (arg1_0.a[17]._super._super * Val(2));
// builtin Sub
Val x168 = (x166 - (x167 * arg1_0.a[26]._super._super));
// builtin Add
Val x169 = (arg1_0.a[18]._super._super + arg1_0.a[27]._super._super);
// builtin Mul
Val x170 = (arg1_0.a[18]._super._super * Val(2));
// builtin Sub
Val x171 = (x169 - (x170 * arg1_0.a[27]._super._super));
// builtin Add
Val x172 = (arg1_0.a[19]._super._super + arg1_0.a[28]._super._super);
// builtin Mul
Val x173 = (arg1_0.a[19]._super._super * Val(2));
// builtin Sub
Val x174 = (x172 - (x173 * arg1_0.a[28]._super._super));
// builtin Add
Val x175 = (arg1_0.a[20]._super._super + arg1_0.a[29]._super._super);
// builtin Mul
Val x176 = (arg1_0.a[20]._super._super * Val(2));
// builtin Sub
Val x177 = (x175 - (x176 * arg1_0.a[29]._super._super));
// builtin Add
Val x178 = (arg1_0.a[21]._super._super + arg1_0.a[30]._super._super);
// builtin Mul
Val x179 = (arg1_0.a[21]._super._super * Val(2));
// builtin Sub
Val x180 = (x178 - (x179 * arg1_0.a[30]._super._super));
// builtin Add
Val x181 = (arg1_0.a[22]._super._super + arg1_0.a[31]._super._super);
// builtin Mul
Val x182 = (arg1_0.a[22]._super._super * Val(2));
// builtin Sub
Val x183 = (x181 - (x182 * arg1_0.a[31]._super._super));
// builtin Add
Val x184 = (arg1_0.a[23]._super._super + arg1_0.a[0]._super._super);
// builtin Mul
Val x185 = (arg1_0.a[23]._super._super * Val(2));
// builtin Sub
Val x186 = (x184 - (x185 * arg1_0.a[0]._super._super));
// builtin Add
Val x187 = (arg1_0.a[24]._super._super + arg1_0.a[1]._super._super);
// builtin Mul
Val x188 = (arg1_0.a[24]._super._super * Val(2));
// builtin Sub
Val x189 = (x187 - (x188 * arg1_0.a[1]._super._super));
// builtin Add
Val x190 = (arg1_0.a[25]._super._super + arg1_0.a[2]._super._super);
// builtin Mul
Val x191 = (arg1_0.a[25]._super._super * Val(2));
// builtin Sub
Val x192 = (x190 - (x191 * arg1_0.a[2]._super._super));
// builtin Add
Val x193 = (arg1_0.a[26]._super._super + arg1_0.a[3]._super._super);
// builtin Mul
Val x194 = (arg1_0.a[26]._super._super * Val(2));
// builtin Sub
Val x195 = (x193 - (x194 * arg1_0.a[3]._super._super));
// builtin Add
Val x196 = (arg1_0.a[27]._super._super + arg1_0.a[4]._super._super);
// builtin Mul
Val x197 = (arg1_0.a[27]._super._super * Val(2));
// builtin Sub
Val x198 = (x196 - (x197 * arg1_0.a[4]._super._super));
// builtin Add
Val x199 = (arg1_0.a[28]._super._super + arg1_0.a[5]._super._super);
// builtin Mul
Val x200 = (arg1_0.a[28]._super._super * Val(2));
// builtin Sub
Val x201 = (x199 - (x200 * arg1_0.a[5]._super._super));
// builtin Add
Val x202 = (arg1_0.a[29]._super._super + arg1_0.a[6]._super._super);
// builtin Mul
Val x203 = (arg1_0.a[29]._super._super * Val(2));
// builtin Sub
Val x204 = (x202 - (x203 * arg1_0.a[6]._super._super));
// builtin Add
Val x205 = (arg1_0.a[30]._super._super + arg1_0.a[7]._super._super);
// builtin Mul
Val x206 = (arg1_0.a[30]._super._super * Val(2));
// builtin Sub
Val x207 = (x205 - (x206 * arg1_0.a[7]._super._super));
// builtin Add
Val x208 = (arg1_0.a[31]._super._super + arg1_0.a[8]._super._super);
// builtin Mul
Val x209 = (arg1_0.a[31]._super._super * Val(2));
// builtin Sub
Val x210 = (x208 - (x209 * arg1_0.a[8]._super._super));
// builtin Add
Val x211 = (arg1_0.a[0]._super._super + arg1_0.a[9]._super._super);
// builtin Mul
Val x212 = (arg1_0.a[0]._super._super * Val(2));
// builtin Sub
Val x213 = (x211 - (x212 * arg1_0.a[9]._super._super));
// builtin Add
Val x214 = (arg1_0.a[1]._super._super + arg1_0.a[10]._super._super);
// builtin Mul
Val x215 = (arg1_0.a[1]._super._super * Val(2));
// builtin Sub
Val x216 = (x214 - (x215 * arg1_0.a[10]._super._super));
// builtin Add
Val x217 = (arg1_0.a[2]._super._super + arg1_0.a[11]._super._super);
// builtin Mul
Val x218 = (arg1_0.a[2]._super._super * Val(2));
// builtin Sub
Val x219 = (x217 - (x218 * arg1_0.a[11]._super._super));
// builtin Add
Val x220 = (arg1_0.a[3]._super._super + arg1_0.a[12]._super._super);
// builtin Mul
Val x221 = (arg1_0.a[3]._super._super * Val(2));
// builtin Sub
Val x222 = (x220 - (x221 * arg1_0.a[12]._super._super));
// builtin Add
Val x223 = (arg1_0.a[4]._super._super + arg1_0.a[13]._super._super);
// builtin Mul
Val x224 = (arg1_0.a[4]._super._super * Val(2));
// builtin Sub
Val x225 = (x223 - (x224 * arg1_0.a[13]._super._super));
// builtin Add
Val x226 = (arg1_0.a[5]._super._super + arg1_0.a[14]._super._super);
// builtin Mul
Val x227 = (arg1_0.a[5]._super._super * Val(2));
// builtin Sub
Val x228 = (x226 - (x227 * arg1_0.a[14]._super._super));
// builtin Add
Val x229 = (arg1_0.a[6]._super._super + arg1_0.a[15]._super._super);
// builtin Mul
Val x230 = (arg1_0.a[6]._super._super * Val(2));
// builtin Sub
Val x231 = (x229 - (x230 * arg1_0.a[15]._super._super));
// builtin Add
Val x232 = (arg1_0.a[7]._super._super + arg1_0.a[16]._super._super);
// builtin Mul
Val x233 = (arg1_0.a[7]._super._super * Val(2));
// builtin Sub
Val x234 = (x232 - (x233 * arg1_0.a[16]._super._super));
// builtin Add
Val x235 = (arg1_0.a[8]._super._super + arg1_0.a[17]._super._super);
// builtin Mul
Val x236 = (arg1_0.a[8]._super._super * Val(2));
// builtin Sub
Val x237 = (x235 - (x236 * arg1_0.a[17]._super._super));
// builtin Add
Val x238 = (arg1_0.a[9]._super._super + arg1_0.a[18]._super._super);
// builtin Mul
Val x239 = (arg1_0.a[9]._super._super * Val(2));
// builtin Sub
Val x240 = (x238 - (x239 * arg1_0.a[18]._super._super));
// builtin Add
Val x241 = (arg1_0.a[10]._super._super + arg1_0.a[19]._super._super);
// builtin Mul
Val x242 = (arg1_0.a[10]._super._super * Val(2));
// builtin Sub
Val x243 = (x241 - (x242 * arg1_0.a[19]._super._super));
// builtin Add
Val x244 = (arg1_0.a[11]._super._super + arg1_0.a[20]._super._super);
// builtin Mul
Val x245 = (arg1_0.a[11]._super._super * Val(2));
// builtin Sub
Val x246 = (x244 - (x245 * arg1_0.a[20]._super._super));
// builtin Add
Val x247 = (arg1_0.a[12]._super._super + arg1_0.a[21]._super._super);
// builtin Mul
Val x248 = (arg1_0.a[12]._super._super * Val(2));
// builtin Sub
Val x249 = (x247 - (x248 * arg1_0.a[21]._super._super));
// builtin Add
Val x250 = (arg1_0.a[2]._super._super + x156);
Val x251 = (arg1_0.a[3]._super._super + x159);
Val x252 = (arg1_0.a[4]._super._super + x162);
Val x253 = (arg1_0.a[5]._super._super + x165);
Val x254 = (arg1_0.a[6]._super._super + x168);
Val x255 = (arg1_0.a[7]._super._super + x171);
Val x256 = (arg1_0.a[8]._super._super + x174);
Val x257 = (arg1_0.a[9]._super._super + x177);
Val x258 = (arg1_0.a[10]._super._super + x180);
Val x259 = (arg1_0.a[11]._super._super + x183);
Val x260 = (arg1_0.a[12]._super._super + x186);
Val x261 = (arg1_0.a[13]._super._super + x189);
Val x262 = (arg1_0.a[14]._super._super + x192);
Val x263 = (arg1_0.a[15]._super._super + x195);
Val x264 = (arg1_0.a[16]._super._super + x198);
Val x265 = (arg1_0.a[17]._super._super + x201);
Val x266 = (arg1_0.a[18]._super._super + x204);
Val x267 = (arg1_0.a[19]._super._super + x207);
Val x268 = (arg1_0.a[20]._super._super + x210);
Val x269 = (arg1_0.a[21]._super._super + x213);
Val x270 = (arg1_0.a[22]._super._super + x216);
Val x271 = (arg1_0.a[23]._super._super + x219);
Val x272 = (arg1_0.a[24]._super._super + x222);
Val x273 = (arg1_0.a[25]._super._super + x225);
Val x274 = (arg1_0.a[26]._super._super + x228);
Val x275 = (arg1_0.a[27]._super._super + x231);
Val x276 = (arg1_0.a[28]._super._super + x234);
Val x277 = (arg1_0.a[29]._super._super + x237);
Val x278 = (arg1_0.a[30]._super._super + x240);
Val x279 = (arg1_0.a[31]._super._super + x243);
Val x280 = (arg1_0.a[0]._super._super + x246);
Val x281 = (arg1_0.a[1]._super._super + x249);
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:97)
Val x282 = (arg1_0.e[11]._super._super + arg1_0.e[25]._super._super);
// builtin Mul
Val x283 = (arg1_0.e[11]._super._super * Val(2));
// builtin Sub
Val x284 = (x282 - (x283 * arg1_0.e[25]._super._super));
// builtin Add
Val x285 = (arg1_0.e[12]._super._super + arg1_0.e[26]._super._super);
// builtin Mul
Val x286 = (arg1_0.e[12]._super._super * Val(2));
// builtin Sub
Val x287 = (x285 - (x286 * arg1_0.e[26]._super._super));
// builtin Add
Val x288 = (arg1_0.e[13]._super._super + arg1_0.e[27]._super._super);
// builtin Mul
Val x289 = (arg1_0.e[13]._super._super * Val(2));
// builtin Sub
Val x290 = (x288 - (x289 * arg1_0.e[27]._super._super));
// builtin Add
Val x291 = (arg1_0.e[14]._super._super + arg1_0.e[28]._super._super);
// builtin Mul
Val x292 = (arg1_0.e[14]._super._super * Val(2));
// builtin Sub
Val x293 = (x291 - (x292 * arg1_0.e[28]._super._super));
// builtin Add
Val x294 = (arg1_0.e[15]._super._super + arg1_0.e[29]._super._super);
// builtin Mul
Val x295 = (arg1_0.e[15]._super._super * Val(2));
// builtin Sub
Val x296 = (x294 - (x295 * arg1_0.e[29]._super._super));
// builtin Add
Val x297 = (arg1_0.e[16]._super._super + arg1_0.e[30]._super._super);
// builtin Mul
Val x298 = (arg1_0.e[16]._super._super * Val(2));
// builtin Sub
Val x299 = (x297 - (x298 * arg1_0.e[30]._super._super));
// builtin Add
Val x300 = (arg1_0.e[17]._super._super + arg1_0.e[31]._super._super);
// builtin Mul
Val x301 = (arg1_0.e[17]._super._super * Val(2));
// builtin Sub
Val x302 = (x300 - (x301 * arg1_0.e[31]._super._super));
// builtin Add
Val x303 = (arg1_0.e[18]._super._super + arg1_0.e[0]._super._super);
// builtin Mul
Val x304 = (arg1_0.e[18]._super._super * Val(2));
// builtin Sub
Val x305 = (x303 - (x304 * arg1_0.e[0]._super._super));
// builtin Add
Val x306 = (arg1_0.e[19]._super._super + arg1_0.e[1]._super._super);
// builtin Mul
Val x307 = (arg1_0.e[19]._super._super * Val(2));
// builtin Sub
Val x308 = (x306 - (x307 * arg1_0.e[1]._super._super));
// builtin Add
Val x309 = (arg1_0.e[20]._super._super + arg1_0.e[2]._super._super);
// builtin Mul
Val x310 = (arg1_0.e[20]._super._super * Val(2));
// builtin Sub
Val x311 = (x309 - (x310 * arg1_0.e[2]._super._super));
// builtin Add
Val x312 = (arg1_0.e[21]._super._super + arg1_0.e[3]._super._super);
// builtin Mul
Val x313 = (arg1_0.e[21]._super._super * Val(2));
// builtin Sub
Val x314 = (x312 - (x313 * arg1_0.e[3]._super._super));
// builtin Add
Val x315 = (arg1_0.e[22]._super._super + arg1_0.e[4]._super._super);
// builtin Mul
Val x316 = (arg1_0.e[22]._super._super * Val(2));
// builtin Sub
Val x317 = (x315 - (x316 * arg1_0.e[4]._super._super));
// builtin Add
Val x318 = (arg1_0.e[23]._super._super + arg1_0.e[5]._super._super);
// builtin Mul
Val x319 = (arg1_0.e[23]._super._super * Val(2));
// builtin Sub
Val x320 = (x318 - (x319 * arg1_0.e[5]._super._super));
// builtin Add
Val x321 = (arg1_0.e[24]._super._super + arg1_0.e[6]._super._super);
// builtin Mul
Val x322 = (arg1_0.e[24]._super._super * Val(2));
// builtin Sub
Val x323 = (x321 - (x322 * arg1_0.e[6]._super._super));
// builtin Add
Val x324 = (arg1_0.e[25]._super._super + arg1_0.e[7]._super._super);
// builtin Mul
Val x325 = (arg1_0.e[25]._super._super * Val(2));
// builtin Sub
Val x326 = (x324 - (x325 * arg1_0.e[7]._super._super));
// builtin Add
Val x327 = (arg1_0.e[26]._super._super + arg1_0.e[8]._super._super);
// builtin Mul
Val x328 = (arg1_0.e[26]._super._super * Val(2));
// builtin Sub
Val x329 = (x327 - (x328 * arg1_0.e[8]._super._super));
// builtin Add
Val x330 = (arg1_0.e[27]._super._super + arg1_0.e[9]._super._super);
// builtin Mul
Val x331 = (arg1_0.e[27]._super._super * Val(2));
// builtin Sub
Val x332 = (x330 - (x331 * arg1_0.e[9]._super._super));
// builtin Add
Val x333 = (arg1_0.e[28]._super._super + arg1_0.e[10]._super._super);
// builtin Mul
Val x334 = (arg1_0.e[28]._super._super * Val(2));
// builtin Sub
Val x335 = (x333 - (x334 * arg1_0.e[10]._super._super));
// builtin Add
Val x336 = (arg1_0.e[29]._super._super + arg1_0.e[11]._super._super);
// builtin Mul
Val x337 = (arg1_0.e[29]._super._super * Val(2));
// builtin Sub
Val x338 = (x336 - (x337 * arg1_0.e[11]._super._super));
// builtin Add
Val x339 = (arg1_0.e[30]._super._super + arg1_0.e[12]._super._super);
// builtin Mul
Val x340 = (arg1_0.e[30]._super._super * Val(2));
// builtin Sub
Val x341 = (x339 - (x340 * arg1_0.e[12]._super._super));
// builtin Add
Val x342 = (arg1_0.e[31]._super._super + arg1_0.e[13]._super._super);
// builtin Mul
Val x343 = (arg1_0.e[31]._super._super * Val(2));
// builtin Sub
Val x344 = (x342 - (x343 * arg1_0.e[13]._super._super));
// builtin Add
Val x345 = (arg1_0.e[0]._super._super + arg1_0.e[14]._super._super);
// builtin Mul
Val x346 = (arg1_0.e[0]._super._super * Val(2));
// builtin Sub
Val x347 = (x345 - (x346 * arg1_0.e[14]._super._super));
// builtin Add
Val x348 = (arg1_0.e[1]._super._super + arg1_0.e[15]._super._super);
// builtin Mul
Val x349 = (arg1_0.e[1]._super._super * Val(2));
// builtin Sub
Val x350 = (x348 - (x349 * arg1_0.e[15]._super._super));
// builtin Add
Val x351 = (arg1_0.e[2]._super._super + arg1_0.e[16]._super._super);
// builtin Mul
Val x352 = (arg1_0.e[2]._super._super * Val(2));
// builtin Sub
Val x353 = (x351 - (x352 * arg1_0.e[16]._super._super));
// builtin Add
Val x354 = (arg1_0.e[3]._super._super + arg1_0.e[17]._super._super);
// builtin Mul
Val x355 = (arg1_0.e[3]._super._super * Val(2));
// builtin Sub
Val x356 = (x354 - (x355 * arg1_0.e[17]._super._super));
// builtin Add
Val x357 = (arg1_0.e[4]._super._super + arg1_0.e[18]._super._super);
// builtin Mul
Val x358 = (arg1_0.e[4]._super._super * Val(2));
// builtin Sub
Val x359 = (x357 - (x358 * arg1_0.e[18]._super._super));
// builtin Add
Val x360 = (arg1_0.e[5]._super._super + arg1_0.e[19]._super._super);
// builtin Mul
Val x361 = (arg1_0.e[5]._super._super * Val(2));
// builtin Sub
Val x362 = (x360 - (x361 * arg1_0.e[19]._super._super));
// builtin Add
Val x363 = (arg1_0.e[6]._super._super + arg1_0.e[20]._super._super);
// builtin Mul
Val x364 = (arg1_0.e[6]._super._super * Val(2));
// builtin Sub
Val x365 = (x363 - (x364 * arg1_0.e[20]._super._super));
// builtin Add
Val x366 = (arg1_0.e[7]._super._super + arg1_0.e[21]._super._super);
// builtin Mul
Val x367 = (arg1_0.e[7]._super._super * Val(2));
// builtin Sub
Val x368 = (x366 - (x367 * arg1_0.e[21]._super._super));
// builtin Add
Val x369 = (arg1_0.e[8]._super._super + arg1_0.e[22]._super._super);
// builtin Mul
Val x370 = (arg1_0.e[8]._super._super * Val(2));
// builtin Sub
Val x371 = (x369 - (x370 * arg1_0.e[22]._super._super));
// builtin Add
Val x372 = (arg1_0.e[9]._super._super + arg1_0.e[23]._super._super);
// builtin Mul
Val x373 = (arg1_0.e[9]._super._super * Val(2));
// builtin Sub
Val x374 = (x372 - (x373 * arg1_0.e[23]._super._super));
// builtin Add
Val x375 = (arg1_0.e[10]._super._super + arg1_0.e[24]._super._super);
// builtin Mul
Val x376 = (arg1_0.e[10]._super._super * Val(2));
// builtin Sub
Val x377 = (x375 - (x376 * arg1_0.e[24]._super._super));
// builtin Add
Val x378 = (arg1_0.e[6]._super._super + x284);
Val x379 = (arg1_0.e[7]._super._super + x287);
Val x380 = (arg1_0.e[8]._super._super + x290);
Val x381 = (arg1_0.e[9]._super._super + x293);
Val x382 = (arg1_0.e[10]._super._super + x296);
Val x383 = (arg1_0.e[11]._super._super + x299);
Val x384 = (arg1_0.e[12]._super._super + x302);
Val x385 = (arg1_0.e[13]._super._super + x305);
Val x386 = (arg1_0.e[14]._super._super + x308);
Val x387 = (arg1_0.e[15]._super._super + x311);
Val x388 = (arg1_0.e[16]._super._super + x314);
Val x389 = (arg1_0.e[17]._super._super + x317);
Val x390 = (arg1_0.e[18]._super._super + x320);
Val x391 = (arg1_0.e[19]._super._super + x323);
Val x392 = (arg1_0.e[20]._super._super + x326);
Val x393 = (arg1_0.e[21]._super._super + x329);
Val x394 = (arg1_0.e[22]._super._super + x332);
Val x395 = (arg1_0.e[23]._super._super + x335);
Val x396 = (arg1_0.e[24]._super._super + x338);
Val x397 = (arg1_0.e[25]._super._super + x341);
Val x398 = (arg1_0.e[26]._super._super + x344);
Val x399 = (arg1_0.e[27]._super._super + x347);
Val x400 = (arg1_0.e[28]._super._super + x350);
Val x401 = (arg1_0.e[29]._super._super + x353);
Val x402 = (arg1_0.e[30]._super._super + x356);
Val x403 = (arg1_0.e[31]._super._super + x359);
Val x404 = (arg1_0.e[0]._super._super + x362);
Val x405 = (arg1_0.e[1]._super._super + x365);
Val x406 = (arg1_0.e[2]._super._super + x368);
Val x407 = (arg1_0.e[3]._super._super + x371);
Val x408 = (arg1_0.e[4]._super._super + x374);
Val x409 = (arg1_0.e[5]._super._super + x377);
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:98)
Val x410 = (x44[8]._super * Val(256));
Val x411 = (x44[9]._super * Val(512));
Val x412 = (x44[10]._super * Val(1024));
Val x413 = (x44[11]._super * Val(2048));
Val x414 = (x44[12]._super * Val(4096));
Val x415 = (x44[13]._super * Val(8192));
Val x416 = (x44[14]._super * Val(16384));
Val x417 = (x44[15]._super * Val(32768));
// builtin Add
Val x418 = (((x57 + x410) + x411) + x412);
Val x419 = (((x418 + x413) + x414) + x415);
// builtin Mul
Val x420 = (x44[24]._super * Val(256));
Val x421 = (x44[25]._super * Val(512));
Val x422 = (x44[26]._super * Val(1024));
Val x423 = (x44[27]._super * Val(2048));
Val x424 = (x44[28]._super * Val(4096));
Val x425 = (x44[29]._super * Val(8192));
Val x426 = (x44[30]._super * Val(16384));
Val x427 = (x44[31]._super * Val(32768));
// builtin Add
Val x428 = (((x77 + x420) + x421) + x422);
Val x429 = (((x428 + x423) + x424) + x425);
// builtin Mul
Val x430 = (arg4.e[1]._super._super * Val(2));
Val x431 = (arg4.e[2]._super._super * Val(4));
Val x432 = (arg4.e[3]._super._super * Val(8));
Val x433 = (arg4.e[4]._super._super * Val(16));
Val x434 = (arg4.e[5]._super._super * Val(32));
Val x435 = (arg4.e[6]._super._super * Val(64));
Val x436 = (arg4.e[7]._super._super * Val(128));
Val x437 = (arg4.e[8]._super._super * Val(256));
Val x438 = (arg4.e[9]._super._super * Val(512));
Val x439 = (arg4.e[10]._super._super * Val(1024));
Val x440 = (arg4.e[11]._super._super * Val(2048));
Val x441 = (arg4.e[12]._super._super * Val(4096));
Val x442 = (arg4.e[13]._super._super * Val(8192));
Val x443 = (arg4.e[14]._super._super * Val(16384));
Val x444 = (arg4.e[15]._super._super * Val(32768));
// builtin Add
Val x445 = (arg4.e[0]._super._super + x430);
Val x446 = (((x445 + x431) + x432) + x433);
Val x447 = (((x446 + x434) + x435) + x436);
Val x448 = (((x447 + x437) + x438) + x439);
Val x449 = (((x448 + x440) + x441) + x442);
// builtin Mul
Val x450 = (arg4.e[17]._super._super * Val(2));
Val x451 = (arg4.e[18]._super._super * Val(4));
Val x452 = (arg4.e[19]._super._super * Val(8));
Val x453 = (arg4.e[20]._super._super * Val(16));
Val x454 = (arg4.e[21]._super._super * Val(32));
Val x455 = (arg4.e[22]._super._super * Val(64));
Val x456 = (arg4.e[23]._super._super * Val(128));
Val x457 = (arg4.e[24]._super._super * Val(256));
Val x458 = (arg4.e[25]._super._super * Val(512));
Val x459 = (arg4.e[26]._super._super * Val(1024));
Val x460 = (arg4.e[27]._super._super * Val(2048));
Val x461 = (arg4.e[28]._super._super * Val(4096));
Val x462 = (arg4.e[29]._super._super * Val(8192));
Val x463 = (arg4.e[30]._super._super * Val(16384));
Val x464 = (arg4.e[31]._super._super * Val(32768));
// builtin Add
Val x465 = (arg4.e[16]._super._super + x450);
Val x466 = (((x465 + x451) + x452) + x453);
Val x467 = (((x466 + x454) + x455) + x456);
Val x468 = (((x467 + x457) + x458) + x459);
Val x469 = (((x468 + x460) + x461) + x462);
// builtin Mul
// ChU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:25)
Val x470 = (arg1_0.e[0]._super._super * arg2_0.e[0]._super._super);
// builtin Sub
Val x471 = (Val(1) - arg1_0.e[0]._super._super);
// builtin Mul
Val x472 = (arg1_0.e[1]._super._super * arg2_0.e[1]._super._super);
// builtin Sub
Val x473 = (Val(1) - arg1_0.e[1]._super._super);
// builtin Mul
Val x474 = (arg1_0.e[2]._super._super * arg2_0.e[2]._super._super);
// builtin Sub
Val x475 = (Val(1) - arg1_0.e[2]._super._super);
// builtin Mul
Val x476 = (arg1_0.e[3]._super._super * arg2_0.e[3]._super._super);
// builtin Sub
Val x477 = (Val(1) - arg1_0.e[3]._super._super);
// builtin Mul
Val x478 = (arg1_0.e[4]._super._super * arg2_0.e[4]._super._super);
// builtin Sub
Val x479 = (Val(1) - arg1_0.e[4]._super._super);
// builtin Mul
Val x480 = (arg1_0.e[5]._super._super * arg2_0.e[5]._super._super);
// builtin Sub
Val x481 = (Val(1) - arg1_0.e[5]._super._super);
// builtin Mul
Val x482 = (arg1_0.e[6]._super._super * arg2_0.e[6]._super._super);
// builtin Sub
Val x483 = (Val(1) - arg1_0.e[6]._super._super);
// builtin Mul
Val x484 = (arg1_0.e[7]._super._super * arg2_0.e[7]._super._super);
// builtin Sub
Val x485 = (Val(1) - arg1_0.e[7]._super._super);
// builtin Mul
Val x486 = (arg1_0.e[8]._super._super * arg2_0.e[8]._super._super);
// builtin Sub
Val x487 = (Val(1) - arg1_0.e[8]._super._super);
// builtin Mul
Val x488 = (arg1_0.e[9]._super._super * arg2_0.e[9]._super._super);
// builtin Sub
Val x489 = (Val(1) - arg1_0.e[9]._super._super);
// builtin Mul
Val x490 = (arg1_0.e[10]._super._super * arg2_0.e[10]._super._super);
// builtin Sub
Val x491 = (Val(1) - arg1_0.e[10]._super._super);
// builtin Mul
Val x492 = (arg1_0.e[11]._super._super * arg2_0.e[11]._super._super);
// builtin Sub
Val x493 = (Val(1) - arg1_0.e[11]._super._super);
// builtin Mul
Val x494 = (arg1_0.e[12]._super._super * arg2_0.e[12]._super._super);
// builtin Sub
Val x495 = (Val(1) - arg1_0.e[12]._super._super);
// builtin Mul
Val x496 = (arg1_0.e[13]._super._super * arg2_0.e[13]._super._super);
// builtin Sub
Val x497 = (Val(1) - arg1_0.e[13]._super._super);
// builtin Mul
Val x498 = (arg1_0.e[14]._super._super * arg2_0.e[14]._super._super);
// builtin Sub
Val x499 = (Val(1) - arg1_0.e[14]._super._super);
// builtin Mul
Val x500 = (arg1_0.e[15]._super._super * arg2_0.e[15]._super._super);
// builtin Sub
Val x501 = (Val(1) - arg1_0.e[15]._super._super);
// builtin Mul
Val x502 = (arg1_0.e[16]._super._super * arg2_0.e[16]._super._super);
// builtin Sub
Val x503 = (Val(1) - arg1_0.e[16]._super._super);
// builtin Mul
Val x504 = (arg1_0.e[17]._super._super * arg2_0.e[17]._super._super);
// builtin Sub
Val x505 = (Val(1) - arg1_0.e[17]._super._super);
// builtin Mul
Val x506 = (arg1_0.e[18]._super._super * arg2_0.e[18]._super._super);
// builtin Sub
Val x507 = (Val(1) - arg1_0.e[18]._super._super);
// builtin Mul
Val x508 = (arg1_0.e[19]._super._super * arg2_0.e[19]._super._super);
// builtin Sub
Val x509 = (Val(1) - arg1_0.e[19]._super._super);
// builtin Mul
Val x510 = (arg1_0.e[20]._super._super * arg2_0.e[20]._super._super);
// builtin Sub
Val x511 = (Val(1) - arg1_0.e[20]._super._super);
// builtin Mul
Val x512 = (arg1_0.e[21]._super._super * arg2_0.e[21]._super._super);
// builtin Sub
Val x513 = (Val(1) - arg1_0.e[21]._super._super);
// builtin Mul
Val x514 = (arg1_0.e[22]._super._super * arg2_0.e[22]._super._super);
// builtin Sub
Val x515 = (Val(1) - arg1_0.e[22]._super._super);
// builtin Mul
Val x516 = (arg1_0.e[23]._super._super * arg2_0.e[23]._super._super);
// builtin Sub
Val x517 = (Val(1) - arg1_0.e[23]._super._super);
// builtin Mul
Val x518 = (arg1_0.e[24]._super._super * arg2_0.e[24]._super._super);
// builtin Sub
Val x519 = (Val(1) - arg1_0.e[24]._super._super);
// builtin Mul
Val x520 = (arg1_0.e[25]._super._super * arg2_0.e[25]._super._super);
// builtin Sub
Val x521 = (Val(1) - arg1_0.e[25]._super._super);
// builtin Mul
Val x522 = (arg1_0.e[26]._super._super * arg2_0.e[26]._super._super);
// builtin Sub
Val x523 = (Val(1) - arg1_0.e[26]._super._super);
// builtin Mul
Val x524 = (arg1_0.e[27]._super._super * arg2_0.e[27]._super._super);
// builtin Sub
Val x525 = (Val(1) - arg1_0.e[27]._super._super);
// builtin Mul
Val x526 = (arg1_0.e[28]._super._super * arg2_0.e[28]._super._super);
// builtin Sub
Val x527 = (Val(1) - arg1_0.e[28]._super._super);
// builtin Mul
Val x528 = (arg1_0.e[29]._super._super * arg2_0.e[29]._super._super);
// builtin Sub
Val x529 = (Val(1) - arg1_0.e[29]._super._super);
// builtin Mul
Val x530 = (arg1_0.e[30]._super._super * arg2_0.e[30]._super._super);
// builtin Sub
Val x531 = (Val(1) - arg1_0.e[30]._super._super);
// builtin Mul
Val x532 = (arg1_0.e[31]._super._super * arg2_0.e[31]._super._super);
// builtin Sub
Val x533 = (Val(1) - arg1_0.e[31]._super._super);
// builtin Add
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x534 = ((x470 + (x471 * arg3.e[0]._super._super)) + ((x472 + (x473 * arg3.e[1]._super._super)) * Val(2)));
Val x535 = ((x534 + ((x474 + (x475 * arg3.e[2]._super._super)) * Val(4))) + ((x476 + (x477 * arg3.e[3]._super._super)) * Val(8)));
Val x536 = ((x535 + ((x478 + (x479 * arg3.e[4]._super._super)) * Val(16))) + ((x480 + (x481 * arg3.e[5]._super._super)) * Val(32)));
Val x537 = ((x536 + ((x482 + (x483 * arg3.e[6]._super._super)) * Val(64))) + ((x484 + (x485 * arg3.e[7]._super._super)) * Val(128)));
Val x538 = ((x537 + ((x486 + (x487 * arg3.e[8]._super._super)) * Val(256))) + ((x488 + (x489 * arg3.e[9]._super._super)) * Val(512)));
Val x539 = ((x538 + ((x490 + (x491 * arg3.e[10]._super._super)) * Val(1024))) + ((x492 + (x493 * arg3.e[11]._super._super)) * Val(2048)));
Val x540 = ((x539 + ((x494 + (x495 * arg3.e[12]._super._super)) * Val(4096))) + ((x496 + (x497 * arg3.e[13]._super._super)) * Val(8192)));
Val x541 = ((x540 + ((x498 + (x499 * arg3.e[14]._super._super)) * Val(16384))) + ((x500 + (x501 * arg3.e[15]._super._super)) * Val(32768)));
Val x542 = ((x502 + (x503 * arg3.e[16]._super._super)) + ((x504 + (x505 * arg3.e[17]._super._super)) * Val(2)));
Val x543 = ((x542 + ((x506 + (x507 * arg3.e[18]._super._super)) * Val(4))) + ((x508 + (x509 * arg3.e[19]._super._super)) * Val(8)));
Val x544 = ((x543 + ((x510 + (x511 * arg3.e[20]._super._super)) * Val(16))) + ((x512 + (x513 * arg3.e[21]._super._super)) * Val(32)));
Val x545 = ((x544 + ((x514 + (x515 * arg3.e[22]._super._super)) * Val(64))) + ((x516 + (x517 * arg3.e[23]._super._super)) * Val(128)));
Val x546 = ((x545 + ((x518 + (x519 * arg3.e[24]._super._super)) * Val(256))) + ((x520 + (x521 * arg3.e[25]._super._super)) * Val(512)));
Val x547 = ((x546 + ((x522 + (x523 * arg3.e[26]._super._super)) * Val(1024))) + ((x524 + (x525 * arg3.e[27]._super._super)) * Val(2048)));
Val x548 = ((x547 + ((x526 + (x527 * arg3.e[28]._super._super)) * Val(4096))) + ((x528 + (x529 * arg3.e[29]._super._super)) * Val(8192)));
Val x549 = ((x548 + ((x530 + (x531 * arg3.e[30]._super._super)) * Val(16384))) + ((x532 + (x533 * arg3.e[31]._super._super)) * Val(32768)));
Val x550 = ((x378 - (x364 * x284)) + ((x379 - (x367 * x287)) * Val(2)));
Val x551 = ((x550 + ((x380 - (x370 * x290)) * Val(4))) + ((x381 - (x373 * x293)) * Val(8)));
Val x552 = ((x551 + ((x382 - (x376 * x296)) * Val(16))) + ((x383 - (x283 * x299)) * Val(32)));
Val x553 = ((x552 + ((x384 - (x286 * x302)) * Val(64))) + ((x385 - (x289 * x305)) * Val(128)));
Val x554 = ((x553 + ((x386 - (x292 * x308)) * Val(256))) + ((x387 - (x295 * x311)) * Val(512)));
Val x555 = ((x554 + ((x388 - (x298 * x314)) * Val(1024))) + ((x389 - (x301 * x317)) * Val(2048)));
Val x556 = ((x555 + ((x390 - (x304 * x320)) * Val(4096))) + ((x391 - (x307 * x323)) * Val(8192)));
Val x557 = ((x556 + ((x392 - (x310 * x326)) * Val(16384))) + ((x393 - (x313 * x329)) * Val(32768)));
Val x558 = ((x394 - (x316 * x332)) + ((x395 - (x319 * x335)) * Val(2)));
Val x559 = ((x558 + ((x396 - (x322 * x338)) * Val(4))) + ((x397 - (x325 * x341)) * Val(8)));
Val x560 = ((x559 + ((x398 - (x328 * x344)) * Val(16))) + ((x399 - (x331 * x347)) * Val(32)));
Val x561 = ((x560 + ((x400 - (x334 * x350)) * Val(64))) + ((x401 - (x337 * x353)) * Val(128)));
Val x562 = ((x561 + ((x402 - (x340 * x356)) * Val(256))) + ((x403 - (x343 * x359)) * Val(512)));
Val x563 = ((x562 + ((x404 - (x346 * x362)) * Val(1024))) + ((x405 - (x349 * x365)) * Val(2048)));
Val x564 = ((x563 + ((x406 - (x352 * x368)) * Val(4096))) + ((x407 - (x355 * x371)) * Val(8192)));
Val x565 = ((x564 + ((x408 - (x358 * x374)) * Val(16384))) + ((x409 - (x361 * x377)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x566 = (((x449 + x443) + x444) + (x541 + x557));
Val x567 = (((x469 + x463) + x464) + (x549 + x565));
Val x568 = (x9._super.low + x566);
Val x569 = (x9._super.high + x567);
Val x570 = (((x419 + x416) + x417) + x568);
Val x571 = (((x429 + x426) + x427) + x569);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:99)
Val x572 = (arg1_0.a[0]._super._super * arg2_0.a[0]._super._super);
// builtin Sub
Val x573 = (Val(1) - arg3.a[0]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x574 = (Val(1) - arg2_0.a[0]._super._super);
// builtin Mul
Val x575 = (arg1_0.a[0]._super._super * x574);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x576 = (Val(1) - arg1_0.a[0]._super._super);
// builtin Mul
Val x577 = ((x576 * arg2_0.a[0]._super._super) * arg3.a[0]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x578 = (((x572 * x573) + (x575 * arg3.a[0]._super._super)) + x577);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x579 = (arg1_0.a[1]._super._super * arg2_0.a[1]._super._super);
// builtin Sub
Val x580 = (Val(1) - arg3.a[1]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x581 = (Val(1) - arg2_0.a[1]._super._super);
// builtin Mul
Val x582 = (arg1_0.a[1]._super._super * x581);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x583 = (Val(1) - arg1_0.a[1]._super._super);
// builtin Mul
Val x584 = ((x583 * arg2_0.a[1]._super._super) * arg3.a[1]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x585 = (((x579 * x580) + (x582 * arg3.a[1]._super._super)) + x584);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x586 = (arg1_0.a[2]._super._super * arg2_0.a[2]._super._super);
// builtin Sub
Val x587 = (Val(1) - arg3.a[2]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x588 = (Val(1) - arg2_0.a[2]._super._super);
// builtin Mul
Val x589 = (arg1_0.a[2]._super._super * x588);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x590 = (Val(1) - arg1_0.a[2]._super._super);
// builtin Mul
Val x591 = ((x590 * arg2_0.a[2]._super._super) * arg3.a[2]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x592 = (((x586 * x587) + (x589 * arg3.a[2]._super._super)) + x591);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x593 = (arg1_0.a[3]._super._super * arg2_0.a[3]._super._super);
// builtin Sub
Val x594 = (Val(1) - arg3.a[3]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x595 = (Val(1) - arg2_0.a[3]._super._super);
// builtin Mul
Val x596 = (arg1_0.a[3]._super._super * x595);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x597 = (Val(1) - arg1_0.a[3]._super._super);
// builtin Mul
Val x598 = ((x597 * arg2_0.a[3]._super._super) * arg3.a[3]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x599 = (((x593 * x594) + (x596 * arg3.a[3]._super._super)) + x598);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x600 = (arg1_0.a[4]._super._super * arg2_0.a[4]._super._super);
// builtin Sub
Val x601 = (Val(1) - arg3.a[4]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x602 = (Val(1) - arg2_0.a[4]._super._super);
// builtin Mul
Val x603 = (arg1_0.a[4]._super._super * x602);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x604 = (Val(1) - arg1_0.a[4]._super._super);
// builtin Mul
Val x605 = ((x604 * arg2_0.a[4]._super._super) * arg3.a[4]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x606 = (((x600 * x601) + (x603 * arg3.a[4]._super._super)) + x605);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x607 = (arg1_0.a[5]._super._super * arg2_0.a[5]._super._super);
// builtin Sub
Val x608 = (Val(1) - arg3.a[5]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x609 = (Val(1) - arg2_0.a[5]._super._super);
// builtin Mul
Val x610 = (arg1_0.a[5]._super._super * x609);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x611 = (Val(1) - arg1_0.a[5]._super._super);
// builtin Mul
Val x612 = ((x611 * arg2_0.a[5]._super._super) * arg3.a[5]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x613 = (((x607 * x608) + (x610 * arg3.a[5]._super._super)) + x612);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x614 = (arg1_0.a[6]._super._super * arg2_0.a[6]._super._super);
// builtin Sub
Val x615 = (Val(1) - arg3.a[6]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x616 = (Val(1) - arg2_0.a[6]._super._super);
// builtin Mul
Val x617 = (arg1_0.a[6]._super._super * x616);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x618 = (Val(1) - arg1_0.a[6]._super._super);
// builtin Mul
Val x619 = ((x618 * arg2_0.a[6]._super._super) * arg3.a[6]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x620 = (((x614 * x615) + (x617 * arg3.a[6]._super._super)) + x619);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x621 = (arg1_0.a[7]._super._super * arg2_0.a[7]._super._super);
// builtin Sub
Val x622 = (Val(1) - arg3.a[7]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x623 = (Val(1) - arg2_0.a[7]._super._super);
// builtin Mul
Val x624 = (arg1_0.a[7]._super._super * x623);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x625 = (Val(1) - arg1_0.a[7]._super._super);
// builtin Mul
Val x626 = ((x625 * arg2_0.a[7]._super._super) * arg3.a[7]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x627 = (((x621 * x622) + (x624 * arg3.a[7]._super._super)) + x626);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x628 = (arg1_0.a[8]._super._super * arg2_0.a[8]._super._super);
// builtin Sub
Val x629 = (Val(1) - arg3.a[8]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x630 = (Val(1) - arg2_0.a[8]._super._super);
// builtin Mul
Val x631 = (arg1_0.a[8]._super._super * x630);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x632 = (Val(1) - arg1_0.a[8]._super._super);
// builtin Mul
Val x633 = ((x632 * arg2_0.a[8]._super._super) * arg3.a[8]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x634 = (((x628 * x629) + (x631 * arg3.a[8]._super._super)) + x633);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x635 = (arg1_0.a[9]._super._super * arg2_0.a[9]._super._super);
// builtin Sub
Val x636 = (Val(1) - arg3.a[9]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x637 = (Val(1) - arg2_0.a[9]._super._super);
// builtin Mul
Val x638 = (arg1_0.a[9]._super._super * x637);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x639 = (Val(1) - arg1_0.a[9]._super._super);
// builtin Mul
Val x640 = ((x639 * arg2_0.a[9]._super._super) * arg3.a[9]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x641 = (((x635 * x636) + (x638 * arg3.a[9]._super._super)) + x640);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x642 = (arg1_0.a[10]._super._super * arg2_0.a[10]._super._super);
// builtin Sub
Val x643 = (Val(1) - arg3.a[10]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x644 = (Val(1) - arg2_0.a[10]._super._super);
// builtin Mul
Val x645 = (arg1_0.a[10]._super._super * x644);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x646 = (Val(1) - arg1_0.a[10]._super._super);
// builtin Mul
Val x647 = ((x646 * arg2_0.a[10]._super._super) * arg3.a[10]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x648 = (((x642 * x643) + (x645 * arg3.a[10]._super._super)) + x647);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x649 = (arg1_0.a[11]._super._super * arg2_0.a[11]._super._super);
// builtin Sub
Val x650 = (Val(1) - arg3.a[11]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x651 = (Val(1) - arg2_0.a[11]._super._super);
// builtin Mul
Val x652 = (arg1_0.a[11]._super._super * x651);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x653 = (Val(1) - arg1_0.a[11]._super._super);
// builtin Mul
Val x654 = ((x653 * arg2_0.a[11]._super._super) * arg3.a[11]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x655 = (((x649 * x650) + (x652 * arg3.a[11]._super._super)) + x654);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x656 = (arg1_0.a[12]._super._super * arg2_0.a[12]._super._super);
// builtin Sub
Val x657 = (Val(1) - arg3.a[12]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x658 = (Val(1) - arg2_0.a[12]._super._super);
// builtin Mul
Val x659 = (arg1_0.a[12]._super._super * x658);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x660 = (Val(1) - arg1_0.a[12]._super._super);
// builtin Mul
Val x661 = ((x660 * arg2_0.a[12]._super._super) * arg3.a[12]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x662 = (((x656 * x657) + (x659 * arg3.a[12]._super._super)) + x661);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x663 = (arg1_0.a[13]._super._super * arg2_0.a[13]._super._super);
// builtin Sub
Val x664 = (Val(1) - arg3.a[13]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x665 = (Val(1) - arg2_0.a[13]._super._super);
// builtin Mul
Val x666 = (arg1_0.a[13]._super._super * x665);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x667 = (Val(1) - arg1_0.a[13]._super._super);
// builtin Mul
Val x668 = ((x667 * arg2_0.a[13]._super._super) * arg3.a[13]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x669 = (((x663 * x664) + (x666 * arg3.a[13]._super._super)) + x668);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x670 = (arg1_0.a[14]._super._super * arg2_0.a[14]._super._super);
// builtin Sub
Val x671 = (Val(1) - arg3.a[14]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x672 = (Val(1) - arg2_0.a[14]._super._super);
// builtin Mul
Val x673 = (arg1_0.a[14]._super._super * x672);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x674 = (Val(1) - arg1_0.a[14]._super._super);
// builtin Mul
Val x675 = ((x674 * arg2_0.a[14]._super._super) * arg3.a[14]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x676 = (((x670 * x671) + (x673 * arg3.a[14]._super._super)) + x675);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x677 = (arg1_0.a[15]._super._super * arg2_0.a[15]._super._super);
// builtin Sub
Val x678 = (Val(1) - arg3.a[15]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x679 = (Val(1) - arg2_0.a[15]._super._super);
// builtin Mul
Val x680 = (arg1_0.a[15]._super._super * x679);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x681 = (Val(1) - arg1_0.a[15]._super._super);
// builtin Mul
Val x682 = ((x681 * arg2_0.a[15]._super._super) * arg3.a[15]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x683 = (((x677 * x678) + (x680 * arg3.a[15]._super._super)) + x682);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x684 = (arg1_0.a[16]._super._super * arg2_0.a[16]._super._super);
// builtin Sub
Val x685 = (Val(1) - arg3.a[16]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x686 = (Val(1) - arg2_0.a[16]._super._super);
// builtin Mul
Val x687 = (arg1_0.a[16]._super._super * x686);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x688 = (Val(1) - arg1_0.a[16]._super._super);
// builtin Mul
Val x689 = ((x688 * arg2_0.a[16]._super._super) * arg3.a[16]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x690 = (((x684 * x685) + (x687 * arg3.a[16]._super._super)) + x689);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x691 = (arg1_0.a[17]._super._super * arg2_0.a[17]._super._super);
// builtin Sub
Val x692 = (Val(1) - arg3.a[17]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x693 = (Val(1) - arg2_0.a[17]._super._super);
// builtin Mul
Val x694 = (arg1_0.a[17]._super._super * x693);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x695 = (Val(1) - arg1_0.a[17]._super._super);
// builtin Mul
Val x696 = ((x695 * arg2_0.a[17]._super._super) * arg3.a[17]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x697 = (((x691 * x692) + (x694 * arg3.a[17]._super._super)) + x696);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x698 = (arg1_0.a[18]._super._super * arg2_0.a[18]._super._super);
// builtin Sub
Val x699 = (Val(1) - arg3.a[18]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x700 = (Val(1) - arg2_0.a[18]._super._super);
// builtin Mul
Val x701 = (arg1_0.a[18]._super._super * x700);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x702 = (Val(1) - arg1_0.a[18]._super._super);
// builtin Mul
Val x703 = ((x702 * arg2_0.a[18]._super._super) * arg3.a[18]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x704 = (((x698 * x699) + (x701 * arg3.a[18]._super._super)) + x703);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x705 = (arg1_0.a[19]._super._super * arg2_0.a[19]._super._super);
// builtin Sub
Val x706 = (Val(1) - arg3.a[19]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x707 = (Val(1) - arg2_0.a[19]._super._super);
// builtin Mul
Val x708 = (arg1_0.a[19]._super._super * x707);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x709 = (Val(1) - arg1_0.a[19]._super._super);
// builtin Mul
Val x710 = ((x709 * arg2_0.a[19]._super._super) * arg3.a[19]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x711 = (((x705 * x706) + (x708 * arg3.a[19]._super._super)) + x710);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x712 = (arg1_0.a[20]._super._super * arg2_0.a[20]._super._super);
// builtin Sub
Val x713 = (Val(1) - arg3.a[20]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x714 = (Val(1) - arg2_0.a[20]._super._super);
// builtin Mul
Val x715 = (arg1_0.a[20]._super._super * x714);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x716 = (Val(1) - arg1_0.a[20]._super._super);
// builtin Mul
Val x717 = ((x716 * arg2_0.a[20]._super._super) * arg3.a[20]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x718 = (((x712 * x713) + (x715 * arg3.a[20]._super._super)) + x717);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x719 = (arg1_0.a[21]._super._super * arg2_0.a[21]._super._super);
// builtin Sub
Val x720 = (Val(1) - arg3.a[21]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x721 = (Val(1) - arg2_0.a[21]._super._super);
// builtin Mul
Val x722 = (arg1_0.a[21]._super._super * x721);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x723 = (Val(1) - arg1_0.a[21]._super._super);
// builtin Mul
Val x724 = ((x723 * arg2_0.a[21]._super._super) * arg3.a[21]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x725 = (((x719 * x720) + (x722 * arg3.a[21]._super._super)) + x724);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x726 = (arg1_0.a[22]._super._super * arg2_0.a[22]._super._super);
// builtin Sub
Val x727 = (Val(1) - arg3.a[22]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x728 = (Val(1) - arg2_0.a[22]._super._super);
// builtin Mul
Val x729 = (arg1_0.a[22]._super._super * x728);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x730 = (Val(1) - arg1_0.a[22]._super._super);
// builtin Mul
Val x731 = ((x730 * arg2_0.a[22]._super._super) * arg3.a[22]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x732 = (((x726 * x727) + (x729 * arg3.a[22]._super._super)) + x731);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x733 = (arg1_0.a[23]._super._super * arg2_0.a[23]._super._super);
// builtin Sub
Val x734 = (Val(1) - arg3.a[23]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x735 = (Val(1) - arg2_0.a[23]._super._super);
// builtin Mul
Val x736 = (arg1_0.a[23]._super._super * x735);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x737 = (Val(1) - arg1_0.a[23]._super._super);
// builtin Mul
Val x738 = ((x737 * arg2_0.a[23]._super._super) * arg3.a[23]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x739 = (((x733 * x734) + (x736 * arg3.a[23]._super._super)) + x738);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x740 = (arg1_0.a[24]._super._super * arg2_0.a[24]._super._super);
// builtin Sub
Val x741 = (Val(1) - arg3.a[24]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x742 = (Val(1) - arg2_0.a[24]._super._super);
// builtin Mul
Val x743 = (arg1_0.a[24]._super._super * x742);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x744 = (Val(1) - arg1_0.a[24]._super._super);
// builtin Mul
Val x745 = ((x744 * arg2_0.a[24]._super._super) * arg3.a[24]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x746 = (((x740 * x741) + (x743 * arg3.a[24]._super._super)) + x745);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x747 = (arg1_0.a[25]._super._super * arg2_0.a[25]._super._super);
// builtin Sub
Val x748 = (Val(1) - arg3.a[25]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x749 = (Val(1) - arg2_0.a[25]._super._super);
// builtin Mul
Val x750 = (arg1_0.a[25]._super._super * x749);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x751 = (Val(1) - arg1_0.a[25]._super._super);
// builtin Mul
Val x752 = ((x751 * arg2_0.a[25]._super._super) * arg3.a[25]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x753 = (((x747 * x748) + (x750 * arg3.a[25]._super._super)) + x752);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x754 = (arg1_0.a[26]._super._super * arg2_0.a[26]._super._super);
// builtin Sub
Val x755 = (Val(1) - arg3.a[26]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x756 = (Val(1) - arg2_0.a[26]._super._super);
// builtin Mul
Val x757 = (arg1_0.a[26]._super._super * x756);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x758 = (Val(1) - arg1_0.a[26]._super._super);
// builtin Mul
Val x759 = ((x758 * arg2_0.a[26]._super._super) * arg3.a[26]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x760 = (((x754 * x755) + (x757 * arg3.a[26]._super._super)) + x759);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x761 = (arg1_0.a[27]._super._super * arg2_0.a[27]._super._super);
// builtin Sub
Val x762 = (Val(1) - arg3.a[27]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x763 = (Val(1) - arg2_0.a[27]._super._super);
// builtin Mul
Val x764 = (arg1_0.a[27]._super._super * x763);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x765 = (Val(1) - arg1_0.a[27]._super._super);
// builtin Mul
Val x766 = ((x765 * arg2_0.a[27]._super._super) * arg3.a[27]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x767 = (((x761 * x762) + (x764 * arg3.a[27]._super._super)) + x766);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x768 = (arg1_0.a[28]._super._super * arg2_0.a[28]._super._super);
// builtin Sub
Val x769 = (Val(1) - arg3.a[28]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x770 = (Val(1) - arg2_0.a[28]._super._super);
// builtin Mul
Val x771 = (arg1_0.a[28]._super._super * x770);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x772 = (Val(1) - arg1_0.a[28]._super._super);
// builtin Mul
Val x773 = ((x772 * arg2_0.a[28]._super._super) * arg3.a[28]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x774 = (((x768 * x769) + (x771 * arg3.a[28]._super._super)) + x773);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x775 = (arg1_0.a[29]._super._super * arg2_0.a[29]._super._super);
// builtin Sub
Val x776 = (Val(1) - arg3.a[29]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x777 = (Val(1) - arg2_0.a[29]._super._super);
// builtin Mul
Val x778 = (arg1_0.a[29]._super._super * x777);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x779 = (Val(1) - arg1_0.a[29]._super._super);
// builtin Mul
Val x780 = ((x779 * arg2_0.a[29]._super._super) * arg3.a[29]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x781 = (((x775 * x776) + (x778 * arg3.a[29]._super._super)) + x780);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x782 = (arg1_0.a[30]._super._super * arg2_0.a[30]._super._super);
// builtin Sub
Val x783 = (Val(1) - arg3.a[30]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x784 = (Val(1) - arg2_0.a[30]._super._super);
// builtin Mul
Val x785 = (arg1_0.a[30]._super._super * x784);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x786 = (Val(1) - arg1_0.a[30]._super._super);
// builtin Mul
Val x787 = ((x786 * arg2_0.a[30]._super._super) * arg3.a[30]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x788 = (((x782 * x783) + (x785 * arg3.a[30]._super._super)) + x787);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x789 = (arg1_0.a[31]._super._super * arg2_0.a[31]._super._super);
// builtin Sub
Val x790 = (Val(1) - arg3.a[31]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x791 = (Val(1) - arg2_0.a[31]._super._super);
// builtin Mul
Val x792 = (arg1_0.a[31]._super._super * x791);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x793 = (Val(1) - arg1_0.a[31]._super._super);
// builtin Mul
Val x794 = ((x793 * arg2_0.a[31]._super._super) * arg3.a[31]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x795 = (((x789 * x790) + (x792 * arg3.a[31]._super._super)) + x794);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x796 = ((x578 + (x572 * arg3.a[0]._super._super)) + ((x585 + (x579 * arg3.a[1]._super._super)) * Val(2)));
Val x797 = ((x796 + ((x592 + (x586 * arg3.a[2]._super._super)) * Val(4))) + ((x599 + (x593 * arg3.a[3]._super._super)) * Val(8)));
Val x798 = ((x797 + ((x606 + (x600 * arg3.a[4]._super._super)) * Val(16))) + ((x613 + (x607 * arg3.a[5]._super._super)) * Val(32)));
Val x799 = ((x798 + ((x620 + (x614 * arg3.a[6]._super._super)) * Val(64))) + ((x627 + (x621 * arg3.a[7]._super._super)) * Val(128)));
Val x800 = ((x799 + ((x634 + (x628 * arg3.a[8]._super._super)) * Val(256))) + ((x641 + (x635 * arg3.a[9]._super._super)) * Val(512)));
Val x801 = ((x800 + ((x648 + (x642 * arg3.a[10]._super._super)) * Val(1024))) + ((x655 + (x649 * arg3.a[11]._super._super)) * Val(2048)));
Val x802 = ((x801 + ((x662 + (x656 * arg3.a[12]._super._super)) * Val(4096))) + ((x669 + (x663 * arg3.a[13]._super._super)) * Val(8192)));
Val x803 = ((x802 + ((x676 + (x670 * arg3.a[14]._super._super)) * Val(16384))) + ((x683 + (x677 * arg3.a[15]._super._super)) * Val(32768)));
Val x804 = ((x690 + (x684 * arg3.a[16]._super._super)) + ((x697 + (x691 * arg3.a[17]._super._super)) * Val(2)));
Val x805 = ((x804 + ((x704 + (x698 * arg3.a[18]._super._super)) * Val(4))) + ((x711 + (x705 * arg3.a[19]._super._super)) * Val(8)));
Val x806 = ((x805 + ((x718 + (x712 * arg3.a[20]._super._super)) * Val(16))) + ((x725 + (x719 * arg3.a[21]._super._super)) * Val(32)));
Val x807 = ((x806 + ((x732 + (x726 * arg3.a[22]._super._super)) * Val(64))) + ((x739 + (x733 * arg3.a[23]._super._super)) * Val(128)));
Val x808 = ((x807 + ((x746 + (x740 * arg3.a[24]._super._super)) * Val(256))) + ((x753 + (x747 * arg3.a[25]._super._super)) * Val(512)));
Val x809 = ((x808 + ((x760 + (x754 * arg3.a[26]._super._super)) * Val(1024))) + ((x767 + (x761 * arg3.a[27]._super._super)) * Val(2048)));
Val x810 = ((x809 + ((x774 + (x768 * arg3.a[28]._super._super)) * Val(4096))) + ((x781 + (x775 * arg3.a[29]._super._super)) * Val(8192)));
Val x811 = ((x810 + ((x788 + (x782 * arg3.a[30]._super._super)) * Val(16384))) + ((x795 + (x789 * arg3.a[31]._super._super)) * Val(32768)));
Val x812 = ((x250 - (x218 * x156)) + ((x251 - (x221 * x159)) * Val(2)));
Val x813 = ((x812 + ((x252 - (x224 * x162)) * Val(4))) + ((x253 - (x227 * x165)) * Val(8)));
Val x814 = ((x813 + ((x254 - (x230 * x168)) * Val(16))) + ((x255 - (x233 * x171)) * Val(32)));
Val x815 = ((x814 + ((x256 - (x236 * x174)) * Val(64))) + ((x257 - (x239 * x177)) * Val(128)));
Val x816 = ((x815 + ((x258 - (x242 * x180)) * Val(256))) + ((x259 - (x245 * x183)) * Val(512)));
Val x817 = ((x816 + ((x260 - (x248 * x186)) * Val(1024))) + ((x261 - (x155 * x189)) * Val(2048)));
Val x818 = ((x817 + ((x262 - (x158 * x192)) * Val(4096))) + ((x263 - (x161 * x195)) * Val(8192)));
Val x819 = ((x818 + ((x264 - (x164 * x198)) * Val(16384))) + ((x265 - (x167 * x201)) * Val(32768)));
Val x820 = ((x266 - (x170 * x204)) + ((x267 - (x173 * x207)) * Val(2)));
Val x821 = ((x820 + ((x268 - (x176 * x210)) * Val(4))) + ((x269 - (x179 * x213)) * Val(8)));
Val x822 = ((x821 + ((x270 - (x182 * x216)) * Val(16))) + ((x271 - (x185 * x219)) * Val(32)));
Val x823 = ((x822 + ((x272 - (x188 * x222)) * Val(64))) + ((x273 - (x191 * x225)) * Val(128)));
Val x824 = ((x823 + ((x274 - (x194 * x228)) * Val(256))) + ((x275 - (x197 * x231)) * Val(512)));
Val x825 = ((x824 + ((x276 - (x200 * x234)) * Val(1024))) + ((x277 - (x203 * x237)) * Val(2048)));
Val x826 = ((x825 + ((x278 - (x206 * x240)) * Val(4096))) + ((x279 - (x209 * x243)) * Val(8192)));
Val x827 = ((x826 + ((x280 - (x212 * x246)) * Val(16384))) + ((x281 - (x215 * x249)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x828 = (x570 + (x803 + x819));
Val x829 = (x571 + (x811 + x827));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:100)
Val x830 = (arg4.a[1]._super._super * Val(2));
Val x831 = (arg4.a[2]._super._super * Val(4));
Val x832 = (arg4.a[3]._super._super * Val(8));
Val x833 = (arg4.a[4]._super._super * Val(16));
Val x834 = (arg4.a[5]._super._super * Val(32));
Val x835 = (arg4.a[6]._super._super * Val(64));
Val x836 = (arg4.a[7]._super._super * Val(128));
Val x837 = (arg4.a[8]._super._super * Val(256));
Val x838 = (arg4.a[9]._super._super * Val(512));
Val x839 = (arg4.a[10]._super._super * Val(1024));
Val x840 = (arg4.a[11]._super._super * Val(2048));
Val x841 = (arg4.a[12]._super._super * Val(4096));
Val x842 = (arg4.a[13]._super._super * Val(8192));
Val x843 = (arg4.a[14]._super._super * Val(16384));
Val x844 = (arg4.a[15]._super._super * Val(32768));
// builtin Add
Val x845 = (arg4.a[0]._super._super + x830);
Val x846 = (((x845 + x831) + x832) + x833);
Val x847 = (((x846 + x834) + x835) + x836);
Val x848 = (((x847 + x837) + x838) + x839);
Val x849 = (((x848 + x840) + x841) + x842);
// builtin Mul
Val x850 = (arg4.a[17]._super._super * Val(2));
Val x851 = (arg4.a[18]._super._super * Val(4));
Val x852 = (arg4.a[19]._super._super * Val(8));
Val x853 = (arg4.a[20]._super._super * Val(16));
Val x854 = (arg4.a[21]._super._super * Val(32));
Val x855 = (arg4.a[22]._super._super * Val(64));
Val x856 = (arg4.a[23]._super._super * Val(128));
Val x857 = (arg4.a[24]._super._super * Val(256));
Val x858 = (arg4.a[25]._super._super * Val(512));
Val x859 = (arg4.a[26]._super._super * Val(1024));
Val x860 = (arg4.a[27]._super._super * Val(2048));
Val x861 = (arg4.a[28]._super._super * Val(4096));
Val x862 = (arg4.a[29]._super._super * Val(8192));
Val x863 = (arg4.a[30]._super._super * Val(16384));
Val x864 = (arg4.a[31]._super._super * Val(32768));
// builtin Add
Val x865 = (arg4.a[16]._super._super + x850);
Val x866 = (((x865 + x851) + x852) + x853);
Val x867 = (((x866 + x854) + x855) + x856);
Val x868 = (((x867 + x857) + x858) + x859);
Val x869 = (((x868 + x860) + x861) + x862);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x870 = (x570 + ((x849 + x843) + x844));
Val x871 = (x571 + ((x869 + x863) + x864));
// Log(<preamble>:22)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:140)
INVOKE_EXTERN(ctx,log, "a = ", std::initializer_list<Val>{x828, x829});
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:141)
INVOKE_EXTERN(ctx,log, "e = ", std::initializer_list<Val>{x870, x871});
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:142)
UnpackReg_32__16_Struct x872 = exec_CarryAndExpand(ctx,Val2Array{x828, x829}, LAYOUT_LOOKUP(layout5, a));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:143)
UnpackReg_32__16_Struct x873 = exec_CarryAndExpand(ctx,Val2Array{x870, x871}, LAYOUT_LOOKUP(layout5, e));
// builtin Add
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:150)
Val x874 = (arg1_0.dataAddr._super + Val(1));
// builtin Sub
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:153)
Val x875 = (Val(1) - x7._super);
// builtin Add
Val x876 = (arg1_0.round._super + Val(1));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:154)
Val x877 = ((x7._super * Val(35)) + (x875 * Val(34)));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:142)
Val32Array x878 = Val32Array{x872._super[0]._super, x872._super[1]._super, x872._super[2]._super, x872._super[3]._super, x872._super[4]._super, x872._super[5]._super, x872._super[6]._super, x872._super[7]._super, x872._super[8]._super, x872._super[9]._super, x872._super[10]._super, x872._super[11]._super, x872._super[12]._super, x872._super[13]._super, x872._super[14]._super, x872._super[15]._super, x872._super[16]._super, x872._super[17]._super, x872._super[18]._super, x872._super[19]._super, x872._super[20]._super, x872._super[21]._super, x872._super[22]._super, x872._super[23]._super, x872._super[24]._super, x872._super[25]._super, x872._super[26]._super, x872._super[27]._super, x872._super[28]._super, x872._super[29]._super, x872._super[30]._super, x872._super[31]._super};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:143)
Val32Array x879 = Val32Array{x873._super[0]._super, x873._super[1]._super, x873._super[2]._super, x873._super[3]._super, x873._super[4]._super, x873._super[5]._super, x873._super[6]._super, x873._super[7]._super, x873._super[8]._super, x873._super[9]._super, x873._super[10]._super, x873._super[11]._super, x873._super[12]._super, x873._super[13]._super, x873._super[14]._super, x873._super[15]._super, x873._super[16]._super, x873._super[17]._super, x873._super[18]._super, x873._super[19]._super, x873._super[20]._super, x873._super[21]._super, x873._super[22]._super, x873._super[23]._super, x873._super[24]._super, x873._super[25]._super, x873._super[26]._super, x873._super[27]._super, x873._super[28]._super, x873._super[29]._super, x873._super[30]._super, x873._super[31]._super};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:137)
Val32Array x880 = Val32Array{x44[0]._super, x44[1]._super, x44[2]._super, x44[3]._super, x44[4]._super, x44[5]._super, x44[6]._super, x44[7]._super, x44[8]._super, x44[9]._super, x44[10]._super, x44[11]._super, x44[12]._super, x44[13]._super, x44[14]._super, x44[15]._super, x44[16]._super, x44[17]._super, x44[18]._super, x44[19]._super, x44[20]._super, x44[21]._super, x44[22]._super, x44[23]._super, x44[24]._super, x44[25]._super, x44[26]._super, x44[27]._super, x44[28]._super, x44[29]._super, x44[30]._super, x44[31]._super};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:144)
ShaStateStruct x881 = exec_ShaState(ctx,x878, x879, x880, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, x874, arg1_0.count._super, arg1_0.kAddr._super, (x875 * x876), x877, LAYOUT_LOOKUP(layout5, _super));
return x881;
}
ShaStateStruct exec_ShaMix(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, ShaStateStruct arg2_0, ShaStateStruct arg3, ShaStateStruct arg4, ShaStateStruct arg5, ShaStateStruct arg6, ShaStateStruct arg7, BoundLayout<ShaMixLayout> layout8)   {
// builtin Sub
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:163)
Val x9 = (Val(47) - arg1_0.round._super);
NondetRegStruct x10 = exec_IsZero(ctx,x9, LAYOUT_LOOKUP(layout8, lastRound));
// builtin Add
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:164)
Val x11 = (arg1_0.kAddr._super + Val(16));
GetDataStruct x12 = exec_MemoryRead(ctx,arg0, (x11 + arg1_0.round._super), LAYOUT_LOOKUP(layout8, k));
// builtin Add
// BitXor(zirgen/circuit/rv32im/v2/dsl/bits.zir:51)
// XorU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:10)
// ComputeWBack(zirgen/circuit/rv32im/v2/dsl/sha2.zir:84)
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:165)
Val x13 = (arg6.w[18]._super._super + arg6.w[3]._super._super);
// builtin Mul
Val x14 = (arg6.w[18]._super._super * Val(2));
// builtin Sub
Val x15 = (x13 - (x14 * arg6.w[3]._super._super));
// builtin Add
Val x16 = (arg6.w[19]._super._super + arg6.w[4]._super._super);
// builtin Mul
Val x17 = (arg6.w[19]._super._super * Val(2));
// builtin Sub
Val x18 = (x16 - (x17 * arg6.w[4]._super._super));
// builtin Add
Val x19 = (arg6.w[20]._super._super + arg6.w[5]._super._super);
// builtin Mul
Val x20 = (arg6.w[20]._super._super * Val(2));
// builtin Sub
Val x21 = (x19 - (x20 * arg6.w[5]._super._super));
// builtin Add
Val x22 = (arg6.w[21]._super._super + arg6.w[6]._super._super);
// builtin Mul
Val x23 = (arg6.w[21]._super._super * Val(2));
// builtin Sub
Val x24 = (x22 - (x23 * arg6.w[6]._super._super));
// builtin Add
Val x25 = (arg6.w[22]._super._super + arg6.w[7]._super._super);
// builtin Mul
Val x26 = (arg6.w[22]._super._super * Val(2));
// builtin Sub
Val x27 = (x25 - (x26 * arg6.w[7]._super._super));
// builtin Add
Val x28 = (arg6.w[23]._super._super + arg6.w[8]._super._super);
// builtin Mul
Val x29 = (arg6.w[23]._super._super * Val(2));
// builtin Sub
Val x30 = (x28 - (x29 * arg6.w[8]._super._super));
// builtin Add
Val x31 = (arg6.w[24]._super._super + arg6.w[9]._super._super);
// builtin Mul
Val x32 = (arg6.w[24]._super._super * Val(2));
// builtin Sub
Val x33 = (x31 - (x32 * arg6.w[9]._super._super));
// builtin Add
Val x34 = (arg6.w[25]._super._super + arg6.w[10]._super._super);
// builtin Mul
Val x35 = (arg6.w[25]._super._super * Val(2));
// builtin Sub
Val x36 = (x34 - (x35 * arg6.w[10]._super._super));
// builtin Add
Val x37 = (arg6.w[26]._super._super + arg6.w[11]._super._super);
// builtin Mul
Val x38 = (arg6.w[26]._super._super * Val(2));
// builtin Sub
Val x39 = (x37 - (x38 * arg6.w[11]._super._super));
// builtin Add
Val x40 = (arg6.w[27]._super._super + arg6.w[12]._super._super);
// builtin Mul
Val x41 = (arg6.w[27]._super._super * Val(2));
// builtin Sub
Val x42 = (x40 - (x41 * arg6.w[12]._super._super));
// builtin Add
Val x43 = (arg6.w[28]._super._super + arg6.w[13]._super._super);
// builtin Mul
Val x44 = (arg6.w[28]._super._super * Val(2));
// builtin Sub
Val x45 = (x43 - (x44 * arg6.w[13]._super._super));
// builtin Add
Val x46 = (arg6.w[29]._super._super + arg6.w[14]._super._super);
// builtin Mul
Val x47 = (arg6.w[29]._super._super * Val(2));
// builtin Sub
Val x48 = (x46 - (x47 * arg6.w[14]._super._super));
// builtin Add
Val x49 = (arg6.w[30]._super._super + arg6.w[15]._super._super);
// builtin Mul
Val x50 = (arg6.w[30]._super._super * Val(2));
// builtin Sub
Val x51 = (x49 - (x50 * arg6.w[15]._super._super));
// builtin Add
Val x52 = (arg6.w[31]._super._super + arg6.w[16]._super._super);
// builtin Mul
Val x53 = (arg6.w[31]._super._super * Val(2));
// builtin Sub
Val x54 = (x52 - (x53 * arg6.w[16]._super._super));
// builtin Add
Val x55 = (arg6.w[0]._super._super + arg6.w[17]._super._super);
// builtin Mul
Val x56 = (arg6.w[0]._super._super * Val(2));
// builtin Sub
Val x57 = (x55 - (x56 * arg6.w[17]._super._super));
// builtin Add
Val x58 = (arg6.w[1]._super._super + arg6.w[18]._super._super);
// builtin Mul
Val x59 = (arg6.w[1]._super._super * Val(2));
// builtin Sub
Val x60 = (x58 - (x59 * arg6.w[18]._super._super));
// builtin Add
Val x61 = (arg6.w[2]._super._super + arg6.w[19]._super._super);
// builtin Mul
Val x62 = (arg6.w[2]._super._super * Val(2));
// builtin Sub
Val x63 = (x61 - (x62 * arg6.w[19]._super._super));
// builtin Add
Val x64 = (arg6.w[3]._super._super + arg6.w[20]._super._super);
// builtin Mul
Val x65 = (arg6.w[3]._super._super * Val(2));
// builtin Sub
Val x66 = (x64 - (x65 * arg6.w[20]._super._super));
// builtin Add
Val x67 = (arg6.w[4]._super._super + arg6.w[21]._super._super);
// builtin Mul
Val x68 = (arg6.w[4]._super._super * Val(2));
// builtin Sub
Val x69 = (x67 - (x68 * arg6.w[21]._super._super));
// builtin Add
Val x70 = (arg6.w[5]._super._super + arg6.w[22]._super._super);
// builtin Mul
Val x71 = (arg6.w[5]._super._super * Val(2));
// builtin Sub
Val x72 = (x70 - (x71 * arg6.w[22]._super._super));
// builtin Add
Val x73 = (arg6.w[6]._super._super + arg6.w[23]._super._super);
// builtin Mul
Val x74 = (arg6.w[6]._super._super * Val(2));
// builtin Sub
Val x75 = (x73 - (x74 * arg6.w[23]._super._super));
// builtin Add
Val x76 = (arg6.w[7]._super._super + arg6.w[24]._super._super);
// builtin Mul
Val x77 = (arg6.w[7]._super._super * Val(2));
// builtin Sub
Val x78 = (x76 - (x77 * arg6.w[24]._super._super));
// builtin Add
Val x79 = (arg6.w[8]._super._super + arg6.w[25]._super._super);
// builtin Mul
Val x80 = (arg6.w[8]._super._super * Val(2));
// builtin Sub
Val x81 = (x79 - (x80 * arg6.w[25]._super._super));
// builtin Add
Val x82 = (arg6.w[9]._super._super + arg6.w[26]._super._super);
// builtin Mul
Val x83 = (arg6.w[9]._super._super * Val(2));
// builtin Sub
Val x84 = (x82 - (x83 * arg6.w[26]._super._super));
// builtin Add
Val x85 = (arg6.w[10]._super._super + arg6.w[27]._super._super);
// builtin Mul
Val x86 = (arg6.w[10]._super._super * Val(2));
// builtin Sub
Val x87 = (x85 - (x86 * arg6.w[27]._super._super));
// builtin Add
Val x88 = (arg6.w[11]._super._super + arg6.w[28]._super._super);
// builtin Mul
Val x89 = (arg6.w[11]._super._super * Val(2));
// builtin Sub
Val x90 = (x88 - (x89 * arg6.w[28]._super._super));
// builtin Add
Val x91 = (arg6.w[12]._super._super + arg6.w[29]._super._super);
// builtin Mul
Val x92 = (arg6.w[12]._super._super * Val(2));
// builtin Sub
Val x93 = (x91 - (x92 * arg6.w[29]._super._super));
// builtin Add
Val x94 = (arg6.w[13]._super._super + arg6.w[30]._super._super);
// builtin Mul
Val x95 = (arg6.w[13]._super._super * Val(2));
// builtin Sub
Val x96 = (x94 - (x95 * arg6.w[30]._super._super));
// builtin Add
Val x97 = (arg6.w[14]._super._super + arg6.w[31]._super._super);
// builtin Mul
Val x98 = (arg6.w[14]._super._super * Val(2));
// builtin Sub
Val x99 = (x97 - (x98 * arg6.w[31]._super._super));
// builtin Add
Val x100 = (arg6.w[7]._super._super + x15);
Val x101 = (arg6.w[8]._super._super + x18);
Val x102 = (arg6.w[9]._super._super + x21);
Val x103 = (arg6.w[10]._super._super + x24);
Val x104 = (arg6.w[11]._super._super + x27);
Val x105 = (arg6.w[12]._super._super + x30);
Val x106 = (arg6.w[13]._super._super + x33);
Val x107 = (arg6.w[14]._super._super + x36);
Val x108 = (arg6.w[15]._super._super + x39);
// builtin Mul
Val x109 = (arg6.w[15]._super._super * Val(2));
// builtin Add
Val x110 = (arg6.w[16]._super._super + x42);
// builtin Mul
Val x111 = (arg6.w[16]._super._super * Val(2));
// builtin Add
Val x112 = (arg6.w[17]._super._super + x45);
// builtin Mul
Val x113 = (arg6.w[17]._super._super * Val(2));
// builtin Add
Val x114 = (arg6.w[18]._super._super + x48);
Val x115 = (arg6.w[19]._super._super + x51);
Val x116 = (arg6.w[20]._super._super + x54);
Val x117 = (arg6.w[21]._super._super + x57);
Val x118 = (arg6.w[22]._super._super + x60);
Val x119 = (arg6.w[23]._super._super + x63);
Val x120 = (arg6.w[24]._super._super + x66);
Val x121 = (arg6.w[25]._super._super + x69);
Val x122 = (arg6.w[26]._super._super + x72);
Val x123 = (arg6.w[27]._super._super + x75);
Val x124 = (arg6.w[28]._super._super + x78);
Val x125 = (arg6.w[29]._super._super + x81);
Val x126 = (arg6.w[30]._super._super + x84);
Val x127 = (arg6.w[31]._super._super + x87);
Val x128 = (arg6.w[0]._super._super + x90);
Val x129 = (arg6.w[1]._super._super + x93);
Val x130 = (arg6.w[2]._super._super + x96);
Val x131 = (arg6.w[3]._super._super + x99);
Val x132 = (arg6.w[4]._super._super + arg6.w[15]._super._super);
Val x133 = (arg6.w[5]._super._super + arg6.w[16]._super._super);
Val x134 = (arg6.w[6]._super._super + arg6.w[17]._super._super);
// ComputeWBack(zirgen/circuit/rv32im/v2/dsl/sha2.zir:85)
Val x135 = (arg2_0.w[19]._super._super + arg2_0.w[10]._super._super);
// builtin Mul
Val x136 = (arg2_0.w[19]._super._super * Val(2));
// builtin Sub
Val x137 = (x135 - (x136 * arg2_0.w[10]._super._super));
// builtin Add
Val x138 = (arg2_0.w[20]._super._super + arg2_0.w[11]._super._super);
// builtin Mul
Val x139 = (arg2_0.w[20]._super._super * Val(2));
// builtin Sub
Val x140 = (x138 - (x139 * arg2_0.w[11]._super._super));
// builtin Add
Val x141 = (arg2_0.w[21]._super._super + arg2_0.w[12]._super._super);
// builtin Mul
Val x142 = (arg2_0.w[21]._super._super * Val(2));
// builtin Sub
Val x143 = (x141 - (x142 * arg2_0.w[12]._super._super));
// builtin Add
Val x144 = (arg2_0.w[22]._super._super + arg2_0.w[13]._super._super);
// builtin Mul
Val x145 = (arg2_0.w[22]._super._super * Val(2));
// builtin Sub
Val x146 = (x144 - (x145 * arg2_0.w[13]._super._super));
// builtin Add
Val x147 = (arg2_0.w[23]._super._super + arg2_0.w[14]._super._super);
// builtin Mul
Val x148 = (arg2_0.w[23]._super._super * Val(2));
// builtin Sub
Val x149 = (x147 - (x148 * arg2_0.w[14]._super._super));
// builtin Add
Val x150 = (arg2_0.w[24]._super._super + arg2_0.w[15]._super._super);
// builtin Mul
Val x151 = (arg2_0.w[24]._super._super * Val(2));
// builtin Sub
Val x152 = (x150 - (x151 * arg2_0.w[15]._super._super));
// builtin Add
Val x153 = (arg2_0.w[25]._super._super + arg2_0.w[16]._super._super);
// builtin Mul
Val x154 = (arg2_0.w[25]._super._super * Val(2));
// builtin Sub
Val x155 = (x153 - (x154 * arg2_0.w[16]._super._super));
// builtin Add
Val x156 = (arg2_0.w[26]._super._super + arg2_0.w[17]._super._super);
// builtin Mul
Val x157 = (arg2_0.w[26]._super._super * Val(2));
// builtin Sub
Val x158 = (x156 - (x157 * arg2_0.w[17]._super._super));
// builtin Add
Val x159 = (arg2_0.w[27]._super._super + arg2_0.w[18]._super._super);
// builtin Mul
Val x160 = (arg2_0.w[27]._super._super * Val(2));
// builtin Sub
Val x161 = (x159 - (x160 * arg2_0.w[18]._super._super));
// builtin Add
Val x162 = (arg2_0.w[28]._super._super + arg2_0.w[19]._super._super);
// builtin Mul
Val x163 = (arg2_0.w[28]._super._super * Val(2));
// builtin Sub
Val x164 = (x162 - (x163 * arg2_0.w[19]._super._super));
// builtin Add
Val x165 = (arg2_0.w[29]._super._super + arg2_0.w[20]._super._super);
// builtin Mul
Val x166 = (arg2_0.w[29]._super._super * Val(2));
// builtin Sub
Val x167 = (x165 - (x166 * arg2_0.w[20]._super._super));
// builtin Add
Val x168 = (arg2_0.w[30]._super._super + arg2_0.w[21]._super._super);
// builtin Mul
Val x169 = (arg2_0.w[30]._super._super * Val(2));
// builtin Sub
Val x170 = (x168 - (x169 * arg2_0.w[21]._super._super));
// builtin Add
Val x171 = (arg2_0.w[31]._super._super + arg2_0.w[22]._super._super);
// builtin Mul
Val x172 = (arg2_0.w[31]._super._super * Val(2));
// builtin Sub
Val x173 = (x171 - (x172 * arg2_0.w[22]._super._super));
// builtin Add
Val x174 = (arg2_0.w[0]._super._super + arg2_0.w[23]._super._super);
// builtin Mul
Val x175 = (arg2_0.w[0]._super._super * Val(2));
// builtin Sub
Val x176 = (x174 - (x175 * arg2_0.w[23]._super._super));
// builtin Add
Val x177 = (arg2_0.w[1]._super._super + arg2_0.w[24]._super._super);
// builtin Mul
Val x178 = (arg2_0.w[1]._super._super * Val(2));
// builtin Sub
Val x179 = (x177 - (x178 * arg2_0.w[24]._super._super));
// builtin Add
Val x180 = (arg2_0.w[2]._super._super + arg2_0.w[25]._super._super);
// builtin Mul
Val x181 = (arg2_0.w[2]._super._super * Val(2));
// builtin Sub
Val x182 = (x180 - (x181 * arg2_0.w[25]._super._super));
// builtin Add
Val x183 = (arg2_0.w[3]._super._super + arg2_0.w[26]._super._super);
// builtin Mul
Val x184 = (arg2_0.w[3]._super._super * Val(2));
// builtin Sub
Val x185 = (x183 - (x184 * arg2_0.w[26]._super._super));
// builtin Add
Val x186 = (arg2_0.w[4]._super._super + arg2_0.w[27]._super._super);
// builtin Mul
Val x187 = (arg2_0.w[4]._super._super * Val(2));
// builtin Sub
Val x188 = (x186 - (x187 * arg2_0.w[27]._super._super));
// builtin Add
Val x189 = (arg2_0.w[5]._super._super + arg2_0.w[28]._super._super);
// builtin Mul
Val x190 = (arg2_0.w[5]._super._super * Val(2));
// builtin Sub
Val x191 = (x189 - (x190 * arg2_0.w[28]._super._super));
// builtin Add
Val x192 = (arg2_0.w[6]._super._super + arg2_0.w[29]._super._super);
// builtin Mul
Val x193 = (arg2_0.w[6]._super._super * Val(2));
// builtin Sub
Val x194 = (x192 - (x193 * arg2_0.w[29]._super._super));
// builtin Add
Val x195 = (arg2_0.w[7]._super._super + arg2_0.w[30]._super._super);
// builtin Mul
Val x196 = (arg2_0.w[7]._super._super * Val(2));
// builtin Sub
Val x197 = (x195 - (x196 * arg2_0.w[30]._super._super));
// builtin Add
Val x198 = (arg2_0.w[8]._super._super + arg2_0.w[31]._super._super);
// builtin Mul
Val x199 = (arg2_0.w[8]._super._super * Val(2));
// builtin Sub
Val x200 = (x198 - (x199 * arg2_0.w[31]._super._super));
// builtin Add
Val x201 = (arg2_0.w[17]._super._super + x137);
// builtin Mul
Val x202 = (arg2_0.w[17]._super._super * Val(2));
// builtin Add
Val x203 = (arg2_0.w[18]._super._super + x140);
// builtin Mul
Val x204 = (arg2_0.w[18]._super._super * Val(2));
// builtin Add
Val x205 = (arg2_0.w[19]._super._super + x143);
Val x206 = (arg2_0.w[20]._super._super + x146);
Val x207 = (arg2_0.w[21]._super._super + x149);
Val x208 = (arg2_0.w[22]._super._super + x152);
Val x209 = (arg2_0.w[23]._super._super + x155);
Val x210 = (arg2_0.w[24]._super._super + x158);
Val x211 = (arg2_0.w[25]._super._super + x161);
Val x212 = (arg2_0.w[26]._super._super + x164);
Val x213 = (arg2_0.w[27]._super._super + x167);
Val x214 = (arg2_0.w[28]._super._super + x170);
Val x215 = (arg2_0.w[29]._super._super + x173);
Val x216 = (arg2_0.w[30]._super._super + x176);
Val x217 = (arg2_0.w[31]._super._super + x179);
Val x218 = (arg2_0.w[0]._super._super + x182);
Val x219 = (arg2_0.w[1]._super._super + x185);
Val x220 = (arg2_0.w[2]._super._super + x188);
Val x221 = (arg2_0.w[3]._super._super + x191);
Val x222 = (arg2_0.w[4]._super._super + x194);
Val x223 = (arg2_0.w[5]._super._super + x197);
Val x224 = (arg2_0.w[6]._super._super + x200);
Val x225 = (arg2_0.w[7]._super._super + arg2_0.w[9]._super._super);
Val x226 = (arg2_0.w[8]._super._super + arg2_0.w[10]._super._super);
Val x227 = (arg2_0.w[9]._super._super + arg2_0.w[11]._super._super);
// builtin Mul
Val x228 = (arg2_0.w[9]._super._super * Val(2));
// builtin Add
Val x229 = (arg2_0.w[10]._super._super + arg2_0.w[12]._super._super);
// builtin Mul
Val x230 = (arg2_0.w[10]._super._super * Val(2));
// builtin Add
Val x231 = (arg2_0.w[11]._super._super + arg2_0.w[13]._super._super);
// builtin Mul
Val x232 = (arg2_0.w[11]._super._super * Val(2));
// builtin Add
Val x233 = (arg2_0.w[12]._super._super + arg2_0.w[14]._super._super);
// builtin Mul
Val x234 = (arg2_0.w[12]._super._super * Val(2));
// builtin Add
Val x235 = (arg2_0.w[13]._super._super + arg2_0.w[15]._super._super);
// builtin Mul
Val x236 = (arg2_0.w[13]._super._super * Val(2));
// builtin Add
Val x237 = (arg2_0.w[14]._super._super + arg2_0.w[16]._super._super);
// builtin Mul
Val x238 = (arg2_0.w[14]._super._super * Val(2));
// builtin Add
Val x239 = (arg2_0.w[15]._super._super + arg2_0.w[17]._super._super);
// builtin Mul
Val x240 = (arg2_0.w[15]._super._super * Val(2));
// builtin Add
Val x241 = (arg2_0.w[16]._super._super + arg2_0.w[18]._super._super);
// builtin Mul
Val x242 = (arg2_0.w[16]._super._super * Val(2));
// builtin Add
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeWBack(zirgen/circuit/rv32im/v2/dsl/sha2.zir:86)
Val x243 = ((x100 - (x77 * x15)) + ((x101 - (x80 * x18)) * Val(2)));
Val x244 = ((x243 + ((x102 - (x83 * x21)) * Val(4))) + ((x103 - (x86 * x24)) * Val(8)));
Val x245 = ((x244 + ((x104 - (x89 * x27)) * Val(16))) + ((x105 - (x92 * x30)) * Val(32)));
Val x246 = ((x245 + ((x106 - (x95 * x33)) * Val(64))) + ((x107 - (x98 * x36)) * Val(128)));
Val x247 = ((x246 + ((x108 - (x109 * x39)) * Val(256))) + ((x110 - (x111 * x42)) * Val(512)));
Val x248 = ((x247 + ((x112 - (x113 * x45)) * Val(1024))) + ((x114 - (x14 * x48)) * Val(2048)));
Val x249 = ((x248 + ((x115 - (x17 * x51)) * Val(4096))) + ((x116 - (x20 * x54)) * Val(8192)));
Val x250 = ((x249 + ((x117 - (x23 * x57)) * Val(16384))) + ((x118 - (x26 * x60)) * Val(32768)));
Val x251 = ((x119 - (x29 * x63)) + ((x120 - (x32 * x66)) * Val(2)));
Val x252 = ((x251 + ((x121 - (x35 * x69)) * Val(4))) + ((x122 - (x38 * x72)) * Val(8)));
Val x253 = ((x252 + ((x123 - (x41 * x75)) * Val(16))) + ((x124 - (x44 * x78)) * Val(32)));
Val x254 = ((x253 + ((x125 - (x47 * x81)) * Val(64))) + ((x126 - (x50 * x84)) * Val(128)));
Val x255 = ((x254 + ((x127 - (x53 * x87)) * Val(256))) + ((x128 - (x56 * x90)) * Val(512)));
Val x256 = ((x255 + ((x129 - (x59 * x93)) * Val(1024))) + ((x130 - (x62 * x96)) * Val(2048)));
Val x257 = ((x256 + ((x131 - (x65 * x99)) * Val(4096))) + ((x132 - (x68 * arg6.w[15]._super._super)) * Val(8192)));
Val x258 = ((x257 + ((x133 - (x71 * arg6.w[16]._super._super)) * Val(16384))) + ((x134 - (x74 * arg6.w[17]._super._super)) * Val(32768)));
Val x259 = ((x201 - (x202 * x137)) + ((x203 - (x204 * x140)) * Val(2)));
Val x260 = ((x259 + ((x205 - (x136 * x143)) * Val(4))) + ((x206 - (x139 * x146)) * Val(8)));
Val x261 = ((x260 + ((x207 - (x142 * x149)) * Val(16))) + ((x208 - (x145 * x152)) * Val(32)));
Val x262 = ((x261 + ((x209 - (x148 * x155)) * Val(64))) + ((x210 - (x151 * x158)) * Val(128)));
Val x263 = ((x262 + ((x211 - (x154 * x161)) * Val(256))) + ((x212 - (x157 * x164)) * Val(512)));
Val x264 = ((x263 + ((x213 - (x160 * x167)) * Val(1024))) + ((x214 - (x163 * x170)) * Val(2048)));
Val x265 = ((x264 + ((x215 - (x166 * x173)) * Val(4096))) + ((x216 - (x169 * x176)) * Val(8192)));
Val x266 = ((x265 + ((x217 - (x172 * x179)) * Val(16384))) + ((x218 - (x175 * x182)) * Val(32768)));
Val x267 = ((x219 - (x178 * x185)) + ((x220 - (x181 * x188)) * Val(2)));
Val x268 = ((x267 + ((x221 - (x184 * x191)) * Val(4))) + ((x222 - (x187 * x194)) * Val(8)));
Val x269 = ((x268 + ((x223 - (x190 * x197)) * Val(16))) + ((x224 - (x193 * x200)) * Val(32)));
Val x270 = ((x269 + ((x225 - (x196 * arg2_0.w[9]._super._super)) * Val(64))) + ((x226 - (x199 * arg2_0.w[10]._super._super)) * Val(128)));
Val x271 = ((x270 + ((x227 - (x228 * arg2_0.w[11]._super._super)) * Val(256))) + ((x229 - (x230 * arg2_0.w[12]._super._super)) * Val(512)));
Val x272 = ((x271 + ((x231 - (x232 * arg2_0.w[13]._super._super)) * Val(1024))) + ((x233 - (x234 * arg2_0.w[14]._super._super)) * Val(2048)));
Val x273 = ((x272 + ((x235 - (x236 * arg2_0.w[15]._super._super)) * Val(4096))) + ((x237 - (x238 * arg2_0.w[16]._super._super)) * Val(8192)));
Val x274 = ((x273 + ((x239 - (x240 * arg2_0.w[17]._super._super)) * Val(16384))) + ((x241 - (x242 * arg2_0.w[18]._super._super)) * Val(32768)));
// builtin Mul
Val x275 = (arg7.w[1]._super._super * Val(2));
Val x276 = (arg7.w[2]._super._super * Val(4));
Val x277 = (arg7.w[3]._super._super * Val(8));
Val x278 = (arg7.w[4]._super._super * Val(16));
Val x279 = (arg7.w[5]._super._super * Val(32));
Val x280 = (arg7.w[6]._super._super * Val(64));
Val x281 = (arg7.w[7]._super._super * Val(128));
Val x282 = (arg7.w[8]._super._super * Val(256));
Val x283 = (arg7.w[9]._super._super * Val(512));
Val x284 = (arg7.w[10]._super._super * Val(1024));
Val x285 = (arg7.w[11]._super._super * Val(2048));
Val x286 = (arg7.w[12]._super._super * Val(4096));
Val x287 = (arg7.w[13]._super._super * Val(8192));
Val x288 = (arg7.w[14]._super._super * Val(16384));
Val x289 = (arg7.w[15]._super._super * Val(32768));
// builtin Add
Val x290 = (arg7.w[0]._super._super + x275);
Val x291 = (((x290 + x276) + x277) + x278);
Val x292 = (((x291 + x279) + x280) + x281);
Val x293 = (((x292 + x282) + x283) + x284);
Val x294 = (((x293 + x285) + x286) + x287);
// builtin Mul
Val x295 = (arg7.w[17]._super._super * Val(2));
Val x296 = (arg7.w[18]._super._super * Val(4));
Val x297 = (arg7.w[19]._super._super * Val(8));
Val x298 = (arg7.w[20]._super._super * Val(16));
Val x299 = (arg7.w[21]._super._super * Val(32));
Val x300 = (arg7.w[22]._super._super * Val(64));
Val x301 = (arg7.w[23]._super._super * Val(128));
Val x302 = (arg7.w[24]._super._super * Val(256));
Val x303 = (arg7.w[25]._super._super * Val(512));
Val x304 = (arg7.w[26]._super._super * Val(1024));
Val x305 = (arg7.w[27]._super._super * Val(2048));
Val x306 = (arg7.w[28]._super._super * Val(4096));
Val x307 = (arg7.w[29]._super._super * Val(8192));
Val x308 = (arg7.w[30]._super._super * Val(16384));
Val x309 = (arg7.w[31]._super._super * Val(32768));
// builtin Add
Val x310 = (arg7.w[16]._super._super + x295);
Val x311 = (((x310 + x296) + x297) + x298);
Val x312 = (((x311 + x299) + x300) + x301);
Val x313 = (((x312 + x302) + x303) + x304);
Val x314 = (((x313 + x305) + x306) + x307);
// builtin Mul
Val x315 = (arg5.w[1]._super._super * Val(2));
Val x316 = (arg5.w[2]._super._super * Val(4));
Val x317 = (arg5.w[3]._super._super * Val(8));
Val x318 = (arg5.w[4]._super._super * Val(16));
Val x319 = (arg5.w[5]._super._super * Val(32));
Val x320 = (arg5.w[6]._super._super * Val(64));
Val x321 = (arg5.w[7]._super._super * Val(128));
Val x322 = (arg5.w[8]._super._super * Val(256));
Val x323 = (arg5.w[9]._super._super * Val(512));
Val x324 = (arg5.w[10]._super._super * Val(1024));
Val x325 = (arg5.w[11]._super._super * Val(2048));
Val x326 = (arg5.w[12]._super._super * Val(4096));
Val x327 = (arg5.w[13]._super._super * Val(8192));
Val x328 = (arg5.w[14]._super._super * Val(16384));
Val x329 = (arg5.w[15]._super._super * Val(32768));
// builtin Add
Val x330 = (arg5.w[0]._super._super + x315);
Val x331 = (((x330 + x316) + x317) + x318);
Val x332 = (((x331 + x319) + x320) + x321);
Val x333 = (((x332 + x322) + x323) + x324);
Val x334 = (((x333 + x325) + x326) + x327);
// builtin Mul
Val x335 = (arg5.w[17]._super._super * Val(2));
Val x336 = (arg5.w[18]._super._super * Val(4));
Val x337 = (arg5.w[19]._super._super * Val(8));
Val x338 = (arg5.w[20]._super._super * Val(16));
Val x339 = (arg5.w[21]._super._super * Val(32));
Val x340 = (arg5.w[22]._super._super * Val(64));
Val x341 = (arg5.w[23]._super._super * Val(128));
Val x342 = (arg5.w[24]._super._super * Val(256));
Val x343 = (arg5.w[25]._super._super * Val(512));
Val x344 = (arg5.w[26]._super._super * Val(1024));
Val x345 = (arg5.w[27]._super._super * Val(2048));
Val x346 = (arg5.w[28]._super._super * Val(4096));
Val x347 = (arg5.w[29]._super._super * Val(8192));
Val x348 = (arg5.w[30]._super._super * Val(16384));
Val x349 = (arg5.w[31]._super._super * Val(32768));
// builtin Add
Val x350 = (arg5.w[16]._super._super + x335);
Val x351 = (((x350 + x336) + x337) + x338);
Val x352 = (((x351 + x339) + x340) + x341);
Val x353 = (((x352 + x342) + x343) + x344);
Val x354 = (((x353 + x345) + x346) + x347);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x355 = (((x294 + x288) + x289) + ((x334 + x328) + x329));
Val x356 = (((x314 + x308) + x309) + ((x354 + x348) + x349));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:166)
UnpackReg_32__16_Struct x357 = exec_CarryAndExpand(ctx,Val2Array{(x250 + (x266 + x355)), (x258 + (x274 + x356))}, LAYOUT_LOOKUP(layout8, wBits));
// builtin Add
// BitXor(zirgen/circuit/rv32im/v2/dsl/bits.zir:51)
// XorU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:10)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:96)
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:167)
Val x358 = (arg1_0.a[13]._super._super + arg1_0.a[22]._super._super);
// builtin Mul
Val x359 = (arg1_0.a[13]._super._super * Val(2));
// builtin Sub
Val x360 = (x358 - (x359 * arg1_0.a[22]._super._super));
// builtin Add
Val x361 = (arg1_0.a[14]._super._super + arg1_0.a[23]._super._super);
// builtin Mul
Val x362 = (arg1_0.a[14]._super._super * Val(2));
// builtin Sub
Val x363 = (x361 - (x362 * arg1_0.a[23]._super._super));
// builtin Add
Val x364 = (arg1_0.a[15]._super._super + arg1_0.a[24]._super._super);
// builtin Mul
Val x365 = (arg1_0.a[15]._super._super * Val(2));
// builtin Sub
Val x366 = (x364 - (x365 * arg1_0.a[24]._super._super));
// builtin Add
Val x367 = (arg1_0.a[16]._super._super + arg1_0.a[25]._super._super);
// builtin Mul
Val x368 = (arg1_0.a[16]._super._super * Val(2));
// builtin Sub
Val x369 = (x367 - (x368 * arg1_0.a[25]._super._super));
// builtin Add
Val x370 = (arg1_0.a[17]._super._super + arg1_0.a[26]._super._super);
// builtin Mul
Val x371 = (arg1_0.a[17]._super._super * Val(2));
// builtin Sub
Val x372 = (x370 - (x371 * arg1_0.a[26]._super._super));
// builtin Add
Val x373 = (arg1_0.a[18]._super._super + arg1_0.a[27]._super._super);
// builtin Mul
Val x374 = (arg1_0.a[18]._super._super * Val(2));
// builtin Sub
Val x375 = (x373 - (x374 * arg1_0.a[27]._super._super));
// builtin Add
Val x376 = (arg1_0.a[19]._super._super + arg1_0.a[28]._super._super);
// builtin Mul
Val x377 = (arg1_0.a[19]._super._super * Val(2));
// builtin Sub
Val x378 = (x376 - (x377 * arg1_0.a[28]._super._super));
// builtin Add
Val x379 = (arg1_0.a[20]._super._super + arg1_0.a[29]._super._super);
// builtin Mul
Val x380 = (arg1_0.a[20]._super._super * Val(2));
// builtin Sub
Val x381 = (x379 - (x380 * arg1_0.a[29]._super._super));
// builtin Add
Val x382 = (arg1_0.a[21]._super._super + arg1_0.a[30]._super._super);
// builtin Mul
Val x383 = (arg1_0.a[21]._super._super * Val(2));
// builtin Sub
Val x384 = (x382 - (x383 * arg1_0.a[30]._super._super));
// builtin Add
Val x385 = (arg1_0.a[22]._super._super + arg1_0.a[31]._super._super);
// builtin Mul
Val x386 = (arg1_0.a[22]._super._super * Val(2));
// builtin Sub
Val x387 = (x385 - (x386 * arg1_0.a[31]._super._super));
// builtin Add
Val x388 = (arg1_0.a[23]._super._super + arg1_0.a[0]._super._super);
// builtin Mul
Val x389 = (arg1_0.a[23]._super._super * Val(2));
// builtin Sub
Val x390 = (x388 - (x389 * arg1_0.a[0]._super._super));
// builtin Add
Val x391 = (arg1_0.a[24]._super._super + arg1_0.a[1]._super._super);
// builtin Mul
Val x392 = (arg1_0.a[24]._super._super * Val(2));
// builtin Sub
Val x393 = (x391 - (x392 * arg1_0.a[1]._super._super));
// builtin Add
Val x394 = (arg1_0.a[25]._super._super + arg1_0.a[2]._super._super);
// builtin Mul
Val x395 = (arg1_0.a[25]._super._super * Val(2));
// builtin Sub
Val x396 = (x394 - (x395 * arg1_0.a[2]._super._super));
// builtin Add
Val x397 = (arg1_0.a[26]._super._super + arg1_0.a[3]._super._super);
// builtin Mul
Val x398 = (arg1_0.a[26]._super._super * Val(2));
// builtin Sub
Val x399 = (x397 - (x398 * arg1_0.a[3]._super._super));
// builtin Add
Val x400 = (arg1_0.a[27]._super._super + arg1_0.a[4]._super._super);
// builtin Mul
Val x401 = (arg1_0.a[27]._super._super * Val(2));
// builtin Sub
Val x402 = (x400 - (x401 * arg1_0.a[4]._super._super));
// builtin Add
Val x403 = (arg1_0.a[28]._super._super + arg1_0.a[5]._super._super);
// builtin Mul
Val x404 = (arg1_0.a[28]._super._super * Val(2));
// builtin Sub
Val x405 = (x403 - (x404 * arg1_0.a[5]._super._super));
// builtin Add
Val x406 = (arg1_0.a[29]._super._super + arg1_0.a[6]._super._super);
// builtin Mul
Val x407 = (arg1_0.a[29]._super._super * Val(2));
// builtin Sub
Val x408 = (x406 - (x407 * arg1_0.a[6]._super._super));
// builtin Add
Val x409 = (arg1_0.a[30]._super._super + arg1_0.a[7]._super._super);
// builtin Mul
Val x410 = (arg1_0.a[30]._super._super * Val(2));
// builtin Sub
Val x411 = (x409 - (x410 * arg1_0.a[7]._super._super));
// builtin Add
Val x412 = (arg1_0.a[31]._super._super + arg1_0.a[8]._super._super);
// builtin Mul
Val x413 = (arg1_0.a[31]._super._super * Val(2));
// builtin Sub
Val x414 = (x412 - (x413 * arg1_0.a[8]._super._super));
// builtin Add
Val x415 = (arg1_0.a[0]._super._super + arg1_0.a[9]._super._super);
// builtin Mul
Val x416 = (arg1_0.a[0]._super._super * Val(2));
// builtin Sub
Val x417 = (x415 - (x416 * arg1_0.a[9]._super._super));
// builtin Add
Val x418 = (arg1_0.a[1]._super._super + arg1_0.a[10]._super._super);
// builtin Mul
Val x419 = (arg1_0.a[1]._super._super * Val(2));
// builtin Sub
Val x420 = (x418 - (x419 * arg1_0.a[10]._super._super));
// builtin Add
Val x421 = (arg1_0.a[2]._super._super + arg1_0.a[11]._super._super);
// builtin Mul
Val x422 = (arg1_0.a[2]._super._super * Val(2));
// builtin Sub
Val x423 = (x421 - (x422 * arg1_0.a[11]._super._super));
// builtin Add
Val x424 = (arg1_0.a[3]._super._super + arg1_0.a[12]._super._super);
// builtin Mul
Val x425 = (arg1_0.a[3]._super._super * Val(2));
// builtin Sub
Val x426 = (x424 - (x425 * arg1_0.a[12]._super._super));
// builtin Add
Val x427 = (arg1_0.a[4]._super._super + arg1_0.a[13]._super._super);
// builtin Mul
Val x428 = (arg1_0.a[4]._super._super * Val(2));
// builtin Sub
Val x429 = (x427 - (x428 * arg1_0.a[13]._super._super));
// builtin Add
Val x430 = (arg1_0.a[5]._super._super + arg1_0.a[14]._super._super);
// builtin Mul
Val x431 = (arg1_0.a[5]._super._super * Val(2));
// builtin Sub
Val x432 = (x430 - (x431 * arg1_0.a[14]._super._super));
// builtin Add
Val x433 = (arg1_0.a[6]._super._super + arg1_0.a[15]._super._super);
// builtin Mul
Val x434 = (arg1_0.a[6]._super._super * Val(2));
// builtin Sub
Val x435 = (x433 - (x434 * arg1_0.a[15]._super._super));
// builtin Add
Val x436 = (arg1_0.a[7]._super._super + arg1_0.a[16]._super._super);
// builtin Mul
Val x437 = (arg1_0.a[7]._super._super * Val(2));
// builtin Sub
Val x438 = (x436 - (x437 * arg1_0.a[16]._super._super));
// builtin Add
Val x439 = (arg1_0.a[8]._super._super + arg1_0.a[17]._super._super);
// builtin Mul
Val x440 = (arg1_0.a[8]._super._super * Val(2));
// builtin Sub
Val x441 = (x439 - (x440 * arg1_0.a[17]._super._super));
// builtin Add
Val x442 = (arg1_0.a[9]._super._super + arg1_0.a[18]._super._super);
// builtin Mul
Val x443 = (arg1_0.a[9]._super._super * Val(2));
// builtin Sub
Val x444 = (x442 - (x443 * arg1_0.a[18]._super._super));
// builtin Add
Val x445 = (arg1_0.a[10]._super._super + arg1_0.a[19]._super._super);
// builtin Mul
Val x446 = (arg1_0.a[10]._super._super * Val(2));
// builtin Sub
Val x447 = (x445 - (x446 * arg1_0.a[19]._super._super));
// builtin Add
Val x448 = (arg1_0.a[11]._super._super + arg1_0.a[20]._super._super);
// builtin Mul
Val x449 = (arg1_0.a[11]._super._super * Val(2));
// builtin Sub
Val x450 = (x448 - (x449 * arg1_0.a[20]._super._super));
// builtin Add
Val x451 = (arg1_0.a[12]._super._super + arg1_0.a[21]._super._super);
// builtin Mul
Val x452 = (arg1_0.a[12]._super._super * Val(2));
// builtin Sub
Val x453 = (x451 - (x452 * arg1_0.a[21]._super._super));
// builtin Add
Val x454 = (arg1_0.a[2]._super._super + x360);
Val x455 = (arg1_0.a[3]._super._super + x363);
Val x456 = (arg1_0.a[4]._super._super + x366);
Val x457 = (arg1_0.a[5]._super._super + x369);
Val x458 = (arg1_0.a[6]._super._super + x372);
Val x459 = (arg1_0.a[7]._super._super + x375);
Val x460 = (arg1_0.a[8]._super._super + x378);
Val x461 = (arg1_0.a[9]._super._super + x381);
Val x462 = (arg1_0.a[10]._super._super + x384);
Val x463 = (arg1_0.a[11]._super._super + x387);
Val x464 = (arg1_0.a[12]._super._super + x390);
Val x465 = (arg1_0.a[13]._super._super + x393);
Val x466 = (arg1_0.a[14]._super._super + x396);
Val x467 = (arg1_0.a[15]._super._super + x399);
Val x468 = (arg1_0.a[16]._super._super + x402);
Val x469 = (arg1_0.a[17]._super._super + x405);
Val x470 = (arg1_0.a[18]._super._super + x408);
Val x471 = (arg1_0.a[19]._super._super + x411);
Val x472 = (arg1_0.a[20]._super._super + x414);
Val x473 = (arg1_0.a[21]._super._super + x417);
Val x474 = (arg1_0.a[22]._super._super + x420);
Val x475 = (arg1_0.a[23]._super._super + x423);
Val x476 = (arg1_0.a[24]._super._super + x426);
Val x477 = (arg1_0.a[25]._super._super + x429);
Val x478 = (arg1_0.a[26]._super._super + x432);
Val x479 = (arg1_0.a[27]._super._super + x435);
Val x480 = (arg1_0.a[28]._super._super + x438);
Val x481 = (arg1_0.a[29]._super._super + x441);
Val x482 = (arg1_0.a[30]._super._super + x444);
Val x483 = (arg1_0.a[31]._super._super + x447);
Val x484 = (arg1_0.a[0]._super._super + x450);
Val x485 = (arg1_0.a[1]._super._super + x453);
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:97)
Val x486 = (arg1_0.e[11]._super._super + arg1_0.e[25]._super._super);
// builtin Mul
Val x487 = (arg1_0.e[11]._super._super * Val(2));
// builtin Sub
Val x488 = (x486 - (x487 * arg1_0.e[25]._super._super));
// builtin Add
Val x489 = (arg1_0.e[12]._super._super + arg1_0.e[26]._super._super);
// builtin Mul
Val x490 = (arg1_0.e[12]._super._super * Val(2));
// builtin Sub
Val x491 = (x489 - (x490 * arg1_0.e[26]._super._super));
// builtin Add
Val x492 = (arg1_0.e[13]._super._super + arg1_0.e[27]._super._super);
// builtin Mul
Val x493 = (arg1_0.e[13]._super._super * Val(2));
// builtin Sub
Val x494 = (x492 - (x493 * arg1_0.e[27]._super._super));
// builtin Add
Val x495 = (arg1_0.e[14]._super._super + arg1_0.e[28]._super._super);
// builtin Mul
Val x496 = (arg1_0.e[14]._super._super * Val(2));
// builtin Sub
Val x497 = (x495 - (x496 * arg1_0.e[28]._super._super));
// builtin Add
Val x498 = (arg1_0.e[15]._super._super + arg1_0.e[29]._super._super);
// builtin Mul
Val x499 = (arg1_0.e[15]._super._super * Val(2));
// builtin Sub
Val x500 = (x498 - (x499 * arg1_0.e[29]._super._super));
// builtin Add
Val x501 = (arg1_0.e[16]._super._super + arg1_0.e[30]._super._super);
// builtin Mul
Val x502 = (arg1_0.e[16]._super._super * Val(2));
// builtin Sub
Val x503 = (x501 - (x502 * arg1_0.e[30]._super._super));
// builtin Add
Val x504 = (arg1_0.e[17]._super._super + arg1_0.e[31]._super._super);
// builtin Mul
Val x505 = (arg1_0.e[17]._super._super * Val(2));
// builtin Sub
Val x506 = (x504 - (x505 * arg1_0.e[31]._super._super));
// builtin Add
Val x507 = (arg1_0.e[18]._super._super + arg1_0.e[0]._super._super);
// builtin Mul
Val x508 = (arg1_0.e[18]._super._super * Val(2));
// builtin Sub
Val x509 = (x507 - (x508 * arg1_0.e[0]._super._super));
// builtin Add
Val x510 = (arg1_0.e[19]._super._super + arg1_0.e[1]._super._super);
// builtin Mul
Val x511 = (arg1_0.e[19]._super._super * Val(2));
// builtin Sub
Val x512 = (x510 - (x511 * arg1_0.e[1]._super._super));
// builtin Add
Val x513 = (arg1_0.e[20]._super._super + arg1_0.e[2]._super._super);
// builtin Mul
Val x514 = (arg1_0.e[20]._super._super * Val(2));
// builtin Sub
Val x515 = (x513 - (x514 * arg1_0.e[2]._super._super));
// builtin Add
Val x516 = (arg1_0.e[21]._super._super + arg1_0.e[3]._super._super);
// builtin Mul
Val x517 = (arg1_0.e[21]._super._super * Val(2));
// builtin Sub
Val x518 = (x516 - (x517 * arg1_0.e[3]._super._super));
// builtin Add
Val x519 = (arg1_0.e[22]._super._super + arg1_0.e[4]._super._super);
// builtin Mul
Val x520 = (arg1_0.e[22]._super._super * Val(2));
// builtin Sub
Val x521 = (x519 - (x520 * arg1_0.e[4]._super._super));
// builtin Add
Val x522 = (arg1_0.e[23]._super._super + arg1_0.e[5]._super._super);
// builtin Mul
Val x523 = (arg1_0.e[23]._super._super * Val(2));
// builtin Sub
Val x524 = (x522 - (x523 * arg1_0.e[5]._super._super));
// builtin Add
Val x525 = (arg1_0.e[24]._super._super + arg1_0.e[6]._super._super);
// builtin Mul
Val x526 = (arg1_0.e[24]._super._super * Val(2));
// builtin Sub
Val x527 = (x525 - (x526 * arg1_0.e[6]._super._super));
// builtin Add
Val x528 = (arg1_0.e[25]._super._super + arg1_0.e[7]._super._super);
// builtin Mul
Val x529 = (arg1_0.e[25]._super._super * Val(2));
// builtin Sub
Val x530 = (x528 - (x529 * arg1_0.e[7]._super._super));
// builtin Add
Val x531 = (arg1_0.e[26]._super._super + arg1_0.e[8]._super._super);
// builtin Mul
Val x532 = (arg1_0.e[26]._super._super * Val(2));
// builtin Sub
Val x533 = (x531 - (x532 * arg1_0.e[8]._super._super));
// builtin Add
Val x534 = (arg1_0.e[27]._super._super + arg1_0.e[9]._super._super);
// builtin Mul
Val x535 = (arg1_0.e[27]._super._super * Val(2));
// builtin Sub
Val x536 = (x534 - (x535 * arg1_0.e[9]._super._super));
// builtin Add
Val x537 = (arg1_0.e[28]._super._super + arg1_0.e[10]._super._super);
// builtin Mul
Val x538 = (arg1_0.e[28]._super._super * Val(2));
// builtin Sub
Val x539 = (x537 - (x538 * arg1_0.e[10]._super._super));
// builtin Add
Val x540 = (arg1_0.e[29]._super._super + arg1_0.e[11]._super._super);
// builtin Mul
Val x541 = (arg1_0.e[29]._super._super * Val(2));
// builtin Sub
Val x542 = (x540 - (x541 * arg1_0.e[11]._super._super));
// builtin Add
Val x543 = (arg1_0.e[30]._super._super + arg1_0.e[12]._super._super);
// builtin Mul
Val x544 = (arg1_0.e[30]._super._super * Val(2));
// builtin Sub
Val x545 = (x543 - (x544 * arg1_0.e[12]._super._super));
// builtin Add
Val x546 = (arg1_0.e[31]._super._super + arg1_0.e[13]._super._super);
// builtin Mul
Val x547 = (arg1_0.e[31]._super._super * Val(2));
// builtin Sub
Val x548 = (x546 - (x547 * arg1_0.e[13]._super._super));
// builtin Add
Val x549 = (arg1_0.e[0]._super._super + arg1_0.e[14]._super._super);
// builtin Mul
Val x550 = (arg1_0.e[0]._super._super * Val(2));
// builtin Sub
Val x551 = (x549 - (x550 * arg1_0.e[14]._super._super));
// builtin Add
Val x552 = (arg1_0.e[1]._super._super + arg1_0.e[15]._super._super);
// builtin Mul
Val x553 = (arg1_0.e[1]._super._super * Val(2));
// builtin Sub
Val x554 = (x552 - (x553 * arg1_0.e[15]._super._super));
// builtin Add
Val x555 = (arg1_0.e[2]._super._super + arg1_0.e[16]._super._super);
// builtin Mul
Val x556 = (arg1_0.e[2]._super._super * Val(2));
// builtin Sub
Val x557 = (x555 - (x556 * arg1_0.e[16]._super._super));
// builtin Add
Val x558 = (arg1_0.e[3]._super._super + arg1_0.e[17]._super._super);
// builtin Mul
Val x559 = (arg1_0.e[3]._super._super * Val(2));
// builtin Sub
Val x560 = (x558 - (x559 * arg1_0.e[17]._super._super));
// builtin Add
Val x561 = (arg1_0.e[4]._super._super + arg1_0.e[18]._super._super);
// builtin Mul
Val x562 = (arg1_0.e[4]._super._super * Val(2));
// builtin Sub
Val x563 = (x561 - (x562 * arg1_0.e[18]._super._super));
// builtin Add
Val x564 = (arg1_0.e[5]._super._super + arg1_0.e[19]._super._super);
// builtin Mul
Val x565 = (arg1_0.e[5]._super._super * Val(2));
// builtin Sub
Val x566 = (x564 - (x565 * arg1_0.e[19]._super._super));
// builtin Add
Val x567 = (arg1_0.e[6]._super._super + arg1_0.e[20]._super._super);
// builtin Mul
Val x568 = (arg1_0.e[6]._super._super * Val(2));
// builtin Sub
Val x569 = (x567 - (x568 * arg1_0.e[20]._super._super));
// builtin Add
Val x570 = (arg1_0.e[7]._super._super + arg1_0.e[21]._super._super);
// builtin Mul
Val x571 = (arg1_0.e[7]._super._super * Val(2));
// builtin Sub
Val x572 = (x570 - (x571 * arg1_0.e[21]._super._super));
// builtin Add
Val x573 = (arg1_0.e[8]._super._super + arg1_0.e[22]._super._super);
// builtin Mul
Val x574 = (arg1_0.e[8]._super._super * Val(2));
// builtin Sub
Val x575 = (x573 - (x574 * arg1_0.e[22]._super._super));
// builtin Add
Val x576 = (arg1_0.e[9]._super._super + arg1_0.e[23]._super._super);
// builtin Mul
Val x577 = (arg1_0.e[9]._super._super * Val(2));
// builtin Sub
Val x578 = (x576 - (x577 * arg1_0.e[23]._super._super));
// builtin Add
Val x579 = (arg1_0.e[10]._super._super + arg1_0.e[24]._super._super);
// builtin Mul
Val x580 = (arg1_0.e[10]._super._super * Val(2));
// builtin Sub
Val x581 = (x579 - (x580 * arg1_0.e[24]._super._super));
// builtin Add
Val x582 = (arg1_0.e[6]._super._super + x488);
Val x583 = (arg1_0.e[7]._super._super + x491);
Val x584 = (arg1_0.e[8]._super._super + x494);
Val x585 = (arg1_0.e[9]._super._super + x497);
Val x586 = (arg1_0.e[10]._super._super + x500);
Val x587 = (arg1_0.e[11]._super._super + x503);
Val x588 = (arg1_0.e[12]._super._super + x506);
Val x589 = (arg1_0.e[13]._super._super + x509);
Val x590 = (arg1_0.e[14]._super._super + x512);
Val x591 = (arg1_0.e[15]._super._super + x515);
Val x592 = (arg1_0.e[16]._super._super + x518);
Val x593 = (arg1_0.e[17]._super._super + x521);
Val x594 = (arg1_0.e[18]._super._super + x524);
Val x595 = (arg1_0.e[19]._super._super + x527);
Val x596 = (arg1_0.e[20]._super._super + x530);
Val x597 = (arg1_0.e[21]._super._super + x533);
Val x598 = (arg1_0.e[22]._super._super + x536);
Val x599 = (arg1_0.e[23]._super._super + x539);
Val x600 = (arg1_0.e[24]._super._super + x542);
Val x601 = (arg1_0.e[25]._super._super + x545);
Val x602 = (arg1_0.e[26]._super._super + x548);
Val x603 = (arg1_0.e[27]._super._super + x551);
Val x604 = (arg1_0.e[28]._super._super + x554);
Val x605 = (arg1_0.e[29]._super._super + x557);
Val x606 = (arg1_0.e[30]._super._super + x560);
Val x607 = (arg1_0.e[31]._super._super + x563);
Val x608 = (arg1_0.e[0]._super._super + x566);
Val x609 = (arg1_0.e[1]._super._super + x569);
Val x610 = (arg1_0.e[2]._super._super + x572);
Val x611 = (arg1_0.e[3]._super._super + x575);
Val x612 = (arg1_0.e[4]._super._super + x578);
Val x613 = (arg1_0.e[5]._super._super + x581);
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:98)
Val x614 = (x357._super[1]._super * Val(2));
Val x615 = (x357._super[2]._super * Val(4));
Val x616 = (x357._super[3]._super * Val(8));
Val x617 = (x357._super[4]._super * Val(16));
Val x618 = (x357._super[5]._super * Val(32));
Val x619 = (x357._super[6]._super * Val(64));
Val x620 = (x357._super[7]._super * Val(128));
Val x621 = (x357._super[8]._super * Val(256));
Val x622 = (x357._super[9]._super * Val(512));
Val x623 = (x357._super[10]._super * Val(1024));
Val x624 = (x357._super[11]._super * Val(2048));
Val x625 = (x357._super[12]._super * Val(4096));
Val x626 = (x357._super[13]._super * Val(8192));
Val x627 = (x357._super[14]._super * Val(16384));
Val x628 = (x357._super[15]._super * Val(32768));
// builtin Add
Val x629 = (x357._super[0]._super + x614);
Val x630 = (((x629 + x615) + x616) + x617);
Val x631 = (((x630 + x618) + x619) + x620);
Val x632 = (((x631 + x621) + x622) + x623);
Val x633 = (((x632 + x624) + x625) + x626);
// builtin Mul
Val x634 = (x357._super[17]._super * Val(2));
Val x635 = (x357._super[18]._super * Val(4));
Val x636 = (x357._super[19]._super * Val(8));
Val x637 = (x357._super[20]._super * Val(16));
Val x638 = (x357._super[21]._super * Val(32));
Val x639 = (x357._super[22]._super * Val(64));
Val x640 = (x357._super[23]._super * Val(128));
Val x641 = (x357._super[24]._super * Val(256));
Val x642 = (x357._super[25]._super * Val(512));
Val x643 = (x357._super[26]._super * Val(1024));
Val x644 = (x357._super[27]._super * Val(2048));
Val x645 = (x357._super[28]._super * Val(4096));
Val x646 = (x357._super[29]._super * Val(8192));
Val x647 = (x357._super[30]._super * Val(16384));
Val x648 = (x357._super[31]._super * Val(32768));
// builtin Add
Val x649 = (x357._super[16]._super + x634);
Val x650 = (((x649 + x635) + x636) + x637);
Val x651 = (((x650 + x638) + x639) + x640);
Val x652 = (((x651 + x641) + x642) + x643);
Val x653 = (((x652 + x644) + x645) + x646);
// builtin Mul
Val x654 = (arg4.e[1]._super._super * Val(2));
Val x655 = (arg4.e[2]._super._super * Val(4));
Val x656 = (arg4.e[3]._super._super * Val(8));
Val x657 = (arg4.e[4]._super._super * Val(16));
Val x658 = (arg4.e[5]._super._super * Val(32));
Val x659 = (arg4.e[6]._super._super * Val(64));
Val x660 = (arg4.e[7]._super._super * Val(128));
Val x661 = (arg4.e[8]._super._super * Val(256));
Val x662 = (arg4.e[9]._super._super * Val(512));
Val x663 = (arg4.e[10]._super._super * Val(1024));
Val x664 = (arg4.e[11]._super._super * Val(2048));
Val x665 = (arg4.e[12]._super._super * Val(4096));
Val x666 = (arg4.e[13]._super._super * Val(8192));
Val x667 = (arg4.e[14]._super._super * Val(16384));
Val x668 = (arg4.e[15]._super._super * Val(32768));
// builtin Add
Val x669 = (arg4.e[0]._super._super + x654);
Val x670 = (((x669 + x655) + x656) + x657);
Val x671 = (((x670 + x658) + x659) + x660);
Val x672 = (((x671 + x661) + x662) + x663);
Val x673 = (((x672 + x664) + x665) + x666);
// builtin Mul
Val x674 = (arg4.e[17]._super._super * Val(2));
Val x675 = (arg4.e[18]._super._super * Val(4));
Val x676 = (arg4.e[19]._super._super * Val(8));
Val x677 = (arg4.e[20]._super._super * Val(16));
Val x678 = (arg4.e[21]._super._super * Val(32));
Val x679 = (arg4.e[22]._super._super * Val(64));
Val x680 = (arg4.e[23]._super._super * Val(128));
Val x681 = (arg4.e[24]._super._super * Val(256));
Val x682 = (arg4.e[25]._super._super * Val(512));
Val x683 = (arg4.e[26]._super._super * Val(1024));
Val x684 = (arg4.e[27]._super._super * Val(2048));
Val x685 = (arg4.e[28]._super._super * Val(4096));
Val x686 = (arg4.e[29]._super._super * Val(8192));
Val x687 = (arg4.e[30]._super._super * Val(16384));
Val x688 = (arg4.e[31]._super._super * Val(32768));
// builtin Add
Val x689 = (arg4.e[16]._super._super + x674);
Val x690 = (((x689 + x675) + x676) + x677);
Val x691 = (((x690 + x678) + x679) + x680);
Val x692 = (((x691 + x681) + x682) + x683);
Val x693 = (((x692 + x684) + x685) + x686);
// builtin Mul
// ChU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:25)
Val x694 = (arg1_0.e[0]._super._super * arg2_0.e[0]._super._super);
// builtin Sub
Val x695 = (Val(1) - arg1_0.e[0]._super._super);
// builtin Mul
Val x696 = (arg1_0.e[1]._super._super * arg2_0.e[1]._super._super);
// builtin Sub
Val x697 = (Val(1) - arg1_0.e[1]._super._super);
// builtin Mul
Val x698 = (arg1_0.e[2]._super._super * arg2_0.e[2]._super._super);
// builtin Sub
Val x699 = (Val(1) - arg1_0.e[2]._super._super);
// builtin Mul
Val x700 = (arg1_0.e[3]._super._super * arg2_0.e[3]._super._super);
// builtin Sub
Val x701 = (Val(1) - arg1_0.e[3]._super._super);
// builtin Mul
Val x702 = (arg1_0.e[4]._super._super * arg2_0.e[4]._super._super);
// builtin Sub
Val x703 = (Val(1) - arg1_0.e[4]._super._super);
// builtin Mul
Val x704 = (arg1_0.e[5]._super._super * arg2_0.e[5]._super._super);
// builtin Sub
Val x705 = (Val(1) - arg1_0.e[5]._super._super);
// builtin Mul
Val x706 = (arg1_0.e[6]._super._super * arg2_0.e[6]._super._super);
// builtin Sub
Val x707 = (Val(1) - arg1_0.e[6]._super._super);
// builtin Mul
Val x708 = (arg1_0.e[7]._super._super * arg2_0.e[7]._super._super);
// builtin Sub
Val x709 = (Val(1) - arg1_0.e[7]._super._super);
// builtin Mul
Val x710 = (arg1_0.e[8]._super._super * arg2_0.e[8]._super._super);
// builtin Sub
Val x711 = (Val(1) - arg1_0.e[8]._super._super);
// builtin Mul
Val x712 = (arg1_0.e[9]._super._super * arg2_0.e[9]._super._super);
// builtin Sub
Val x713 = (Val(1) - arg1_0.e[9]._super._super);
// builtin Mul
Val x714 = (arg1_0.e[10]._super._super * arg2_0.e[10]._super._super);
// builtin Sub
Val x715 = (Val(1) - arg1_0.e[10]._super._super);
// builtin Mul
Val x716 = (arg1_0.e[11]._super._super * arg2_0.e[11]._super._super);
// builtin Sub
Val x717 = (Val(1) - arg1_0.e[11]._super._super);
// builtin Mul
Val x718 = (arg1_0.e[12]._super._super * arg2_0.e[12]._super._super);
// builtin Sub
Val x719 = (Val(1) - arg1_0.e[12]._super._super);
// builtin Mul
Val x720 = (arg1_0.e[13]._super._super * arg2_0.e[13]._super._super);
// builtin Sub
Val x721 = (Val(1) - arg1_0.e[13]._super._super);
// builtin Mul
Val x722 = (arg1_0.e[14]._super._super * arg2_0.e[14]._super._super);
// builtin Sub
Val x723 = (Val(1) - arg1_0.e[14]._super._super);
// builtin Mul
Val x724 = (arg1_0.e[15]._super._super * arg2_0.e[15]._super._super);
// builtin Sub
Val x725 = (Val(1) - arg1_0.e[15]._super._super);
// builtin Mul
Val x726 = (arg1_0.e[16]._super._super * arg2_0.e[16]._super._super);
// builtin Sub
Val x727 = (Val(1) - arg1_0.e[16]._super._super);
// builtin Mul
Val x728 = (arg1_0.e[17]._super._super * arg2_0.e[17]._super._super);
// builtin Sub
Val x729 = (Val(1) - arg1_0.e[17]._super._super);
// builtin Mul
Val x730 = (arg1_0.e[18]._super._super * arg2_0.e[18]._super._super);
// builtin Sub
Val x731 = (Val(1) - arg1_0.e[18]._super._super);
// builtin Mul
Val x732 = (arg1_0.e[19]._super._super * arg2_0.e[19]._super._super);
// builtin Sub
Val x733 = (Val(1) - arg1_0.e[19]._super._super);
// builtin Mul
Val x734 = (arg1_0.e[20]._super._super * arg2_0.e[20]._super._super);
// builtin Sub
Val x735 = (Val(1) - arg1_0.e[20]._super._super);
// builtin Mul
Val x736 = (arg1_0.e[21]._super._super * arg2_0.e[21]._super._super);
// builtin Sub
Val x737 = (Val(1) - arg1_0.e[21]._super._super);
// builtin Mul
Val x738 = (arg1_0.e[22]._super._super * arg2_0.e[22]._super._super);
// builtin Sub
Val x739 = (Val(1) - arg1_0.e[22]._super._super);
// builtin Mul
Val x740 = (arg1_0.e[23]._super._super * arg2_0.e[23]._super._super);
// builtin Sub
Val x741 = (Val(1) - arg1_0.e[23]._super._super);
// builtin Mul
Val x742 = (arg1_0.e[24]._super._super * arg2_0.e[24]._super._super);
// builtin Sub
Val x743 = (Val(1) - arg1_0.e[24]._super._super);
// builtin Mul
Val x744 = (arg1_0.e[25]._super._super * arg2_0.e[25]._super._super);
// builtin Sub
Val x745 = (Val(1) - arg1_0.e[25]._super._super);
// builtin Mul
Val x746 = (arg1_0.e[26]._super._super * arg2_0.e[26]._super._super);
// builtin Sub
Val x747 = (Val(1) - arg1_0.e[26]._super._super);
// builtin Mul
Val x748 = (arg1_0.e[27]._super._super * arg2_0.e[27]._super._super);
// builtin Sub
Val x749 = (Val(1) - arg1_0.e[27]._super._super);
// builtin Mul
Val x750 = (arg1_0.e[28]._super._super * arg2_0.e[28]._super._super);
// builtin Sub
Val x751 = (Val(1) - arg1_0.e[28]._super._super);
// builtin Mul
Val x752 = (arg1_0.e[29]._super._super * arg2_0.e[29]._super._super);
// builtin Sub
Val x753 = (Val(1) - arg1_0.e[29]._super._super);
// builtin Mul
Val x754 = (arg1_0.e[30]._super._super * arg2_0.e[30]._super._super);
// builtin Sub
Val x755 = (Val(1) - arg1_0.e[30]._super._super);
// builtin Mul
Val x756 = (arg1_0.e[31]._super._super * arg2_0.e[31]._super._super);
// builtin Sub
Val x757 = (Val(1) - arg1_0.e[31]._super._super);
// builtin Add
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x758 = ((x694 + (x695 * arg3.e[0]._super._super)) + ((x696 + (x697 * arg3.e[1]._super._super)) * Val(2)));
Val x759 = ((x758 + ((x698 + (x699 * arg3.e[2]._super._super)) * Val(4))) + ((x700 + (x701 * arg3.e[3]._super._super)) * Val(8)));
Val x760 = ((x759 + ((x702 + (x703 * arg3.e[4]._super._super)) * Val(16))) + ((x704 + (x705 * arg3.e[5]._super._super)) * Val(32)));
Val x761 = ((x760 + ((x706 + (x707 * arg3.e[6]._super._super)) * Val(64))) + ((x708 + (x709 * arg3.e[7]._super._super)) * Val(128)));
Val x762 = ((x761 + ((x710 + (x711 * arg3.e[8]._super._super)) * Val(256))) + ((x712 + (x713 * arg3.e[9]._super._super)) * Val(512)));
Val x763 = ((x762 + ((x714 + (x715 * arg3.e[10]._super._super)) * Val(1024))) + ((x716 + (x717 * arg3.e[11]._super._super)) * Val(2048)));
Val x764 = ((x763 + ((x718 + (x719 * arg3.e[12]._super._super)) * Val(4096))) + ((x720 + (x721 * arg3.e[13]._super._super)) * Val(8192)));
Val x765 = ((x764 + ((x722 + (x723 * arg3.e[14]._super._super)) * Val(16384))) + ((x724 + (x725 * arg3.e[15]._super._super)) * Val(32768)));
Val x766 = ((x726 + (x727 * arg3.e[16]._super._super)) + ((x728 + (x729 * arg3.e[17]._super._super)) * Val(2)));
Val x767 = ((x766 + ((x730 + (x731 * arg3.e[18]._super._super)) * Val(4))) + ((x732 + (x733 * arg3.e[19]._super._super)) * Val(8)));
Val x768 = ((x767 + ((x734 + (x735 * arg3.e[20]._super._super)) * Val(16))) + ((x736 + (x737 * arg3.e[21]._super._super)) * Val(32)));
Val x769 = ((x768 + ((x738 + (x739 * arg3.e[22]._super._super)) * Val(64))) + ((x740 + (x741 * arg3.e[23]._super._super)) * Val(128)));
Val x770 = ((x769 + ((x742 + (x743 * arg3.e[24]._super._super)) * Val(256))) + ((x744 + (x745 * arg3.e[25]._super._super)) * Val(512)));
Val x771 = ((x770 + ((x746 + (x747 * arg3.e[26]._super._super)) * Val(1024))) + ((x748 + (x749 * arg3.e[27]._super._super)) * Val(2048)));
Val x772 = ((x771 + ((x750 + (x751 * arg3.e[28]._super._super)) * Val(4096))) + ((x752 + (x753 * arg3.e[29]._super._super)) * Val(8192)));
Val x773 = ((x772 + ((x754 + (x755 * arg3.e[30]._super._super)) * Val(16384))) + ((x756 + (x757 * arg3.e[31]._super._super)) * Val(32768)));
Val x774 = ((x582 - (x568 * x488)) + ((x583 - (x571 * x491)) * Val(2)));
Val x775 = ((x774 + ((x584 - (x574 * x494)) * Val(4))) + ((x585 - (x577 * x497)) * Val(8)));
Val x776 = ((x775 + ((x586 - (x580 * x500)) * Val(16))) + ((x587 - (x487 * x503)) * Val(32)));
Val x777 = ((x776 + ((x588 - (x490 * x506)) * Val(64))) + ((x589 - (x493 * x509)) * Val(128)));
Val x778 = ((x777 + ((x590 - (x496 * x512)) * Val(256))) + ((x591 - (x499 * x515)) * Val(512)));
Val x779 = ((x778 + ((x592 - (x502 * x518)) * Val(1024))) + ((x593 - (x505 * x521)) * Val(2048)));
Val x780 = ((x779 + ((x594 - (x508 * x524)) * Val(4096))) + ((x595 - (x511 * x527)) * Val(8192)));
Val x781 = ((x780 + ((x596 - (x514 * x530)) * Val(16384))) + ((x597 - (x517 * x533)) * Val(32768)));
Val x782 = ((x598 - (x520 * x536)) + ((x599 - (x523 * x539)) * Val(2)));
Val x783 = ((x782 + ((x600 - (x526 * x542)) * Val(4))) + ((x601 - (x529 * x545)) * Val(8)));
Val x784 = ((x783 + ((x602 - (x532 * x548)) * Val(16))) + ((x603 - (x535 * x551)) * Val(32)));
Val x785 = ((x784 + ((x604 - (x538 * x554)) * Val(64))) + ((x605 - (x541 * x557)) * Val(128)));
Val x786 = ((x785 + ((x606 - (x544 * x560)) * Val(256))) + ((x607 - (x547 * x563)) * Val(512)));
Val x787 = ((x786 + ((x608 - (x550 * x566)) * Val(1024))) + ((x609 - (x553 * x569)) * Val(2048)));
Val x788 = ((x787 + ((x610 - (x556 * x572)) * Val(4096))) + ((x611 - (x559 * x575)) * Val(8192)));
Val x789 = ((x788 + ((x612 - (x562 * x578)) * Val(16384))) + ((x613 - (x565 * x581)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x790 = (((x673 + x667) + x668) + (x765 + x781));
Val x791 = (((x693 + x687) + x688) + (x773 + x789));
Val x792 = (x12._super.low + x790);
Val x793 = (x12._super.high + x791);
Val x794 = (((x633 + x627) + x628) + x792);
Val x795 = (((x653 + x647) + x648) + x793);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:99)
Val x796 = (arg1_0.a[0]._super._super * arg2_0.a[0]._super._super);
// builtin Sub
Val x797 = (Val(1) - arg3.a[0]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x798 = (Val(1) - arg2_0.a[0]._super._super);
// builtin Mul
Val x799 = (arg1_0.a[0]._super._super * x798);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x800 = (Val(1) - arg1_0.a[0]._super._super);
// builtin Mul
Val x801 = ((x800 * arg2_0.a[0]._super._super) * arg3.a[0]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x802 = (((x796 * x797) + (x799 * arg3.a[0]._super._super)) + x801);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x803 = (arg1_0.a[1]._super._super * arg2_0.a[1]._super._super);
// builtin Sub
Val x804 = (Val(1) - arg3.a[1]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x805 = (Val(1) - arg2_0.a[1]._super._super);
// builtin Mul
Val x806 = (arg1_0.a[1]._super._super * x805);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x807 = (Val(1) - arg1_0.a[1]._super._super);
// builtin Mul
Val x808 = ((x807 * arg2_0.a[1]._super._super) * arg3.a[1]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x809 = (((x803 * x804) + (x806 * arg3.a[1]._super._super)) + x808);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x810 = (arg1_0.a[2]._super._super * arg2_0.a[2]._super._super);
// builtin Sub
Val x811 = (Val(1) - arg3.a[2]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x812 = (Val(1) - arg2_0.a[2]._super._super);
// builtin Mul
Val x813 = (arg1_0.a[2]._super._super * x812);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x814 = (Val(1) - arg1_0.a[2]._super._super);
// builtin Mul
Val x815 = ((x814 * arg2_0.a[2]._super._super) * arg3.a[2]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x816 = (((x810 * x811) + (x813 * arg3.a[2]._super._super)) + x815);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x817 = (arg1_0.a[3]._super._super * arg2_0.a[3]._super._super);
// builtin Sub
Val x818 = (Val(1) - arg3.a[3]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x819 = (Val(1) - arg2_0.a[3]._super._super);
// builtin Mul
Val x820 = (arg1_0.a[3]._super._super * x819);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x821 = (Val(1) - arg1_0.a[3]._super._super);
// builtin Mul
Val x822 = ((x821 * arg2_0.a[3]._super._super) * arg3.a[3]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x823 = (((x817 * x818) + (x820 * arg3.a[3]._super._super)) + x822);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x824 = (arg1_0.a[4]._super._super * arg2_0.a[4]._super._super);
// builtin Sub
Val x825 = (Val(1) - arg3.a[4]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x826 = (Val(1) - arg2_0.a[4]._super._super);
// builtin Mul
Val x827 = (arg1_0.a[4]._super._super * x826);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x828 = (Val(1) - arg1_0.a[4]._super._super);
// builtin Mul
Val x829 = ((x828 * arg2_0.a[4]._super._super) * arg3.a[4]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x830 = (((x824 * x825) + (x827 * arg3.a[4]._super._super)) + x829);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x831 = (arg1_0.a[5]._super._super * arg2_0.a[5]._super._super);
// builtin Sub
Val x832 = (Val(1) - arg3.a[5]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x833 = (Val(1) - arg2_0.a[5]._super._super);
// builtin Mul
Val x834 = (arg1_0.a[5]._super._super * x833);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x835 = (Val(1) - arg1_0.a[5]._super._super);
// builtin Mul
Val x836 = ((x835 * arg2_0.a[5]._super._super) * arg3.a[5]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x837 = (((x831 * x832) + (x834 * arg3.a[5]._super._super)) + x836);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x838 = (arg1_0.a[6]._super._super * arg2_0.a[6]._super._super);
// builtin Sub
Val x839 = (Val(1) - arg3.a[6]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x840 = (Val(1) - arg2_0.a[6]._super._super);
// builtin Mul
Val x841 = (arg1_0.a[6]._super._super * x840);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x842 = (Val(1) - arg1_0.a[6]._super._super);
// builtin Mul
Val x843 = ((x842 * arg2_0.a[6]._super._super) * arg3.a[6]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x844 = (((x838 * x839) + (x841 * arg3.a[6]._super._super)) + x843);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x845 = (arg1_0.a[7]._super._super * arg2_0.a[7]._super._super);
// builtin Sub
Val x846 = (Val(1) - arg3.a[7]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x847 = (Val(1) - arg2_0.a[7]._super._super);
// builtin Mul
Val x848 = (arg1_0.a[7]._super._super * x847);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x849 = (Val(1) - arg1_0.a[7]._super._super);
// builtin Mul
Val x850 = ((x849 * arg2_0.a[7]._super._super) * arg3.a[7]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x851 = (((x845 * x846) + (x848 * arg3.a[7]._super._super)) + x850);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x852 = (arg1_0.a[8]._super._super * arg2_0.a[8]._super._super);
// builtin Sub
Val x853 = (Val(1) - arg3.a[8]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x854 = (Val(1) - arg2_0.a[8]._super._super);
// builtin Mul
Val x855 = (arg1_0.a[8]._super._super * x854);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x856 = (Val(1) - arg1_0.a[8]._super._super);
// builtin Mul
Val x857 = ((x856 * arg2_0.a[8]._super._super) * arg3.a[8]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x858 = (((x852 * x853) + (x855 * arg3.a[8]._super._super)) + x857);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x859 = (arg1_0.a[9]._super._super * arg2_0.a[9]._super._super);
// builtin Sub
Val x860 = (Val(1) - arg3.a[9]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x861 = (Val(1) - arg2_0.a[9]._super._super);
// builtin Mul
Val x862 = (arg1_0.a[9]._super._super * x861);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x863 = (Val(1) - arg1_0.a[9]._super._super);
// builtin Mul
Val x864 = ((x863 * arg2_0.a[9]._super._super) * arg3.a[9]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x865 = (((x859 * x860) + (x862 * arg3.a[9]._super._super)) + x864);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x866 = (arg1_0.a[10]._super._super * arg2_0.a[10]._super._super);
// builtin Sub
Val x867 = (Val(1) - arg3.a[10]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x868 = (Val(1) - arg2_0.a[10]._super._super);
// builtin Mul
Val x869 = (arg1_0.a[10]._super._super * x868);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x870 = (Val(1) - arg1_0.a[10]._super._super);
// builtin Mul
Val x871 = ((x870 * arg2_0.a[10]._super._super) * arg3.a[10]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x872 = (((x866 * x867) + (x869 * arg3.a[10]._super._super)) + x871);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x873 = (arg1_0.a[11]._super._super * arg2_0.a[11]._super._super);
// builtin Sub
Val x874 = (Val(1) - arg3.a[11]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x875 = (Val(1) - arg2_0.a[11]._super._super);
// builtin Mul
Val x876 = (arg1_0.a[11]._super._super * x875);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x877 = (Val(1) - arg1_0.a[11]._super._super);
// builtin Mul
Val x878 = ((x877 * arg2_0.a[11]._super._super) * arg3.a[11]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x879 = (((x873 * x874) + (x876 * arg3.a[11]._super._super)) + x878);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x880 = (arg1_0.a[12]._super._super * arg2_0.a[12]._super._super);
// builtin Sub
Val x881 = (Val(1) - arg3.a[12]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x882 = (Val(1) - arg2_0.a[12]._super._super);
// builtin Mul
Val x883 = (arg1_0.a[12]._super._super * x882);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x884 = (Val(1) - arg1_0.a[12]._super._super);
// builtin Mul
Val x885 = ((x884 * arg2_0.a[12]._super._super) * arg3.a[12]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x886 = (((x880 * x881) + (x883 * arg3.a[12]._super._super)) + x885);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x887 = (arg1_0.a[13]._super._super * arg2_0.a[13]._super._super);
// builtin Sub
Val x888 = (Val(1) - arg3.a[13]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x889 = (Val(1) - arg2_0.a[13]._super._super);
// builtin Mul
Val x890 = (arg1_0.a[13]._super._super * x889);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x891 = (Val(1) - arg1_0.a[13]._super._super);
// builtin Mul
Val x892 = ((x891 * arg2_0.a[13]._super._super) * arg3.a[13]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x893 = (((x887 * x888) + (x890 * arg3.a[13]._super._super)) + x892);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x894 = (arg1_0.a[14]._super._super * arg2_0.a[14]._super._super);
// builtin Sub
Val x895 = (Val(1) - arg3.a[14]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x896 = (Val(1) - arg2_0.a[14]._super._super);
// builtin Mul
Val x897 = (arg1_0.a[14]._super._super * x896);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x898 = (Val(1) - arg1_0.a[14]._super._super);
// builtin Mul
Val x899 = ((x898 * arg2_0.a[14]._super._super) * arg3.a[14]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x900 = (((x894 * x895) + (x897 * arg3.a[14]._super._super)) + x899);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x901 = (arg1_0.a[15]._super._super * arg2_0.a[15]._super._super);
// builtin Sub
Val x902 = (Val(1) - arg3.a[15]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x903 = (Val(1) - arg2_0.a[15]._super._super);
// builtin Mul
Val x904 = (arg1_0.a[15]._super._super * x903);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x905 = (Val(1) - arg1_0.a[15]._super._super);
// builtin Mul
Val x906 = ((x905 * arg2_0.a[15]._super._super) * arg3.a[15]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x907 = (((x901 * x902) + (x904 * arg3.a[15]._super._super)) + x906);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x908 = (arg1_0.a[16]._super._super * arg2_0.a[16]._super._super);
// builtin Sub
Val x909 = (Val(1) - arg3.a[16]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x910 = (Val(1) - arg2_0.a[16]._super._super);
// builtin Mul
Val x911 = (arg1_0.a[16]._super._super * x910);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x912 = (Val(1) - arg1_0.a[16]._super._super);
// builtin Mul
Val x913 = ((x912 * arg2_0.a[16]._super._super) * arg3.a[16]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x914 = (((x908 * x909) + (x911 * arg3.a[16]._super._super)) + x913);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x915 = (arg1_0.a[17]._super._super * arg2_0.a[17]._super._super);
// builtin Sub
Val x916 = (Val(1) - arg3.a[17]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x917 = (Val(1) - arg2_0.a[17]._super._super);
// builtin Mul
Val x918 = (arg1_0.a[17]._super._super * x917);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x919 = (Val(1) - arg1_0.a[17]._super._super);
// builtin Mul
Val x920 = ((x919 * arg2_0.a[17]._super._super) * arg3.a[17]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x921 = (((x915 * x916) + (x918 * arg3.a[17]._super._super)) + x920);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x922 = (arg1_0.a[18]._super._super * arg2_0.a[18]._super._super);
// builtin Sub
Val x923 = (Val(1) - arg3.a[18]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x924 = (Val(1) - arg2_0.a[18]._super._super);
// builtin Mul
Val x925 = (arg1_0.a[18]._super._super * x924);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x926 = (Val(1) - arg1_0.a[18]._super._super);
// builtin Mul
Val x927 = ((x926 * arg2_0.a[18]._super._super) * arg3.a[18]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x928 = (((x922 * x923) + (x925 * arg3.a[18]._super._super)) + x927);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x929 = (arg1_0.a[19]._super._super * arg2_0.a[19]._super._super);
// builtin Sub
Val x930 = (Val(1) - arg3.a[19]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x931 = (Val(1) - arg2_0.a[19]._super._super);
// builtin Mul
Val x932 = (arg1_0.a[19]._super._super * x931);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x933 = (Val(1) - arg1_0.a[19]._super._super);
// builtin Mul
Val x934 = ((x933 * arg2_0.a[19]._super._super) * arg3.a[19]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x935 = (((x929 * x930) + (x932 * arg3.a[19]._super._super)) + x934);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x936 = (arg1_0.a[20]._super._super * arg2_0.a[20]._super._super);
// builtin Sub
Val x937 = (Val(1) - arg3.a[20]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x938 = (Val(1) - arg2_0.a[20]._super._super);
// builtin Mul
Val x939 = (arg1_0.a[20]._super._super * x938);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x940 = (Val(1) - arg1_0.a[20]._super._super);
// builtin Mul
Val x941 = ((x940 * arg2_0.a[20]._super._super) * arg3.a[20]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x942 = (((x936 * x937) + (x939 * arg3.a[20]._super._super)) + x941);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x943 = (arg1_0.a[21]._super._super * arg2_0.a[21]._super._super);
// builtin Sub
Val x944 = (Val(1) - arg3.a[21]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x945 = (Val(1) - arg2_0.a[21]._super._super);
// builtin Mul
Val x946 = (arg1_0.a[21]._super._super * x945);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x947 = (Val(1) - arg1_0.a[21]._super._super);
// builtin Mul
Val x948 = ((x947 * arg2_0.a[21]._super._super) * arg3.a[21]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x949 = (((x943 * x944) + (x946 * arg3.a[21]._super._super)) + x948);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x950 = (arg1_0.a[22]._super._super * arg2_0.a[22]._super._super);
// builtin Sub
Val x951 = (Val(1) - arg3.a[22]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x952 = (Val(1) - arg2_0.a[22]._super._super);
// builtin Mul
Val x953 = (arg1_0.a[22]._super._super * x952);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x954 = (Val(1) - arg1_0.a[22]._super._super);
// builtin Mul
Val x955 = ((x954 * arg2_0.a[22]._super._super) * arg3.a[22]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x956 = (((x950 * x951) + (x953 * arg3.a[22]._super._super)) + x955);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x957 = (arg1_0.a[23]._super._super * arg2_0.a[23]._super._super);
// builtin Sub
Val x958 = (Val(1) - arg3.a[23]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x959 = (Val(1) - arg2_0.a[23]._super._super);
// builtin Mul
Val x960 = (arg1_0.a[23]._super._super * x959);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x961 = (Val(1) - arg1_0.a[23]._super._super);
// builtin Mul
Val x962 = ((x961 * arg2_0.a[23]._super._super) * arg3.a[23]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x963 = (((x957 * x958) + (x960 * arg3.a[23]._super._super)) + x962);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x964 = (arg1_0.a[24]._super._super * arg2_0.a[24]._super._super);
// builtin Sub
Val x965 = (Val(1) - arg3.a[24]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x966 = (Val(1) - arg2_0.a[24]._super._super);
// builtin Mul
Val x967 = (arg1_0.a[24]._super._super * x966);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x968 = (Val(1) - arg1_0.a[24]._super._super);
// builtin Mul
Val x969 = ((x968 * arg2_0.a[24]._super._super) * arg3.a[24]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x970 = (((x964 * x965) + (x967 * arg3.a[24]._super._super)) + x969);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x971 = (arg1_0.a[25]._super._super * arg2_0.a[25]._super._super);
// builtin Sub
Val x972 = (Val(1) - arg3.a[25]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x973 = (Val(1) - arg2_0.a[25]._super._super);
// builtin Mul
Val x974 = (arg1_0.a[25]._super._super * x973);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x975 = (Val(1) - arg1_0.a[25]._super._super);
// builtin Mul
Val x976 = ((x975 * arg2_0.a[25]._super._super) * arg3.a[25]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x977 = (((x971 * x972) + (x974 * arg3.a[25]._super._super)) + x976);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x978 = (arg1_0.a[26]._super._super * arg2_0.a[26]._super._super);
// builtin Sub
Val x979 = (Val(1) - arg3.a[26]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x980 = (Val(1) - arg2_0.a[26]._super._super);
// builtin Mul
Val x981 = (arg1_0.a[26]._super._super * x980);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x982 = (Val(1) - arg1_0.a[26]._super._super);
// builtin Mul
Val x983 = ((x982 * arg2_0.a[26]._super._super) * arg3.a[26]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x984 = (((x978 * x979) + (x981 * arg3.a[26]._super._super)) + x983);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x985 = (arg1_0.a[27]._super._super * arg2_0.a[27]._super._super);
// builtin Sub
Val x986 = (Val(1) - arg3.a[27]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x987 = (Val(1) - arg2_0.a[27]._super._super);
// builtin Mul
Val x988 = (arg1_0.a[27]._super._super * x987);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x989 = (Val(1) - arg1_0.a[27]._super._super);
// builtin Mul
Val x990 = ((x989 * arg2_0.a[27]._super._super) * arg3.a[27]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x991 = (((x985 * x986) + (x988 * arg3.a[27]._super._super)) + x990);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x992 = (arg1_0.a[28]._super._super * arg2_0.a[28]._super._super);
// builtin Sub
Val x993 = (Val(1) - arg3.a[28]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x994 = (Val(1) - arg2_0.a[28]._super._super);
// builtin Mul
Val x995 = (arg1_0.a[28]._super._super * x994);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x996 = (Val(1) - arg1_0.a[28]._super._super);
// builtin Mul
Val x997 = ((x996 * arg2_0.a[28]._super._super) * arg3.a[28]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x998 = (((x992 * x993) + (x995 * arg3.a[28]._super._super)) + x997);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x999 = (arg1_0.a[29]._super._super * arg2_0.a[29]._super._super);
// builtin Sub
Val x1000 = (Val(1) - arg3.a[29]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1001 = (Val(1) - arg2_0.a[29]._super._super);
// builtin Mul
Val x1002 = (arg1_0.a[29]._super._super * x1001);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x1003 = (Val(1) - arg1_0.a[29]._super._super);
// builtin Mul
Val x1004 = ((x1003 * arg2_0.a[29]._super._super) * arg3.a[29]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1005 = (((x999 * x1000) + (x1002 * arg3.a[29]._super._super)) + x1004);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x1006 = (arg1_0.a[30]._super._super * arg2_0.a[30]._super._super);
// builtin Sub
Val x1007 = (Val(1) - arg3.a[30]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1008 = (Val(1) - arg2_0.a[30]._super._super);
// builtin Mul
Val x1009 = (arg1_0.a[30]._super._super * x1008);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x1010 = (Val(1) - arg1_0.a[30]._super._super);
// builtin Mul
Val x1011 = ((x1010 * arg2_0.a[30]._super._super) * arg3.a[30]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1012 = (((x1006 * x1007) + (x1009 * arg3.a[30]._super._super)) + x1011);
// builtin Mul
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x1013 = (arg1_0.a[31]._super._super * arg2_0.a[31]._super._super);
// builtin Sub
Val x1014 = (Val(1) - arg3.a[31]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1015 = (Val(1) - arg2_0.a[31]._super._super);
// builtin Mul
Val x1016 = (arg1_0.a[31]._super._super * x1015);
// builtin Sub
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x1017 = (Val(1) - arg1_0.a[31]._super._super);
// builtin Mul
Val x1018 = ((x1017 * arg2_0.a[31]._super._super) * arg3.a[31]._super._super);
// builtin Add
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1019 = (((x1013 * x1014) + (x1016 * arg3.a[31]._super._super)) + x1018);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x1020 = ((x802 + (x796 * arg3.a[0]._super._super)) + ((x809 + (x803 * arg3.a[1]._super._super)) * Val(2)));
Val x1021 = ((x1020 + ((x816 + (x810 * arg3.a[2]._super._super)) * Val(4))) + ((x823 + (x817 * arg3.a[3]._super._super)) * Val(8)));
Val x1022 = ((x1021 + ((x830 + (x824 * arg3.a[4]._super._super)) * Val(16))) + ((x837 + (x831 * arg3.a[5]._super._super)) * Val(32)));
Val x1023 = ((x1022 + ((x844 + (x838 * arg3.a[6]._super._super)) * Val(64))) + ((x851 + (x845 * arg3.a[7]._super._super)) * Val(128)));
Val x1024 = ((x1023 + ((x858 + (x852 * arg3.a[8]._super._super)) * Val(256))) + ((x865 + (x859 * arg3.a[9]._super._super)) * Val(512)));
Val x1025 = ((x1024 + ((x872 + (x866 * arg3.a[10]._super._super)) * Val(1024))) + ((x879 + (x873 * arg3.a[11]._super._super)) * Val(2048)));
Val x1026 = ((x1025 + ((x886 + (x880 * arg3.a[12]._super._super)) * Val(4096))) + ((x893 + (x887 * arg3.a[13]._super._super)) * Val(8192)));
Val x1027 = ((x1026 + ((x900 + (x894 * arg3.a[14]._super._super)) * Val(16384))) + ((x907 + (x901 * arg3.a[15]._super._super)) * Val(32768)));
Val x1028 = ((x914 + (x908 * arg3.a[16]._super._super)) + ((x921 + (x915 * arg3.a[17]._super._super)) * Val(2)));
Val x1029 = ((x1028 + ((x928 + (x922 * arg3.a[18]._super._super)) * Val(4))) + ((x935 + (x929 * arg3.a[19]._super._super)) * Val(8)));
Val x1030 = ((x1029 + ((x942 + (x936 * arg3.a[20]._super._super)) * Val(16))) + ((x949 + (x943 * arg3.a[21]._super._super)) * Val(32)));
Val x1031 = ((x1030 + ((x956 + (x950 * arg3.a[22]._super._super)) * Val(64))) + ((x963 + (x957 * arg3.a[23]._super._super)) * Val(128)));
Val x1032 = ((x1031 + ((x970 + (x964 * arg3.a[24]._super._super)) * Val(256))) + ((x977 + (x971 * arg3.a[25]._super._super)) * Val(512)));
Val x1033 = ((x1032 + ((x984 + (x978 * arg3.a[26]._super._super)) * Val(1024))) + ((x991 + (x985 * arg3.a[27]._super._super)) * Val(2048)));
Val x1034 = ((x1033 + ((x998 + (x992 * arg3.a[28]._super._super)) * Val(4096))) + ((x1005 + (x999 * arg3.a[29]._super._super)) * Val(8192)));
Val x1035 = ((x1034 + ((x1012 + (x1006 * arg3.a[30]._super._super)) * Val(16384))) + ((x1019 + (x1013 * arg3.a[31]._super._super)) * Val(32768)));
Val x1036 = ((x454 - (x422 * x360)) + ((x455 - (x425 * x363)) * Val(2)));
Val x1037 = ((x1036 + ((x456 - (x428 * x366)) * Val(4))) + ((x457 - (x431 * x369)) * Val(8)));
Val x1038 = ((x1037 + ((x458 - (x434 * x372)) * Val(16))) + ((x459 - (x437 * x375)) * Val(32)));
Val x1039 = ((x1038 + ((x460 - (x440 * x378)) * Val(64))) + ((x461 - (x443 * x381)) * Val(128)));
Val x1040 = ((x1039 + ((x462 - (x446 * x384)) * Val(256))) + ((x463 - (x449 * x387)) * Val(512)));
Val x1041 = ((x1040 + ((x464 - (x452 * x390)) * Val(1024))) + ((x465 - (x359 * x393)) * Val(2048)));
Val x1042 = ((x1041 + ((x466 - (x362 * x396)) * Val(4096))) + ((x467 - (x365 * x399)) * Val(8192)));
Val x1043 = ((x1042 + ((x468 - (x368 * x402)) * Val(16384))) + ((x469 - (x371 * x405)) * Val(32768)));
Val x1044 = ((x470 - (x374 * x408)) + ((x471 - (x377 * x411)) * Val(2)));
Val x1045 = ((x1044 + ((x472 - (x380 * x414)) * Val(4))) + ((x473 - (x383 * x417)) * Val(8)));
Val x1046 = ((x1045 + ((x474 - (x386 * x420)) * Val(16))) + ((x475 - (x389 * x423)) * Val(32)));
Val x1047 = ((x1046 + ((x476 - (x392 * x426)) * Val(64))) + ((x477 - (x395 * x429)) * Val(128)));
Val x1048 = ((x1047 + ((x478 - (x398 * x432)) * Val(256))) + ((x479 - (x401 * x435)) * Val(512)));
Val x1049 = ((x1048 + ((x480 - (x404 * x438)) * Val(1024))) + ((x481 - (x407 * x441)) * Val(2048)));
Val x1050 = ((x1049 + ((x482 - (x410 * x444)) * Val(4096))) + ((x483 - (x413 * x447)) * Val(8192)));
Val x1051 = ((x1050 + ((x484 - (x416 * x450)) * Val(16384))) + ((x485 - (x419 * x453)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x1052 = (x794 + (x1027 + x1043));
Val x1053 = (x795 + (x1035 + x1051));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:100)
Val x1054 = (arg4.a[1]._super._super * Val(2));
Val x1055 = (arg4.a[2]._super._super * Val(4));
Val x1056 = (arg4.a[3]._super._super * Val(8));
Val x1057 = (arg4.a[4]._super._super * Val(16));
Val x1058 = (arg4.a[5]._super._super * Val(32));
Val x1059 = (arg4.a[6]._super._super * Val(64));
Val x1060 = (arg4.a[7]._super._super * Val(128));
Val x1061 = (arg4.a[8]._super._super * Val(256));
Val x1062 = (arg4.a[9]._super._super * Val(512));
Val x1063 = (arg4.a[10]._super._super * Val(1024));
Val x1064 = (arg4.a[11]._super._super * Val(2048));
Val x1065 = (arg4.a[12]._super._super * Val(4096));
Val x1066 = (arg4.a[13]._super._super * Val(8192));
Val x1067 = (arg4.a[14]._super._super * Val(16384));
Val x1068 = (arg4.a[15]._super._super * Val(32768));
// builtin Add
Val x1069 = (arg4.a[0]._super._super + x1054);
Val x1070 = (((x1069 + x1055) + x1056) + x1057);
Val x1071 = (((x1070 + x1058) + x1059) + x1060);
Val x1072 = (((x1071 + x1061) + x1062) + x1063);
Val x1073 = (((x1072 + x1064) + x1065) + x1066);
// builtin Mul
Val x1074 = (arg4.a[17]._super._super * Val(2));
Val x1075 = (arg4.a[18]._super._super * Val(4));
Val x1076 = (arg4.a[19]._super._super * Val(8));
Val x1077 = (arg4.a[20]._super._super * Val(16));
Val x1078 = (arg4.a[21]._super._super * Val(32));
Val x1079 = (arg4.a[22]._super._super * Val(64));
Val x1080 = (arg4.a[23]._super._super * Val(128));
Val x1081 = (arg4.a[24]._super._super * Val(256));
Val x1082 = (arg4.a[25]._super._super * Val(512));
Val x1083 = (arg4.a[26]._super._super * Val(1024));
Val x1084 = (arg4.a[27]._super._super * Val(2048));
Val x1085 = (arg4.a[28]._super._super * Val(4096));
Val x1086 = (arg4.a[29]._super._super * Val(8192));
Val x1087 = (arg4.a[30]._super._super * Val(16384));
Val x1088 = (arg4.a[31]._super._super * Val(32768));
// builtin Add
Val x1089 = (arg4.a[16]._super._super + x1074);
Val x1090 = (((x1089 + x1075) + x1076) + x1077);
Val x1091 = (((x1090 + x1078) + x1079) + x1080);
Val x1092 = (((x1091 + x1081) + x1082) + x1083);
Val x1093 = (((x1092 + x1084) + x1085) + x1086);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x1094 = (x794 + ((x1073 + x1067) + x1068));
Val x1095 = (x795 + ((x1093 + x1087) + x1088));
// Log(<preamble>:22)
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:168)
INVOKE_EXTERN(ctx,log, "a = ", std::initializer_list<Val>{x1052, x1053});
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:169)
INVOKE_EXTERN(ctx,log, "e = ", std::initializer_list<Val>{x1094, x1095});
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:170)
UnpackReg_32__16_Struct x1096 = exec_CarryAndExpand(ctx,Val2Array{x1052, x1053}, LAYOUT_LOOKUP(layout8, a));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:171)
UnpackReg_32__16_Struct x1097 = exec_CarryAndExpand(ctx,Val2Array{x1094, x1095}, LAYOUT_LOOKUP(layout8, e));
// builtin Sub
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:181)
Val x1098 = (Val(1) - x10._super);
// builtin Add
Val x1099 = (arg1_0.round._super + Val(1));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:182)
Val x1100 = ((x10._super * Val(36)) + (x1098 * Val(35)));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:170)
Val32Array x1101 = Val32Array{x1096._super[0]._super, x1096._super[1]._super, x1096._super[2]._super, x1096._super[3]._super, x1096._super[4]._super, x1096._super[5]._super, x1096._super[6]._super, x1096._super[7]._super, x1096._super[8]._super, x1096._super[9]._super, x1096._super[10]._super, x1096._super[11]._super, x1096._super[12]._super, x1096._super[13]._super, x1096._super[14]._super, x1096._super[15]._super, x1096._super[16]._super, x1096._super[17]._super, x1096._super[18]._super, x1096._super[19]._super, x1096._super[20]._super, x1096._super[21]._super, x1096._super[22]._super, x1096._super[23]._super, x1096._super[24]._super, x1096._super[25]._super, x1096._super[26]._super, x1096._super[27]._super, x1096._super[28]._super, x1096._super[29]._super, x1096._super[30]._super, x1096._super[31]._super};
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:171)
Val32Array x1102 = Val32Array{x1097._super[0]._super, x1097._super[1]._super, x1097._super[2]._super, x1097._super[3]._super, x1097._super[4]._super, x1097._super[5]._super, x1097._super[6]._super, x1097._super[7]._super, x1097._super[8]._super, x1097._super[9]._super, x1097._super[10]._super, x1097._super[11]._super, x1097._super[12]._super, x1097._super[13]._super, x1097._super[14]._super, x1097._super[15]._super, x1097._super[16]._super, x1097._super[17]._super, x1097._super[18]._super, x1097._super[19]._super, x1097._super[20]._super, x1097._super[21]._super, x1097._super[22]._super, x1097._super[23]._super, x1097._super[24]._super, x1097._super[25]._super, x1097._super[26]._super, x1097._super[27]._super, x1097._super[28]._super, x1097._super[29]._super, x1097._super[30]._super, x1097._super[31]._super};
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:166)
Val32Array x1103 = Val32Array{x357._super[0]._super, x357._super[1]._super, x357._super[2]._super, x357._super[3]._super, x357._super[4]._super, x357._super[5]._super, x357._super[6]._super, x357._super[7]._super, x357._super[8]._super, x357._super[9]._super, x357._super[10]._super, x357._super[11]._super, x357._super[12]._super, x357._super[13]._super, x357._super[14]._super, x357._super[15]._super, x357._super[16]._super, x357._super[17]._super, x357._super[18]._super, x357._super[19]._super, x357._super[20]._super, x357._super[21]._super, x357._super[22]._super, x357._super[23]._super, x357._super[24]._super, x357._super[25]._super, x357._super[26]._super, x357._super[27]._super, x357._super[28]._super, x357._super[29]._super, x357._super[30]._super, x357._super[31]._super};
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:172)
ShaStateStruct x1104 = exec_ShaState(ctx,x1101, x1102, x1103, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, arg1_0.dataAddr._super, arg1_0.count._super, arg1_0.kAddr._super, (x1098 * x1099), x1100, LAYOUT_LOOKUP(layout8, _super));
return x1104;
}
ShaStateStruct exec_ShaStoreState(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, ShaStateStruct arg2_0, ShaStateStruct arg3, BoundLayout<ShaStoreStateLayout> layout4)   {
// builtin Sub
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:191)
Val x5 = (Val(3) - arg1_0.round._super);
NondetRegStruct x6 = exec_IsZero(ctx,x5, LAYOUT_LOOKUP(layout4, lastRound));
// builtin Sub
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:192)
Val x7 = (arg1_0.count._super - x6._super);
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:193)
NondetRegStruct x8 = exec_IsZero(ctx,x7, LAYOUT_LOOKUP(layout4, countZero));
// builtin Sub
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:197)
Val x9 = (Val(1) - x6._super);
Val x10;
if (to_size_t(x8._super)) {
x10 = Val(48);
} else if (to_size_t((Val(1) - x8._super))) {
Val x11;
if (to_size_t(x6._super)) {
x11 = Val(34);
} else if (to_size_t(x9)) {
x11 = Val(36);
} else {
   assert(0 && "Reached unreachable mux arm");
}
x10 = x11;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:203)
Val x12 = (arg2_0.a[1]._super._super * Val(2));
Val x13 = (arg2_0.a[2]._super._super * Val(4));
Val x14 = (arg2_0.a[3]._super._super * Val(8));
Val x15 = (arg2_0.a[4]._super._super * Val(16));
Val x16 = (arg2_0.a[5]._super._super * Val(32));
Val x17 = (arg2_0.a[6]._super._super * Val(64));
Val x18 = (arg2_0.a[7]._super._super * Val(128));
Val x19 = (arg2_0.a[8]._super._super * Val(256));
Val x20 = (arg2_0.a[9]._super._super * Val(512));
Val x21 = (arg2_0.a[10]._super._super * Val(1024));
Val x22 = (arg2_0.a[11]._super._super * Val(2048));
Val x23 = (arg2_0.a[12]._super._super * Val(4096));
Val x24 = (arg2_0.a[13]._super._super * Val(8192));
Val x25 = (arg2_0.a[14]._super._super * Val(16384));
Val x26 = (arg2_0.a[15]._super._super * Val(32768));
// builtin Add
Val x27 = (arg2_0.a[0]._super._super + x12);
Val x28 = (((x27 + x13) + x14) + x15);
Val x29 = (((x28 + x16) + x17) + x18);
Val x30 = (((x29 + x19) + x20) + x21);
Val x31 = (((x30 + x22) + x23) + x24);
// builtin Mul
Val x32 = (arg2_0.a[17]._super._super * Val(2));
Val x33 = (arg2_0.a[18]._super._super * Val(4));
Val x34 = (arg2_0.a[19]._super._super * Val(8));
Val x35 = (arg2_0.a[20]._super._super * Val(16));
Val x36 = (arg2_0.a[21]._super._super * Val(32));
Val x37 = (arg2_0.a[22]._super._super * Val(64));
Val x38 = (arg2_0.a[23]._super._super * Val(128));
Val x39 = (arg2_0.a[24]._super._super * Val(256));
Val x40 = (arg2_0.a[25]._super._super * Val(512));
Val x41 = (arg2_0.a[26]._super._super * Val(1024));
Val x42 = (arg2_0.a[27]._super._super * Val(2048));
Val x43 = (arg2_0.a[28]._super._super * Val(4096));
Val x44 = (arg2_0.a[29]._super._super * Val(8192));
Val x45 = (arg2_0.a[30]._super._super * Val(16384));
Val x46 = (arg2_0.a[31]._super._super * Val(32768));
// builtin Add
Val x47 = (arg2_0.a[16]._super._super + x32);
Val x48 = (((x47 + x33) + x34) + x35);
Val x49 = (((x48 + x36) + x37) + x38);
Val x50 = (((x49 + x39) + x40) + x41);
Val x51 = (((x50 + x42) + x43) + x44);
// builtin Mul
Val x52 = (arg3.a[1]._super._super * Val(2));
Val x53 = (arg3.a[2]._super._super * Val(4));
Val x54 = (arg3.a[3]._super._super * Val(8));
Val x55 = (arg3.a[4]._super._super * Val(16));
Val x56 = (arg3.a[5]._super._super * Val(32));
Val x57 = (arg3.a[6]._super._super * Val(64));
Val x58 = (arg3.a[7]._super._super * Val(128));
Val x59 = (arg3.a[8]._super._super * Val(256));
Val x60 = (arg3.a[9]._super._super * Val(512));
Val x61 = (arg3.a[10]._super._super * Val(1024));
Val x62 = (arg3.a[11]._super._super * Val(2048));
Val x63 = (arg3.a[12]._super._super * Val(4096));
Val x64 = (arg3.a[13]._super._super * Val(8192));
Val x65 = (arg3.a[14]._super._super * Val(16384));
Val x66 = (arg3.a[15]._super._super * Val(32768));
// builtin Add
Val x67 = (arg3.a[0]._super._super + x52);
Val x68 = (((x67 + x53) + x54) + x55);
Val x69 = (((x68 + x56) + x57) + x58);
Val x70 = (((x69 + x59) + x60) + x61);
Val x71 = (((x70 + x62) + x63) + x64);
// builtin Mul
Val x72 = (arg3.a[17]._super._super * Val(2));
Val x73 = (arg3.a[18]._super._super * Val(4));
Val x74 = (arg3.a[19]._super._super * Val(8));
Val x75 = (arg3.a[20]._super._super * Val(16));
Val x76 = (arg3.a[21]._super._super * Val(32));
Val x77 = (arg3.a[22]._super._super * Val(64));
Val x78 = (arg3.a[23]._super._super * Val(128));
Val x79 = (arg3.a[24]._super._super * Val(256));
Val x80 = (arg3.a[25]._super._super * Val(512));
Val x81 = (arg3.a[26]._super._super * Val(1024));
Val x82 = (arg3.a[27]._super._super * Val(2048));
Val x83 = (arg3.a[28]._super._super * Val(4096));
Val x84 = (arg3.a[29]._super._super * Val(8192));
Val x85 = (arg3.a[30]._super._super * Val(16384));
Val x86 = (arg3.a[31]._super._super * Val(32768));
// builtin Add
Val x87 = (arg3.a[16]._super._super + x72);
Val x88 = (((x87 + x73) + x74) + x75);
Val x89 = (((x88 + x76) + x77) + x78);
Val x90 = (((x89 + x79) + x80) + x81);
Val x91 = (((x90 + x82) + x83) + x84);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x92 = (((x31 + x25) + x26) + ((x71 + x65) + x66));
Val x93 = (((x51 + x45) + x46) + ((x91 + x85) + x86));
UnpackReg_32__16_Struct x94 = exec_CarryAndExpand(ctx,Val2Array{x92, x93}, LAYOUT_LOOKUP(layout4, a));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:204)
Val x95 = (arg2_0.e[1]._super._super * Val(2));
Val x96 = (arg2_0.e[2]._super._super * Val(4));
Val x97 = (arg2_0.e[3]._super._super * Val(8));
Val x98 = (arg2_0.e[4]._super._super * Val(16));
Val x99 = (arg2_0.e[5]._super._super * Val(32));
Val x100 = (arg2_0.e[6]._super._super * Val(64));
Val x101 = (arg2_0.e[7]._super._super * Val(128));
Val x102 = (arg2_0.e[8]._super._super * Val(256));
Val x103 = (arg2_0.e[9]._super._super * Val(512));
Val x104 = (arg2_0.e[10]._super._super * Val(1024));
Val x105 = (arg2_0.e[11]._super._super * Val(2048));
Val x106 = (arg2_0.e[12]._super._super * Val(4096));
Val x107 = (arg2_0.e[13]._super._super * Val(8192));
Val x108 = (arg2_0.e[14]._super._super * Val(16384));
Val x109 = (arg2_0.e[15]._super._super * Val(32768));
// builtin Add
Val x110 = (arg2_0.e[0]._super._super + x95);
Val x111 = (((x110 + x96) + x97) + x98);
Val x112 = (((x111 + x99) + x100) + x101);
Val x113 = (((x112 + x102) + x103) + x104);
Val x114 = (((x113 + x105) + x106) + x107);
// builtin Mul
Val x115 = (arg2_0.e[17]._super._super * Val(2));
Val x116 = (arg2_0.e[18]._super._super * Val(4));
Val x117 = (arg2_0.e[19]._super._super * Val(8));
Val x118 = (arg2_0.e[20]._super._super * Val(16));
Val x119 = (arg2_0.e[21]._super._super * Val(32));
Val x120 = (arg2_0.e[22]._super._super * Val(64));
Val x121 = (arg2_0.e[23]._super._super * Val(128));
Val x122 = (arg2_0.e[24]._super._super * Val(256));
Val x123 = (arg2_0.e[25]._super._super * Val(512));
Val x124 = (arg2_0.e[26]._super._super * Val(1024));
Val x125 = (arg2_0.e[27]._super._super * Val(2048));
Val x126 = (arg2_0.e[28]._super._super * Val(4096));
Val x127 = (arg2_0.e[29]._super._super * Val(8192));
Val x128 = (arg2_0.e[30]._super._super * Val(16384));
Val x129 = (arg2_0.e[31]._super._super * Val(32768));
// builtin Add
Val x130 = (arg2_0.e[16]._super._super + x115);
Val x131 = (((x130 + x116) + x117) + x118);
Val x132 = (((x131 + x119) + x120) + x121);
Val x133 = (((x132 + x122) + x123) + x124);
Val x134 = (((x133 + x125) + x126) + x127);
// builtin Mul
Val x135 = (arg3.e[1]._super._super * Val(2));
Val x136 = (arg3.e[2]._super._super * Val(4));
Val x137 = (arg3.e[3]._super._super * Val(8));
Val x138 = (arg3.e[4]._super._super * Val(16));
Val x139 = (arg3.e[5]._super._super * Val(32));
Val x140 = (arg3.e[6]._super._super * Val(64));
Val x141 = (arg3.e[7]._super._super * Val(128));
Val x142 = (arg3.e[8]._super._super * Val(256));
Val x143 = (arg3.e[9]._super._super * Val(512));
Val x144 = (arg3.e[10]._super._super * Val(1024));
Val x145 = (arg3.e[11]._super._super * Val(2048));
Val x146 = (arg3.e[12]._super._super * Val(4096));
Val x147 = (arg3.e[13]._super._super * Val(8192));
Val x148 = (arg3.e[14]._super._super * Val(16384));
Val x149 = (arg3.e[15]._super._super * Val(32768));
// builtin Add
Val x150 = (arg3.e[0]._super._super + x135);
Val x151 = (((x150 + x136) + x137) + x138);
Val x152 = (((x151 + x139) + x140) + x141);
Val x153 = (((x152 + x142) + x143) + x144);
Val x154 = (((x153 + x145) + x146) + x147);
// builtin Mul
Val x155 = (arg3.e[17]._super._super * Val(2));
Val x156 = (arg3.e[18]._super._super * Val(4));
Val x157 = (arg3.e[19]._super._super * Val(8));
Val x158 = (arg3.e[20]._super._super * Val(16));
Val x159 = (arg3.e[21]._super._super * Val(32));
Val x160 = (arg3.e[22]._super._super * Val(64));
Val x161 = (arg3.e[23]._super._super * Val(128));
Val x162 = (arg3.e[24]._super._super * Val(256));
Val x163 = (arg3.e[25]._super._super * Val(512));
Val x164 = (arg3.e[26]._super._super * Val(1024));
Val x165 = (arg3.e[27]._super._super * Val(2048));
Val x166 = (arg3.e[28]._super._super * Val(4096));
Val x167 = (arg3.e[29]._super._super * Val(8192));
Val x168 = (arg3.e[30]._super._super * Val(16384));
Val x169 = (arg3.e[31]._super._super * Val(32768));
// builtin Add
Val x170 = (arg3.e[16]._super._super + x155);
Val x171 = (((x170 + x156) + x157) + x158);
Val x172 = (((x171 + x159) + x160) + x161);
Val x173 = (((x172 + x162) + x163) + x164);
Val x174 = (((x173 + x165) + x166) + x167);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x175 = (((x114 + x108) + x109) + ((x154 + x148) + x149));
Val x176 = (((x134 + x128) + x129) + ((x174 + x168) + x169));
UnpackReg_32__16_Struct x177 = exec_CarryAndExpand(ctx,Val2Array{x175, x176}, LAYOUT_LOOKUP(layout4, e));
// builtin Add
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:214)
Val x178 = (arg1_0.round._super + Val(1));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:203)
Val32Array x179 = Val32Array{x94._super[0]._super, x94._super[1]._super, x94._super[2]._super, x94._super[3]._super, x94._super[4]._super, x94._super[5]._super, x94._super[6]._super, x94._super[7]._super, x94._super[8]._super, x94._super[9]._super, x94._super[10]._super, x94._super[11]._super, x94._super[12]._super, x94._super[13]._super, x94._super[14]._super, x94._super[15]._super, x94._super[16]._super, x94._super[17]._super, x94._super[18]._super, x94._super[19]._super, x94._super[20]._super, x94._super[21]._super, x94._super[22]._super, x94._super[23]._super, x94._super[24]._super, x94._super[25]._super, x94._super[26]._super, x94._super[27]._super, x94._super[28]._super, x94._super[29]._super, x94._super[30]._super, x94._super[31]._super};
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:204)
Val32Array x180 = Val32Array{x177._super[0]._super, x177._super[1]._super, x177._super[2]._super, x177._super[3]._super, x177._super[4]._super, x177._super[5]._super, x177._super[6]._super, x177._super[7]._super, x177._super[8]._super, x177._super[9]._super, x177._super[10]._super, x177._super[11]._super, x177._super[12]._super, x177._super[13]._super, x177._super[14]._super, x177._super[15]._super, x177._super[16]._super, x177._super[17]._super, x177._super[18]._super, x177._super[19]._super, x177._super[20]._super, x177._super[21]._super, x177._super[22]._super, x177._super[23]._super, x177._super[24]._super, x177._super[25]._super, x177._super[26]._super, x177._super[27]._super, x177._super[28]._super, x177._super[29]._super, x177._super[30]._super, x177._super[31]._super};
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:205)
ShaStateStruct x181 = exec_ShaState(ctx,x179, x180, Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, arg1_0.dataAddr._super, x7, arg1_0.kAddr._super, (x9 * x178), x10, LAYOUT_LOOKUP(layout4, _super));
// builtin Add
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:219)
Val x182 = (arg1_0.stateOutAddr._super + Val(3));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:94)
Val x183 = (x94._super[1]._super * Val(2));
Val x184 = (x94._super[2]._super * Val(4));
Val x185 = (x94._super[3]._super * Val(8));
Val x186 = (x94._super[4]._super * Val(16));
Val x187 = (x94._super[5]._super * Val(32));
Val x188 = (x94._super[6]._super * Val(64));
Val x189 = (x94._super[7]._super * Val(128));
// builtin Add
Val x190 = (x94._super[0]._super + x183);
Val x191 = (((x190 + x184) + x185) + x186);
Val x192 = (((x191 + x187) + x188) + x189);
// builtin Mul
Val x193 = (x94._super[9]._super * Val(2));
Val x194 = (x94._super[10]._super * Val(4));
Val x195 = (x94._super[11]._super * Val(8));
Val x196 = (x94._super[12]._super * Val(16));
Val x197 = (x94._super[13]._super * Val(32));
Val x198 = (x94._super[14]._super * Val(64));
Val x199 = (x94._super[15]._super * Val(128));
// builtin Add
Val x200 = (x94._super[8]._super + x193);
Val x201 = (((x200 + x194) + x195) + x196);
Val x202 = (((x201 + x197) + x198) + x199);
// builtin Mul
Val x203 = (x94._super[17]._super * Val(2));
Val x204 = (x94._super[18]._super * Val(4));
Val x205 = (x94._super[19]._super * Val(8));
Val x206 = (x94._super[20]._super * Val(16));
Val x207 = (x94._super[21]._super * Val(32));
Val x208 = (x94._super[22]._super * Val(64));
Val x209 = (x94._super[23]._super * Val(128));
// builtin Add
Val x210 = (x94._super[16]._super + x203);
Val x211 = (((x210 + x204) + x205) + x206);
Val x212 = (((x211 + x207) + x208) + x209);
// builtin Mul
Val x213 = (x94._super[25]._super * Val(2));
Val x214 = (x94._super[26]._super * Val(4));
Val x215 = (x94._super[27]._super * Val(8));
Val x216 = (x94._super[28]._super * Val(16));
Val x217 = (x94._super[29]._super * Val(32));
Val x218 = (x94._super[30]._super * Val(64));
Val x219 = (x94._super[31]._super * Val(128));
// builtin Add
Val x220 = (x94._super[24]._super + x213);
Val x221 = (((x220 + x214) + x215) + x216);
Val x222 = (((x221 + x217) + x218) + x219);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:95)
ValU32Struct x223 = ValU32Struct{
  .low = ((x212 * Val(256)) + x222),   .high = ((x192 * Val(256)) + x202)};
MemoryWriteStruct x224 = exec_MemoryWrite(ctx,arg0, (x182 - arg1_0.round._super), x223, LAYOUT_LOOKUP(layout4, _1));
// builtin Add
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:220)
Val x225 = (arg1_0.stateOutAddr._super + Val(7));
// builtin Mul
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:94)
Val x226 = (x177._super[1]._super * Val(2));
Val x227 = (x177._super[2]._super * Val(4));
Val x228 = (x177._super[3]._super * Val(8));
Val x229 = (x177._super[4]._super * Val(16));
Val x230 = (x177._super[5]._super * Val(32));
Val x231 = (x177._super[6]._super * Val(64));
Val x232 = (x177._super[7]._super * Val(128));
// builtin Add
Val x233 = (x177._super[0]._super + x226);
Val x234 = (((x233 + x227) + x228) + x229);
Val x235 = (((x234 + x230) + x231) + x232);
// builtin Mul
Val x236 = (x177._super[9]._super * Val(2));
Val x237 = (x177._super[10]._super * Val(4));
Val x238 = (x177._super[11]._super * Val(8));
Val x239 = (x177._super[12]._super * Val(16));
Val x240 = (x177._super[13]._super * Val(32));
Val x241 = (x177._super[14]._super * Val(64));
Val x242 = (x177._super[15]._super * Val(128));
// builtin Add
Val x243 = (x177._super[8]._super + x236);
Val x244 = (((x243 + x237) + x238) + x239);
Val x245 = (((x244 + x240) + x241) + x242);
// builtin Mul
Val x246 = (x177._super[17]._super * Val(2));
Val x247 = (x177._super[18]._super * Val(4));
Val x248 = (x177._super[19]._super * Val(8));
Val x249 = (x177._super[20]._super * Val(16));
Val x250 = (x177._super[21]._super * Val(32));
Val x251 = (x177._super[22]._super * Val(64));
Val x252 = (x177._super[23]._super * Val(128));
// builtin Add
Val x253 = (x177._super[16]._super + x246);
Val x254 = (((x253 + x247) + x248) + x249);
Val x255 = (((x254 + x250) + x251) + x252);
// builtin Mul
Val x256 = (x177._super[25]._super * Val(2));
Val x257 = (x177._super[26]._super * Val(4));
Val x258 = (x177._super[27]._super * Val(8));
Val x259 = (x177._super[28]._super * Val(16));
Val x260 = (x177._super[29]._super * Val(32));
Val x261 = (x177._super[30]._super * Val(64));
Val x262 = (x177._super[31]._super * Val(128));
// builtin Add
Val x263 = (x177._super[24]._super + x256);
Val x264 = (((x263 + x257) + x258) + x259);
Val x265 = (((x264 + x260) + x261) + x262);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:95)
ValU32Struct x266 = ValU32Struct{
  .low = ((x255 * Val(256)) + x265),   .high = ((x235 * Val(256)) + x245)};
MemoryWriteStruct x267 = exec_MemoryWrite(ctx,arg0, (x225 - arg1_0.round._super), x266, LAYOUT_LOOKUP(layout4, _2));
return x181;
}
InstOutputBaseStruct exec_Sha0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Sha0Layout> layout2)   {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:225)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:226)
Val x4 = (arg1_0.state - (arg1_0.minor + Val(32)));
EQZ(x4, "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:226)");
ShaStateStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:229)
ShaStateStruct x6 = exec_ShaEcall(ctx,arg0, LAYOUT_LOOKUP(layout2, stateRedef.arm0));
x5 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:230)
ShaStateStruct x7 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x8 = exec_ShaLoadState(ctx,arg0, x7, LAYOUT_LOOKUP(layout2, stateRedef.arm1._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:231)
ShaStateStruct x9 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x10 = back_ShaState(ctx,2, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x11 = back_ShaState(ctx,3, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x12 = back_ShaState(ctx,4, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x13 = exec_ShaLoadData(ctx,arg0, x9, x10, x11, x12, LAYOUT_LOOKUP(layout2, stateRedef.arm2._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x13;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:232)
ShaStateStruct x14 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x15 = back_ShaState(ctx,2, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x16 = back_ShaState(ctx,3, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x17 = back_ShaState(ctx,4, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x18 = back_ShaState(ctx,7, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x19 = back_ShaState(ctx,15, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x20 = back_ShaState(ctx,16, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x21 = exec_ShaMix(ctx,arg0, x14, x15, x16, x17, x18, x19, x20, LAYOUT_LOOKUP(layout2, stateRedef.arm3._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x21;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:233)
ShaStateStruct x22 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x23 = back_ShaState(ctx,4, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x24 = back_ShaState(ctx,68, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x25 = exec_ShaStoreState(ctx,arg0, x22, x23, x24, LAYOUT_LOOKUP(layout2, stateRedef.arm4._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x25;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:234)
ShaStateStruct x26 = exec_ShaInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm5._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x26;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:235)
ShaStateStruct x27 = exec_ShaInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm6._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x27;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:236)
ShaStateStruct x28 = exec_ShaInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm7._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x28;
} else {
   assert(0 && "Reached unreachable mux arm");
}
ShaStateStruct x29 = back_ShaState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:238)
BigIntTopStateStruct x30 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
InstOutputBaseStruct x31 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x29.nextState._super,   .newMode = arg1_0.mode,   .topState = x30};
return x31;
}
BigIntStateStruct back_BigIntState(ExecContext& ctx,Index distance0, BoundLayout<BigIntStateLayout> layout1)   {
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
NondetRegStruct x2 = back_BitReg(ctx,distance0, LAYOUT_LOOKUP(layout1, isEcall));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3 = back_BitReg(ctx,distance0, LAYOUT_LOOKUP(layout1, mode));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x4 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, pc));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, polyOp));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x6 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, coeff));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct16Array x7 = map(Val16Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15)}, LAYOUT_LOOKUP(layout1, bytes), ([&](Val16Array::value_type x8, BoundLayout<NondetRegLayout16LayoutArray::value_type> x9) {
NondetRegStruct x10 = back_Reg(ctx,distance0, x9);
return x10;

}));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x11 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, nextState));
return BigIntStateStruct{
  .isEcall = x2,   .mode = x3,   .pc = x4,   .polyOp = x5,   .coeff = x6,   .bytes = x7,   .nextState = x11};
}
BigIntStateStruct exec_BigIntState(ExecContext& ctx,Val arg0, Val arg1_0, Val arg2_0, Val arg3, Val arg4, Val16Array arg5, Val arg6, BoundLayout<BigIntStateLayout> layout7)   {
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
NondetRegStruct x8 = exec_BitReg(ctx,arg0, LAYOUT_LOOKUP(layout7, isEcall));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x9 = exec_BitReg(ctx,arg1_0, LAYOUT_LOOKUP(layout7, mode));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x10 = exec_Reg(ctx,arg2_0, LAYOUT_LOOKUP(layout7, pc));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x11 = exec_Reg(ctx,arg3, LAYOUT_LOOKUP(layout7, polyOp));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x12 = exec_Reg(ctx,arg4, LAYOUT_LOOKUP(layout7, coeff));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct16Array x13 = map(arg5, LAYOUT_LOOKUP(layout7, bytes), ([&](Val16Array::value_type x14, BoundLayout<NondetRegLayout16LayoutArray::value_type> x15) {
NondetRegStruct x16 = exec_Reg(ctx,x14, x15);
return x16;

}));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x17 = exec_Reg(ctx,arg6, LAYOUT_LOOKUP(layout7, nextState));
return BigIntStateStruct{
  .isEcall = x8,   .mode = x9,   .pc = x10,   .polyOp = x11,   .coeff = x12,   .bytes = x13,   .nextState = x17};
}
BigIntStateStruct exec_BigIntInvalid(ExecContext& ctx,BoundLayout<BigIntStateLayout> layout0)   {
// BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:26)
EQZ(Val(2013265920), "BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:26)");
// BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:27)
BigIntStateStruct x1 = exec_BigIntState(ctx,Val(0), Val(0), Val(0), Val(0), Val(0), Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, Val(48), layout0);
return x1;
}
BigIntStateStruct exec_BigIntEcall(ExecContext& ctx,NondetRegStruct arg0, BoundLayout<BigIntEcallLayout> layout1)   {
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:41)
GetDataStruct x2 = exec_MemoryRead(ctx,arg0, Val(1073725445), LAYOUT_LOOKUP(layout1, mode));
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:42)
EQZ(x2._super.high, "BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:42)");
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:44)
ReadAddrStruct x3 = exec_ReadAddr(ctx,arg0, Val(7), LAYOUT_LOOKUP(layout1, pc));
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:46)
BigIntStateStruct x4 = exec_BigIntState(ctx,Val(1), x2._super.low, (x3._super - Val(1)), Val(0), Val(0), Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, Val(41), LAYOUT_LOOKUP(layout1, _super));
return x4;
}
SplitU32Struct exec_SplitU32(ExecContext& ctx,ValU32Struct arg0, BoundLayout<SplitU32Layout> layout1)   {
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:58)
SplitWordStruct x2 = exec_SplitWord(ctx,arg0.low, LAYOUT_LOOKUP(layout1, low));
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:59)
SplitWordStruct x3 = exec_SplitWord(ctx,arg0.high, LAYOUT_LOOKUP(layout1, high));
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:57)
SplitU32Struct x4 = SplitU32Struct{
  .bytes = NondetRegStruct4Array{x2.byte0, x2.byte1, x3.byte0, x3.byte1}};
return x4;
}
AddrDecomposeBitsStruct exec_BigIntAddr(ExecContext& ctx,ValU32Struct arg0, Val arg1_0, BoundLayout<BigIntAddrLayout> layout2)   {
// BigIntAddr(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:65)
NondetRegStruct x3 = exec_IsZero(ctx,(arg0.high - Val(49151)), LAYOUT_LOOKUP(layout2, _0));
EQZ(x3._super, "BigIntAddr(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:65)");
// BigIntAddr(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:66)
AddrDecomposeBitsStruct x4 = exec_AddrDecomposeBits(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super));
// BigIntAddr(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:67)
EQZ(x4.low2, "BigIntAddr(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:67)");
return x4;
}
BigIntReadStruct exec_BigIntRead(ExecContext& ctx,NondetRegStruct arg0, ValU32Struct arg1_0, Val arg2_0, BoundLayout<BigIntReadLayout> layout3)   {
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:74)
AddrDecomposeBitsStruct x4 = exec_BigIntAddr(ctx,arg1_0, arg2_0, LAYOUT_LOOKUP(layout3, addr));
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:75)
SplitU32Struct4Array x5 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout3, words), ([&](Val4Array::value_type x6, BoundLayout<BigIntReadWords_SuperLayout4LayoutArray::value_type> x7) {
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:76)
GetDataStruct x8 = exec_MemoryRead(ctx,arg0, (x4._super + x6), LAYOUT_LOOKUP(x7, _0));
SplitU32Struct x9 = exec_SplitU32(ctx,x8._super, LAYOUT_LOOKUP(x7, _super));
return x9;

}));
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:79)
NondetRegStruct16Array x10 = NondetRegStruct16Array{x5[0].bytes[0], x5[0].bytes[1], x5[0].bytes[2], x5[0].bytes[3], x5[1].bytes[0], x5[1].bytes[1], x5[1].bytes[2], x5[1].bytes[3], x5[2].bytes[0], x5[2].bytes[1], x5[2].bytes[2], x5[2].bytes[3], x5[3].bytes[0], x5[3].bytes[1], x5[3].bytes[2], x5[3].bytes[3]};
return BigIntReadStruct{
  ._super = x10};
}
BigIntWitnessStruct exec_BigIntWitness(ExecContext& ctx,Val16Array arg0, BoundLayout<BigIntWitnessLayout> layout1)   {
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:88)
NondetRegStruct16Array x2 = map(arg0, LAYOUT_LOOKUP(layout1, _super), ([&](Val16Array::value_type x3, BoundLayout<NondetU8RegLayout16LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetU8Reg(ctx,x3, x4);
return x5;

}));
return BigIntWitnessStruct{
  ._super = x2};
}
BigIntWitnessStruct exec_BigIntWrite(ExecContext& ctx,NondetRegStruct arg0, ValU32Struct arg1_0, Val arg2_0, BoundLayout<BigIntWriteLayout> layout3)   {
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:94)
AddrDecomposeBitsStruct x4 = exec_BigIntAddr(ctx,arg1_0, arg2_0, LAYOUT_LOOKUP(layout3, addr));
// BigIntExtern(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:3)
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:95)
auto [x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20] = INVOKE_EXTERN(ctx,bigIntExtern);
BigIntWitnessStruct x21 = exec_BigIntWitness(ctx,Val16Array{x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20}, LAYOUT_LOOKUP(layout3, _super));
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:96)
BigIntWrite__0Struct4Array x22 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout3, _1), ([&](Val4Array::value_type x23, BoundLayout<BigIntWrite__0_SuperLayout4LayoutArray::value_type> x24) {
// builtin Mul
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:98)
Val x25 = (x23 * Val(4));
Val x26 = (x21._super[to_size_t((x25 + Val(1)))]._super * Val(256));
// builtin Add
Val x27 = (x21._super[to_size_t(x25)]._super + x26);
// builtin Mul
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:99)
Val x28 = (x21._super[to_size_t((x25 + Val(3)))]._super * Val(256));
// builtin Add
Val x29 = (x21._super[to_size_t((x25 + Val(2)))]._super + x28);
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:101)
MemoryWriteStruct x30 = exec_MemoryWrite(ctx,arg0, (x4._super + x23), ValU32Struct{
  .low = x27,   .high = x29}, LAYOUT_LOOKUP(x24, _0));
return BigIntWrite__0Struct{
};

}));
return x21;
}
BigIntWitnessStruct exec_BigIntCheck(ExecContext& ctx,BoundLayout<BigIntWitnessLayout> layout0)   {
// BigIntExtern(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:3)
// BigIntCheck(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:108)
auto [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16] = INVOKE_EXTERN(ctx,bigIntExtern);
BigIntWitnessStruct x17 = exec_BigIntWitness(ctx,Val16Array{x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16}, layout0);
return x17;
}
BigIntStateStruct exec_BigIntStep(ExecContext& ctx,NondetRegStruct arg0, BigIntStateStruct arg1_0, BoundLayout<BigIntStepLayout> layout2)   {
// builtin Add
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:114)
Val x3 = (arg1_0.pc._super + Val(1));
// Log(<preamble>:22)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:115)
INVOKE_EXTERN(ctx,log, "pc", std::initializer_list<Val>{x3});
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:118)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, x3, LAYOUT_LOOKUP(layout2, loadInst_0));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:119)
SplitWordStruct x5 = exec_SplitWord(ctx,x4._super.high, LAYOUT_LOOKUP(layout2, instHigh));
// builtin BitAnd
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:124)
Val x6 = bitAnd(x5.byte1._super, Val(15));
NondetRegStruct x7 = exec_NondetReg(ctx,x6, LAYOUT_LOOKUP(layout2, polyOp));
// builtin Sub
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:125)
Val x8 = (x5.byte1._super - x7._super);
NondetRegStruct x9 = exec_NondetReg(ctx,(x8 * Val(1887436801)), LAYOUT_LOOKUP(layout2, memOp));
// builtin Add
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:126)
Val x10 = ((x9._super * Val(16)) + x7._super);
EQZ((x10 - x5.byte1._super), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:126)");
// Po2(zirgen/circuit/rv32im/v2/dsl/po2.zir:10)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:128)
Val30Array x11 = Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)};
NondetRegStruct5Array x12 = map(Val5Array{Val(0), Val(1), Val(2), Val(3), Val(4)}, LAYOUT_LOOKUP(layout2, regBits), ([&](Val5Array::value_type x13, BoundLayout<NondetRegLayout5LayoutArray::value_type> x14) {
// builtin BitAnd
Val x15 = bitAnd(x5.byte0._super, x11[to_size_t(x13)]);
NondetRegStruct x16 = exec_NondetBitReg(ctx,(x15 * inv_0(x11[to_size_t(x13)])), x14);
return x16;

}));
// builtin Mul
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:129)
Val x17 = (x12[1]._super * Val(2));
Val x18 = (x12[2]._super * Val(4));
Val x19 = (x12[3]._super * Val(8));
Val x20 = (x12[4]._super * Val(16));
// builtin Add
Val x21 = (x12[0]._super + x17);
Val x22 = (((x21 + x18) + x19) + x20);
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:131)
NondetRegStruct3Array x23 = map(Val3Array{Val(0), Val(1), Val(2)}, LAYOUT_LOOKUP(layout2, coeffBits), ([&](Val3Array::value_type x24, BoundLayout<NondetRegLayout3LayoutArray::value_type> x25) {
// builtin BitAnd
Val x26 = bitAnd(x5.byte0._super, x11[to_size_t((x24 + Val(5)))]);
NondetRegStruct x27 = exec_NondetBitReg(ctx,(x26 * inv_0(x11[to_size_t((x24 + Val(5)))])), x25);
return x27;

}));
// builtin Mul
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:132)
Val x28 = (x23[1]._super * Val(2));
Val x29 = (x23[2]._super * Val(4));
// builtin Add
Val x30 = (x23[0]._super + x28);
Val x31 = (x30 + x29);
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:133)
Val x32 = (((x31 * Val(32)) + x22) - x5.byte0._super);
EQZ(x32, "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:133)");
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:138)
GetDataStruct x33 = exec_MemoryRead(ctx,arg0, (x22 + Val(1073725440)), LAYOUT_LOOKUP(layout2, baseAddrU32));
// builtin Mul
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:139)
Val x34 = (x4._super.low * Val(4));
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
Val x35 = (x33._super.low + (x34 * Val(4)));
NormalizeU32Struct x36 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x35,   .high = x33._super.high}, LAYOUT_LOOKUP(layout2, dataAddrU32));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:143)
OneHot_3_Struct x37 = exec_OneHot_3_(ctx,x9._super, LAYOUT_LOOKUP(layout2, memOpOneHot));
NondetRegStruct16Array x38;
if (to_size_t(x37._super[0]._super)) {
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:145)
BigIntReadStruct x39 = exec_BigIntRead(ctx,arg0, x36._super, arg1_0.mode._super, LAYOUT_LOOKUP(layout2, bytes.arm0));
x38 = x39._super;
} else if (to_size_t(x37._super[1]._super)) {
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:146)
BigIntWitnessStruct x40 = exec_BigIntWrite(ctx,arg0, x36._super, arg1_0.mode._super, LAYOUT_LOOKUP(layout2, bytes.arm1));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)
NondetRegStruct16Array x41 = NondetRegStruct16Array{x40._super[0], x40._super[1], x40._super[2], x40._super[3], x40._super[4], x40._super[5], x40._super[6], x40._super[7], x40._super[8], x40._super[9], x40._super[10], x40._super[11], x40._super[12], x40._super[13], x40._super[14], x40._super[15]};
x38 = x41;
} else if (to_size_t(x37._super[2]._super)) {
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:147)
BigIntWitnessStruct x42 = exec_BigIntCheck(ctx,LAYOUT_LOOKUP(layout2, bytes.arm2._super));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra0.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra1.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra2.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra3.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra4.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra5.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra6.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra7.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra8.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra9.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra10.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra11.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra12.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra13.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)");
NondetRegStruct16Array x43 = NondetRegStruct16Array{x42._super[0], x42._super[1], x42._super[2], x42._super[3], x42._super[4], x42._super[5], x42._super[6], x42._super[7], x42._super[8], x42._super[9], x42._super[10], x42._super[11], x42._super[12], x42._super[13], x42._super[14], x42._super[15]};
x38 = x43;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:151)
NondetRegStruct x44 = exec_IsZero(ctx,x7._super, LAYOUT_LOOKUP(layout2, _2));
// builtin Sub
Val x45 = (Val(1) - arg1_0.isEcall._super);
// builtin Mul
Val x46 = (x44._super * x45);
Val x47;
if (to_size_t(x46)) {
x47 = Val(48);
} else if (to_size_t((Val(1) - x46))) {
x47 = Val(41);
} else {
   assert(0 && "Reached unreachable mux arm");
}
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:144)
Val16Array x48 = Val16Array{x38[0]._super, x38[1]._super, x38[2]._super, x38[3]._super, x38[4]._super, x38[5]._super, x38[6]._super, x38[7]._super, x38[8]._super, x38[9]._super, x38[10]._super, x38[11]._super, x38[12]._super, x38[13]._super, x38[14]._super, x38[15]._super};
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:158)
BigIntStateStruct x49 = exec_BigIntState(ctx,Val(0), arg1_0.mode._super, x3, x7._super, x31, x48, x47, LAYOUT_LOOKUP(layout2, _super));
return x49;
}
InstOutputBaseStruct exec_BigInt0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<BigInt0Layout> layout2)   {
// Log(<preamble>:22)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:170)
INVOKE_EXTERN(ctx,log, "BigInt0", std::initializer_list<Val>{});
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:171)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:172)
Val x4 = (arg1_0.state - (arg1_0.minor + Val(40)));
EQZ(x4, "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:172)");
BigIntStateStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:175)
BigIntStateStruct x6 = exec_BigIntEcall(ctx,arg0, LAYOUT_LOOKUP(layout2, stateRedef.arm0._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
x5 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:176)
BigIntStateStruct x7 = back_BigIntState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntStateStruct x8 = exec_BigIntStep(ctx,arg0, x7, LAYOUT_LOOKUP(layout2, stateRedef.arm1));
x5 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:177)
BigIntStateStruct x9 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm2._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra36.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra37.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra38.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra39.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
x5 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:178)
BigIntStateStruct x10 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm3._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra36.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra37.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra38.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra39.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
x5 = x10;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:179)
BigIntStateStruct x11 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm4._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra36.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra37.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra38.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra39.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
x5 = x11;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:180)
BigIntStateStruct x12 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm5._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra36.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra37.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra38.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra39.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
x5 = x12;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:181)
BigIntStateStruct x13 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm6._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra36.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra37.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra38.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra39.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
x5 = x13;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
BigIntStateStruct x14 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm7._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra36.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra37.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra38.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra39.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)");
x5 = x14;
} else {
   assert(0 && "Reached unreachable mux arm");
}
BigIntStateStruct x15 = back_BigIntState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
Val16Array x16 = Val16Array{x15.bytes[0]._super, x15.bytes[1]._super, x15.bytes[2]._super, x15.bytes[3]._super, x15.bytes[4]._super, x15.bytes[5]._super, x15.bytes[6]._super, x15.bytes[7]._super, x15.bytes[8]._super, x15.bytes[9]._super, x15.bytes[10]._super, x15.bytes[11]._super, x15.bytes[12]._super, x15.bytes[13]._super, x15.bytes[14]._super, x15.bytes[15]._super};
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:184)
BigIntTopStateStruct x17 = BigIntTopStateStruct{
  .polyOp = x15.polyOp._super,   .coeff = x15.coeff._super,   .witness = x16};
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:78)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:185)
InstOutputBaseStruct x18 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x15.nextState._super,   .newMode = arg1_0.mode,   .topState = x17};
return x18;
}
BigIntAccumStateStruct back_BigIntAccumState(ExecContext& ctx,Index distance0, BoundLayout<BigIntAccumStateLayout> layout1)   {
// BigIntAccumState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:189)
NondetExtRegStruct x2 = back_ExtReg(ctx,distance0, LAYOUT_LOOKUP(layout1, poly));
// BigIntAccumState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:190)
NondetExtRegStruct x3 = back_ExtReg(ctx,distance0, LAYOUT_LOOKUP(layout1, term));
// BigIntAccumState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:191)
NondetExtRegStruct x4 = back_ExtReg(ctx,distance0, LAYOUT_LOOKUP(layout1, total));
return BigIntAccumStateStruct{
  .poly = x2,   .term = x3,   .total = x4};
}
BigIntAccumStateStruct exec_BigIntAccumState(ExecContext& ctx,ExtVal arg0, ExtVal arg1_0, ExtVal arg2_0, BoundLayout<BigIntAccumStateLayout> layout3)   {
// BigIntAccumState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:189)
NondetExtRegStruct x4 = exec_ExtReg(ctx,arg0, LAYOUT_LOOKUP(layout3, poly));
// BigIntAccumState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:190)
NondetExtRegStruct x5 = exec_ExtReg(ctx,arg1_0, LAYOUT_LOOKUP(layout3, term));
// BigIntAccumState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:191)
NondetExtRegStruct x6 = exec_ExtReg(ctx,arg2_0, LAYOUT_LOOKUP(layout3, total));
return BigIntAccumStateStruct{
  .poly = x4,   .term = x5,   .total = x6};
}
OneHot_7_Struct exec_OneHot_7_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_7_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct7Array x2 = map(Val7Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val7Array::value_type x3, BoundLayout<NondetRegLayout7LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// builtin Add
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
Val x8 = ((x7 + x2[4]._super) + x2[5]._super);
EQZ(((x8 + x2[6]._super) - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// builtin Mul
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x9 = (x2[2]._super * Val(2));
Val x10 = (x2[3]._super * Val(3));
Val x11 = (x2[4]._super * Val(4));
Val x12 = (x2[5]._super * Val(5));
Val x13 = (x2[6]._super * Val(6));
// builtin Add
Val x14 = (x2[1]._super + x9);
Val x15 = (((x14 + x10) + x11) + x12);
EQZ(((x15 + x13) - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_7_Struct{
  ._super = x2};
}
BigIntAccumStateStruct exec_BigIntPolyOpNop(ExecContext& ctx,BoundLayout<BigIntAccumStateLayout> layout0)   {
// BigIntPolyOpNop(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:251)
BigIntAccumStateStruct x1 = exec_BigIntAccumState(ctx,ExtVal(0, 0, 0, 0), ExtVal(1, 0, 0, 0), ExtVal(0, 0, 0, 0), layout0);
return x1;
}
BigIntAccumStateStruct exec_BigIntPolyOpShift(ExecContext& ctx,BigIntTopStateStruct arg0, BigIntAccumStateStruct arg1_0, ExtVal arg2_0, BoundLayout<BigIntAccumStateLayout> layout3)   {
// builtin ExtMul
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:210)
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:236)
// BigIntPolyOpShift(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:260)
ExtVal x4 = (arg2_0 * ExtVal(1, 0, 0, 0));
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:211)
ExtVal x5 = (x4 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:212)
ExtVal x6 = (x5 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:213)
ExtVal x7 = (x6 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:214)
ExtVal x8 = (x7 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:215)
ExtVal x9 = (x8 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:216)
ExtVal x10 = (x9 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:217)
ExtVal x11 = (x10 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:218)
ExtVal x12 = (x11 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:219)
ExtVal x13 = (x12 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:220)
ExtVal x14 = (x13 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:221)
ExtVal x15 = (x14 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:222)
ExtVal x16 = (x15 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:223)
ExtVal x17 = (x16 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:224)
ExtVal x18 = (x17 * arg2_0);
// builtin MakeExt
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:239)
ExtVal x19 = (arg0.witness[0] + ExtVal(0, 0, 0, 0));
ExtVal x20 = (arg0.witness[1] + ExtVal(0, 0, 0, 0));
ExtVal x21 = (arg0.witness[2] + ExtVal(0, 0, 0, 0));
ExtVal x22 = (arg0.witness[3] + ExtVal(0, 0, 0, 0));
ExtVal x23 = (arg0.witness[4] + ExtVal(0, 0, 0, 0));
ExtVal x24 = (arg0.witness[5] + ExtVal(0, 0, 0, 0));
ExtVal x25 = (arg0.witness[6] + ExtVal(0, 0, 0, 0));
ExtVal x26 = (arg0.witness[7] + ExtVal(0, 0, 0, 0));
ExtVal x27 = (arg0.witness[8] + ExtVal(0, 0, 0, 0));
ExtVal x28 = (arg0.witness[9] + ExtVal(0, 0, 0, 0));
ExtVal x29 = (arg0.witness[10] + ExtVal(0, 0, 0, 0));
ExtVal x30 = (arg0.witness[11] + ExtVal(0, 0, 0, 0));
ExtVal x31 = (arg0.witness[12] + ExtVal(0, 0, 0, 0));
ExtVal x32 = (arg0.witness[13] + ExtVal(0, 0, 0, 0));
ExtVal x33 = (arg0.witness[14] + ExtVal(0, 0, 0, 0));
ExtVal x34 = (arg0.witness[15] + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:238)
ExtVal x35 = (((x19 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x4 * x20));
ExtVal x36 = (((x35 + (x5 * x21)) + (x6 * x22)) + (x7 * x23));
ExtVal x37 = (((x36 + (x8 * x24)) + (x9 * x25)) + (x10 * x26));
ExtVal x38 = (((x37 + (x11 * x27)) + (x12 * x28)) + (x13 * x29));
ExtVal x39 = (((x38 + (x14 * x30)) + (x15 * x31)) + (x16 * x32));
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:246)
ExtVal x40 = (arg1_0.poly._super + ((x39 + (x17 * x33)) + (x18 * x34)));
// BigIntPolyOpShift(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:261)
BigIntAccumStateStruct x41 = exec_BigIntAccumState(ctx,(x40 * (x18 * arg2_0)), arg1_0.term._super, arg1_0.total._super, layout3);
return x41;
}
BigIntAccumStateStruct exec_BigIntPolyOpSetTerm(ExecContext& ctx,BigIntTopStateStruct arg0, BigIntAccumStateStruct arg1_0, ExtVal arg2_0, BoundLayout<BigIntAccumStateLayout> layout3)   {
// builtin ExtMul
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:210)
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:236)
// BigIntPolyOpSetTerm(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:270)
ExtVal x4 = (arg2_0 * ExtVal(1, 0, 0, 0));
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:211)
ExtVal x5 = (x4 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:212)
ExtVal x6 = (x5 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:213)
ExtVal x7 = (x6 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:214)
ExtVal x8 = (x7 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:215)
ExtVal x9 = (x8 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:216)
ExtVal x10 = (x9 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:217)
ExtVal x11 = (x10 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:218)
ExtVal x12 = (x11 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:219)
ExtVal x13 = (x12 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:220)
ExtVal x14 = (x13 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:221)
ExtVal x15 = (x14 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:222)
ExtVal x16 = (x15 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:223)
ExtVal x17 = (x16 * arg2_0);
// builtin MakeExt
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:239)
ExtVal x18 = (arg0.witness[0] + ExtVal(0, 0, 0, 0));
ExtVal x19 = (arg0.witness[1] + ExtVal(0, 0, 0, 0));
ExtVal x20 = (arg0.witness[2] + ExtVal(0, 0, 0, 0));
ExtVal x21 = (arg0.witness[3] + ExtVal(0, 0, 0, 0));
ExtVal x22 = (arg0.witness[4] + ExtVal(0, 0, 0, 0));
ExtVal x23 = (arg0.witness[5] + ExtVal(0, 0, 0, 0));
ExtVal x24 = (arg0.witness[6] + ExtVal(0, 0, 0, 0));
ExtVal x25 = (arg0.witness[7] + ExtVal(0, 0, 0, 0));
ExtVal x26 = (arg0.witness[8] + ExtVal(0, 0, 0, 0));
ExtVal x27 = (arg0.witness[9] + ExtVal(0, 0, 0, 0));
ExtVal x28 = (arg0.witness[10] + ExtVal(0, 0, 0, 0));
ExtVal x29 = (arg0.witness[11] + ExtVal(0, 0, 0, 0));
ExtVal x30 = (arg0.witness[12] + ExtVal(0, 0, 0, 0));
ExtVal x31 = (arg0.witness[13] + ExtVal(0, 0, 0, 0));
ExtVal x32 = (arg0.witness[14] + ExtVal(0, 0, 0, 0));
ExtVal x33 = (arg0.witness[15] + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:238)
ExtVal x34 = (((x18 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x4 * x19));
ExtVal x35 = (((x34 + (x5 * x20)) + (x6 * x21)) + (x7 * x22));
ExtVal x36 = (((x35 + (x8 * x23)) + (x9 * x24)) + (x10 * x25));
ExtVal x37 = (((x36 + (x11 * x26)) + (x12 * x27)) + (x13 * x28));
ExtVal x38 = (((x37 + (x14 * x29)) + (x15 * x30)) + (x16 * x31));
ExtVal x39 = ((x38 + (x17 * x32)) + ((x17 * arg2_0) * x33));
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:246)
ExtVal x40 = (arg1_0.poly._super + x39);
// BigIntPolyOpSetTerm(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:271)
BigIntAccumStateStruct x41 = exec_BigIntAccumState(ctx,ExtVal(0, 0, 0, 0), x40, arg1_0.total._super, layout3);
return x41;
}
BigIntAccumStateStruct exec_BigIntPolyOpAddTotal(ExecContext& ctx,BigIntTopStateStruct arg0, BigIntAccumStateStruct arg1_0, ExtVal arg2_0, BoundLayout<BigIntPolyOpAddTotalLayout> layout3)   {
// builtin MakeExt
// BigIntPolyOpAddTotal(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:280)
ExtVal x4 = ((arg0.coeff - Val(4)) + ExtVal(0, 0, 0, 0));
// builtin ExtMul
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:210)
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:236)
// BigIntPolyOpAddTotal(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:281)
ExtVal x5 = (arg2_0 * ExtVal(1, 0, 0, 0));
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:211)
ExtVal x6 = (x5 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:212)
ExtVal x7 = (x6 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:213)
ExtVal x8 = (x7 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:214)
ExtVal x9 = (x8 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:215)
ExtVal x10 = (x9 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:216)
ExtVal x11 = (x10 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:217)
ExtVal x12 = (x11 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:218)
ExtVal x13 = (x12 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:219)
ExtVal x14 = (x13 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:220)
ExtVal x15 = (x14 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:221)
ExtVal x16 = (x15 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:222)
ExtVal x17 = (x16 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:223)
ExtVal x18 = (x17 * arg2_0);
// builtin MakeExt
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:239)
ExtVal x19 = (arg0.witness[0] + ExtVal(0, 0, 0, 0));
ExtVal x20 = (arg0.witness[1] + ExtVal(0, 0, 0, 0));
ExtVal x21 = (arg0.witness[2] + ExtVal(0, 0, 0, 0));
ExtVal x22 = (arg0.witness[3] + ExtVal(0, 0, 0, 0));
ExtVal x23 = (arg0.witness[4] + ExtVal(0, 0, 0, 0));
ExtVal x24 = (arg0.witness[5] + ExtVal(0, 0, 0, 0));
ExtVal x25 = (arg0.witness[6] + ExtVal(0, 0, 0, 0));
ExtVal x26 = (arg0.witness[7] + ExtVal(0, 0, 0, 0));
ExtVal x27 = (arg0.witness[8] + ExtVal(0, 0, 0, 0));
ExtVal x28 = (arg0.witness[9] + ExtVal(0, 0, 0, 0));
ExtVal x29 = (arg0.witness[10] + ExtVal(0, 0, 0, 0));
ExtVal x30 = (arg0.witness[11] + ExtVal(0, 0, 0, 0));
ExtVal x31 = (arg0.witness[12] + ExtVal(0, 0, 0, 0));
ExtVal x32 = (arg0.witness[13] + ExtVal(0, 0, 0, 0));
ExtVal x33 = (arg0.witness[14] + ExtVal(0, 0, 0, 0));
ExtVal x34 = (arg0.witness[15] + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:238)
ExtVal x35 = (((x19 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x5 * x20));
ExtVal x36 = (((x35 + (x6 * x21)) + (x7 * x22)) + (x8 * x23));
ExtVal x37 = (((x36 + (x9 * x24)) + (x10 * x25)) + (x11 * x26));
ExtVal x38 = (((x37 + (x12 * x27)) + (x13 * x28)) + (x14 * x29));
ExtVal x39 = (((x38 + (x15 * x30)) + (x16 * x31)) + (x17 * x32));
ExtVal x40 = ((x39 + (x18 * x33)) + ((x18 * arg2_0) * x34));
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:246)
ExtVal x41 = (arg1_0.poly._super + x40);
// BigIntPolyOpAddTotal(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:282)
NondetExtRegStruct x42 = exec_ExtReg(ctx,(x4 * arg1_0.term._super), LAYOUT_LOOKUP(layout3, tmp));
// builtin ExtAdd
// BigIntPolyOpAddTotal(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:286)
ExtVal x43 = (arg1_0.total._super + (x42._super * x41));
// BigIntPolyOpAddTotal(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:283)
BigIntAccumStateStruct x44 = exec_BigIntAccumState(ctx,ExtVal(0, 0, 0, 0), ExtVal(1, 0, 0, 0), x43, LAYOUT_LOOKUP(layout3, _super));
return x44;
}
BigIntAccumStateStruct exec_BigIntPolyOpCarry1(ExecContext& ctx,BigIntTopStateStruct arg0, BigIntAccumStateStruct arg1_0, ExtVal arg2_0, BoundLayout<BigIntAccumStateLayout> layout3)   {
// builtin ExtMul
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:210)
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:236)
// BigIntPolyOpCarry1(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:292)
ExtVal x4 = (arg2_0 * ExtVal(1, 0, 0, 0));
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:211)
ExtVal x5 = (x4 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:212)
ExtVal x6 = (x5 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:213)
ExtVal x7 = (x6 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:214)
ExtVal x8 = (x7 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:215)
ExtVal x9 = (x8 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:216)
ExtVal x10 = (x9 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:217)
ExtVal x11 = (x10 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:218)
ExtVal x12 = (x11 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:219)
ExtVal x13 = (x12 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:220)
ExtVal x14 = (x13 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:221)
ExtVal x15 = (x14 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:222)
ExtVal x16 = (x15 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:223)
ExtVal x17 = (x16 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:224)
ExtVal x18 = (x17 * arg2_0);
// builtin MakeExt
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:239)
ExtVal x19 = (arg0.witness[0] + ExtVal(0, 0, 0, 0));
ExtVal x20 = (arg0.witness[1] + ExtVal(0, 0, 0, 0));
ExtVal x21 = (arg0.witness[2] + ExtVal(0, 0, 0, 0));
ExtVal x22 = (arg0.witness[3] + ExtVal(0, 0, 0, 0));
ExtVal x23 = (arg0.witness[4] + ExtVal(0, 0, 0, 0));
ExtVal x24 = (arg0.witness[5] + ExtVal(0, 0, 0, 0));
ExtVal x25 = (arg0.witness[6] + ExtVal(0, 0, 0, 0));
ExtVal x26 = (arg0.witness[7] + ExtVal(0, 0, 0, 0));
ExtVal x27 = (arg0.witness[8] + ExtVal(0, 0, 0, 0));
ExtVal x28 = (arg0.witness[9] + ExtVal(0, 0, 0, 0));
ExtVal x29 = (arg0.witness[10] + ExtVal(0, 0, 0, 0));
ExtVal x30 = (arg0.witness[11] + ExtVal(0, 0, 0, 0));
ExtVal x31 = (arg0.witness[12] + ExtVal(0, 0, 0, 0));
ExtVal x32 = (arg0.witness[13] + ExtVal(0, 0, 0, 0));
ExtVal x33 = (arg0.witness[14] + ExtVal(0, 0, 0, 0));
ExtVal x34 = (arg0.witness[15] + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:238)
ExtVal x35 = (((x19 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x4 * x20));
ExtVal x36 = (((x35 + (x5 * x21)) + (x6 * x22)) + (x7 * x23));
ExtVal x37 = (((x36 + (x8 * x24)) + (x9 * x25)) + (x10 * x26));
ExtVal x38 = (((x37 + (x11 * x27)) + (x12 * x28)) + (x13 * x29));
ExtVal x39 = (((x38 + (x14 * x30)) + (x15 * x31)) + (x16 * x32));
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:242)
ExtVal x40 = (((x4 * ExtVal(128, 0, 0, 0)) + ExtVal(128, 0, 0, 0)) + (x5 * ExtVal(128, 0, 0, 0)));
ExtVal x41 = (((x40 + (x6 * ExtVal(128, 0, 0, 0))) + (x7 * ExtVal(128, 0, 0, 0))) + (x8 * ExtVal(128, 0, 0, 0)));
ExtVal x42 = (((x41 + (x9 * ExtVal(128, 0, 0, 0))) + (x10 * ExtVal(128, 0, 0, 0))) + (x11 * ExtVal(128, 0, 0, 0)));
ExtVal x43 = (((x42 + (x12 * ExtVal(128, 0, 0, 0))) + (x13 * ExtVal(128, 0, 0, 0))) + (x14 * ExtVal(128, 0, 0, 0)));
ExtVal x44 = (((x43 + (x15 * ExtVal(128, 0, 0, 0))) + (x16 * ExtVal(128, 0, 0, 0))) + (x17 * ExtVal(128, 0, 0, 0)));
// builtin ExtSub
// BigIntPolyOpCarry1(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:294)
ExtVal x45 = (((x39 + (x17 * x33)) + (x18 * x34)) - (x44 + (x18 * ExtVal(128, 0, 0, 0))));
// builtin ExtAdd
ExtVal x46 = (arg1_0.poly._super + (x45 * ExtVal(16384, 0, 0, 0)));
// BigIntPolyOpCarry1(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:293)
BigIntAccumStateStruct x47 = exec_BigIntAccumState(ctx,x46, arg1_0.term._super, arg1_0.total._super, layout3);
return x47;
}
BigIntAccumStateStruct exec_BigIntPolyOpCarry2(ExecContext& ctx,BigIntTopStateStruct arg0, BigIntAccumStateStruct arg1_0, ExtVal arg2_0, BoundLayout<BigIntAccumStateLayout> layout3)   {
// builtin ExtMul
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:210)
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:236)
// BigIntPolyOpCarry2(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:302)
ExtVal x4 = (arg2_0 * ExtVal(1, 0, 0, 0));
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:211)
ExtVal x5 = (x4 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:212)
ExtVal x6 = (x5 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:213)
ExtVal x7 = (x6 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:214)
ExtVal x8 = (x7 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:215)
ExtVal x9 = (x8 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:216)
ExtVal x10 = (x9 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:217)
ExtVal x11 = (x10 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:218)
ExtVal x12 = (x11 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:219)
ExtVal x13 = (x12 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:220)
ExtVal x14 = (x13 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:221)
ExtVal x15 = (x14 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:222)
ExtVal x16 = (x15 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:223)
ExtVal x17 = (x16 * arg2_0);
// builtin MakeExt
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:239)
ExtVal x18 = (arg0.witness[0] + ExtVal(0, 0, 0, 0));
ExtVal x19 = (arg0.witness[1] + ExtVal(0, 0, 0, 0));
ExtVal x20 = (arg0.witness[2] + ExtVal(0, 0, 0, 0));
ExtVal x21 = (arg0.witness[3] + ExtVal(0, 0, 0, 0));
ExtVal x22 = (arg0.witness[4] + ExtVal(0, 0, 0, 0));
ExtVal x23 = (arg0.witness[5] + ExtVal(0, 0, 0, 0));
ExtVal x24 = (arg0.witness[6] + ExtVal(0, 0, 0, 0));
ExtVal x25 = (arg0.witness[7] + ExtVal(0, 0, 0, 0));
ExtVal x26 = (arg0.witness[8] + ExtVal(0, 0, 0, 0));
ExtVal x27 = (arg0.witness[9] + ExtVal(0, 0, 0, 0));
ExtVal x28 = (arg0.witness[10] + ExtVal(0, 0, 0, 0));
ExtVal x29 = (arg0.witness[11] + ExtVal(0, 0, 0, 0));
ExtVal x30 = (arg0.witness[12] + ExtVal(0, 0, 0, 0));
ExtVal x31 = (arg0.witness[13] + ExtVal(0, 0, 0, 0));
ExtVal x32 = (arg0.witness[14] + ExtVal(0, 0, 0, 0));
ExtVal x33 = (arg0.witness[15] + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:238)
ExtVal x34 = (((x18 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x4 * x19));
ExtVal x35 = (((x34 + (x5 * x20)) + (x6 * x21)) + (x7 * x22));
ExtVal x36 = (((x35 + (x8 * x23)) + (x9 * x24)) + (x10 * x25));
ExtVal x37 = (((x36 + (x11 * x26)) + (x12 * x27)) + (x13 * x28));
ExtVal x38 = (((x37 + (x14 * x29)) + (x15 * x30)) + (x16 * x31));
ExtVal x39 = ((x38 + (x17 * x32)) + ((x17 * arg2_0) * x33));
// BigIntPolyOpCarry2(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:304)
ExtVal x40 = (arg1_0.poly._super + (x39 * ExtVal(256, 0, 0, 0)));
// BigIntPolyOpCarry2(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:303)
BigIntAccumStateStruct x41 = exec_BigIntAccumState(ctx,x40, arg1_0.term._super, arg1_0.total._super, layout3);
return x41;
}
BigIntAccumStateStruct exec_BigIntPolyOpEqz(ExecContext& ctx,BigIntTopStateStruct arg0, BigIntAccumStateStruct arg1_0, ExtVal arg2_0, BoundLayout<BigIntAccumStateLayout> layout3)   {
// builtin ExtMul
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:210)
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:236)
// BigIntPolyOpEqz(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:312)
ExtVal x4 = (arg2_0 * ExtVal(1, 0, 0, 0));
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:211)
ExtVal x5 = (x4 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:212)
ExtVal x6 = (x5 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:213)
ExtVal x7 = (x6 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:214)
ExtVal x8 = (x7 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:215)
ExtVal x9 = (x8 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:216)
ExtVal x10 = (x9 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:217)
ExtVal x11 = (x10 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:218)
ExtVal x12 = (x11 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:219)
ExtVal x13 = (x12 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:220)
ExtVal x14 = (x13 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:221)
ExtVal x15 = (x14 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:222)
ExtVal x16 = (x15 * arg2_0);
// BigIntAccumPowers(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:223)
ExtVal x17 = (x16 * arg2_0);
// builtin MakeExt
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:239)
ExtVal x18 = (arg0.witness[0] + ExtVal(0, 0, 0, 0));
ExtVal x19 = (arg0.witness[1] + ExtVal(0, 0, 0, 0));
ExtVal x20 = (arg0.witness[2] + ExtVal(0, 0, 0, 0));
ExtVal x21 = (arg0.witness[3] + ExtVal(0, 0, 0, 0));
ExtVal x22 = (arg0.witness[4] + ExtVal(0, 0, 0, 0));
ExtVal x23 = (arg0.witness[5] + ExtVal(0, 0, 0, 0));
ExtVal x24 = (arg0.witness[6] + ExtVal(0, 0, 0, 0));
ExtVal x25 = (arg0.witness[7] + ExtVal(0, 0, 0, 0));
ExtVal x26 = (arg0.witness[8] + ExtVal(0, 0, 0, 0));
ExtVal x27 = (arg0.witness[9] + ExtVal(0, 0, 0, 0));
ExtVal x28 = (arg0.witness[10] + ExtVal(0, 0, 0, 0));
ExtVal x29 = (arg0.witness[11] + ExtVal(0, 0, 0, 0));
ExtVal x30 = (arg0.witness[12] + ExtVal(0, 0, 0, 0));
ExtVal x31 = (arg0.witness[13] + ExtVal(0, 0, 0, 0));
ExtVal x32 = (arg0.witness[14] + ExtVal(0, 0, 0, 0));
ExtVal x33 = (arg0.witness[15] + ExtVal(0, 0, 0, 0));
// builtin ExtAdd
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:238)
ExtVal x34 = (((x18 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x4 * x19));
ExtVal x35 = (((x34 + (x5 * x20)) + (x6 * x21)) + (x7 * x22));
ExtVal x36 = (((x35 + (x8 * x23)) + (x9 * x24)) + (x10 * x25));
ExtVal x37 = (((x36 + (x11 * x26)) + (x12 * x27)) + (x13 * x28));
ExtVal x38 = (((x37 + (x14 * x29)) + (x15 * x30)) + (x16 * x31));
ExtVal x39 = ((x38 + (x17 * x32)) + ((x17 * arg2_0) * x33));
// BigIntAccumStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:246)
ExtVal x40 = (arg1_0.poly._super + x39);
// BigIntPolyOpEqz(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:314)
ExtVal x41 = (arg1_0.total._super + (x40 * (x4 - ExtVal(256, 0, 0, 0))));
// builtin EqzExt
// BigIntPolyOpEqz(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:315)
EQZ(x41, "loc(callsite( builtin EqzExt  at  BigIntPolyOpEqz ( zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir :315:10)))");
// BigIntPolyOpEqz(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:316)
BigIntAccumStateStruct x42 = exec_BigIntAccumState(ctx,ExtVal(0, 0, 0, 0), ExtVal(1, 0, 0, 0), ExtVal(0, 0, 0, 0), layout3);
return x42;
}
BigIntAccumStruct exec_BigIntAccum(ExecContext& ctx,BigIntTopStateStruct arg0, ExtVal1Array arg1_0, BoundLayout<BigIntAccumLayout> layout2)   {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:195)
OneHot_7_Struct x3 = exec_OneHot_7_(ctx,arg0.polyOp, LAYOUT_LOOKUP(layout2, polyOp));
BigIntAccumStateStruct x4;
if (to_size_t(x3._super[0]._super)) {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:198)
BigIntAccumStateStruct x5 = exec_BigIntPolyOpNop(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm0));
x4 = x5;
} else if (to_size_t(x3._super[1]._super)) {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:199)
BigIntAccumStateStruct x6 = back_BigIntAccumState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntAccumStateStruct x7 = exec_BigIntPolyOpShift(ctx,arg0, x6, arg1_0[0], LAYOUT_LOOKUP(layout2, stateRedef.arm1));
x4 = x7;
} else if (to_size_t(x3._super[2]._super)) {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:200)
BigIntAccumStateStruct x8 = back_BigIntAccumState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntAccumStateStruct x9 = exec_BigIntPolyOpSetTerm(ctx,arg0, x8, arg1_0[0], LAYOUT_LOOKUP(layout2, stateRedef.arm2));
x4 = x9;
} else if (to_size_t(x3._super[3]._super)) {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:201)
BigIntAccumStateStruct x10 = back_BigIntAccumState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntAccumStateStruct x11 = exec_BigIntPolyOpAddTotal(ctx,arg0, x10, arg1_0[0], LAYOUT_LOOKUP(layout2, stateRedef.arm3));
x4 = x11;
} else if (to_size_t(x3._super[4]._super)) {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:202)
BigIntAccumStateStruct x12 = back_BigIntAccumState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntAccumStateStruct x13 = exec_BigIntPolyOpCarry1(ctx,arg0, x12, arg1_0[0], LAYOUT_LOOKUP(layout2, stateRedef.arm4));
x4 = x13;
} else if (to_size_t(x3._super[5]._super)) {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:203)
BigIntAccumStateStruct x14 = back_BigIntAccumState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntAccumStateStruct x15 = exec_BigIntPolyOpCarry2(ctx,arg0, x14, arg1_0[0], LAYOUT_LOOKUP(layout2, stateRedef.arm5));
x4 = x15;
} else if (to_size_t(x3._super[6]._super)) {
// BigIntAccum(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:204)
BigIntAccumStateStruct x16 = back_BigIntAccumState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntAccumStateStruct x17 = exec_BigIntPolyOpEqz(ctx,arg0, x16, arg1_0[0], LAYOUT_LOOKUP(layout2, stateRedef.arm6));
x4 = x17;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return BigIntAccumStruct{
};
}
OneHot_13_Struct exec_OneHot_13_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_13_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct13Array x2 = map(Val13Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val13Array::value_type x3, BoundLayout<NondetRegLayout13LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// builtin Add
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
Val x8 = ((x7 + x2[4]._super) + x2[5]._super);
Val x9 = ((x8 + x2[6]._super) + x2[7]._super);
Val x10 = ((x9 + x2[8]._super) + x2[9]._super);
Val x11 = ((x10 + x2[10]._super) + x2[11]._super);
EQZ(((x11 + x2[12]._super) - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// builtin Mul
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x12 = (x2[2]._super * Val(2));
Val x13 = (x2[3]._super * Val(3));
Val x14 = (x2[4]._super * Val(4));
Val x15 = (x2[5]._super * Val(5));
Val x16 = (x2[6]._super * Val(6));
Val x17 = (x2[7]._super * Val(7));
Val x18 = (x2[8]._super * Val(8));
Val x19 = (x2[9]._super * Val(9));
Val x20 = (x2[10]._super * Val(10));
Val x21 = (x2[11]._super * Val(11));
Val x22 = (x2[12]._super * Val(12));
// builtin Add
Val x23 = (x2[1]._super + x12);
Val x24 = (((x23 + x13) + x14) + x15);
Val x25 = (((x24 + x16) + x17) + x18);
Val x26 = (((x25 + x19) + x20) + x21);
EQZ(((x26 + x22) - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_13_Struct{
  ._super = x2};
}
TopStruct exec_Top(ExecContext& ctx,BoundLayout<TopLayout> layout0, GlobalBuf global1)   {
// IsFirstCycle(zirgen/circuit/rv32im/v2/dsl/top.zir:15)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:46)
Val x2 = INVOKE_EXTERN(ctx,isFirstCycle_0);
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout0, isFirstCycle));
// builtin Sub
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
Val x4 = (Val(1) - x3._super);
NondetRegStruct x5;
if (to_size_t(x3._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:49)
NondetRegStruct x6 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextState_0));
EQZ((x6._super - Val(7)), "Top(zirgen/circuit/rv32im/v2/dsl/top.zir:49)");
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:50)
NondetRegStruct x7 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(layout0, cycleRedef.arm0));
x5 = x7;
} else if (to_size_t(x4)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:52)
NondetRegStruct x8 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, cycle));
NondetRegStruct x9 = exec_Reg(ctx,(x8._super + Val(1)), LAYOUT_LOOKUP(layout0, cycleRedef.arm1));
x5 = x9;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:55)
NondetRegStruct x10 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextPcLow));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:56)
NondetRegStruct x11 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextPcHigh));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:59)
NondetRegStruct x12 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextState_0));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:61)
NondetRegStruct x13 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextMachineMode));
// GetMajorMinor(zirgen/circuit/rv32im/v2/dsl/top.zir:22)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:63)
auto [x14, x15] = INVOKE_EXTERN(ctx,getMajorMinor);
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:65)
NondetRegStruct x16 = exec_NondetReg(ctx,x14, LAYOUT_LOOKUP(layout0, major));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:66)
NondetRegStruct x17 = exec_NondetReg(ctx,x15, LAYOUT_LOOKUP(layout0, minor));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:69)
InstInputStruct x18 = exec_InstInput(ctx,x16._super, x17._super, ValU32Struct{
  .low = (x4 * x10._super),   .high = (x4 * x11._super)}, (x4 * x12._super), ((x4 * x13._super) + x3._super), LAYOUT_LOOKUP(layout0, instInput));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:71)
OneHot_13_Struct x19 = exec_OneHot_13_(ctx,x16._super, LAYOUT_LOOKUP(layout0, majorOnehot));
InstOutputBaseStruct x20;
if (to_size_t(x19._super[0]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x21 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:73)
InstOutputBaseStruct x22 = exec_Misc0(ctx,x21, x18, LAYOUT_LOOKUP(layout0, instResult.arm0));
x20 = x22;
} else if (to_size_t(x19._super[1]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x23 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:74)
InstOutputBaseStruct x24 = exec_Misc1(ctx,x23, x18, LAYOUT_LOOKUP(layout0, instResult.arm1));
x20 = x24;
} else if (to_size_t(x19._super[2]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x25 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:75)
InstOutputBaseStruct x26 = exec_Misc2(ctx,x25, x18, LAYOUT_LOOKUP(layout0, instResult.arm2));
x20 = x26;
} else if (to_size_t(x19._super[3]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x27 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:76)
InstOutputBaseStruct x28 = exec_Mul0(ctx,x27, x18, LAYOUT_LOOKUP(layout0, instResult.arm3));
x20 = x28;
} else if (to_size_t(x19._super[4]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x29 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:77)
InstOutputBaseStruct x30 = exec_Div0(ctx,x29, x18, LAYOUT_LOOKUP(layout0, instResult.arm4));
x20 = x30;
} else if (to_size_t(x19._super[5]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x31 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:78)
InstOutputBaseStruct x32 = exec_Mem0(ctx,x31, x18, LAYOUT_LOOKUP(layout0, instResult.arm5));
x20 = x32;
} else if (to_size_t(x19._super[6]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x33 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:79)
InstOutputBaseStruct x34 = exec_Mem1(ctx,x33, x18, LAYOUT_LOOKUP(layout0, instResult.arm6));
x20 = x34;
} else if (to_size_t(x19._super[7]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x35 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:80)
InstOutputBaseStruct x36 = exec_Control0(ctx,x35, x18, LAYOUT_LOOKUP(layout0, instResult.arm7), global1);
x20 = x36;
} else if (to_size_t(x19._super[8]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x37 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:81)
InstOutputBaseStruct x38 = exec_ECall0(ctx,x37, x18, LAYOUT_LOOKUP(layout0, instResult.arm8), global1);
x20 = x38;
} else if (to_size_t(x19._super[9]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x39 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:82)
InstOutputBaseStruct x40 = exec_Poseidon0(ctx,x39, x18, LAYOUT_LOOKUP(layout0, instResult.arm9), global1);
x20 = x40;
} else if (to_size_t(x19._super[10]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x41 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:83)
InstOutputBaseStruct x42 = exec_Poseidon1(ctx,x41, x18, LAYOUT_LOOKUP(layout0, instResult.arm10));
x20 = x42;
} else if (to_size_t(x19._super[11]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x43 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:84)
InstOutputBaseStruct x44 = exec_Sha0(ctx,x43, x18, LAYOUT_LOOKUP(layout0, instResult.arm11));
x20 = x44;
} else if (to_size_t(x19._super[12]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x45 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:85)
InstOutputBaseStruct x46 = exec_BigInt0(ctx,x45, x18, LAYOUT_LOOKUP(layout0, instResult.arm12));
x20 = x46;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:90)
NondetRegStruct x47 = exec_Reg(ctx,x20.newPc.low, LAYOUT_LOOKUP(layout0, nextPcLow));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:91)
NondetRegStruct x48 = exec_Reg(ctx,x20.newPc.high, LAYOUT_LOOKUP(layout0, nextPcHigh));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:92)
NondetRegStruct x49 = exec_Reg(ctx,x20.newState, LAYOUT_LOOKUP(layout0, nextState_0));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:93)
NondetRegStruct x50 = exec_Reg(ctx,x20.newMode, LAYOUT_LOOKUP(layout0, nextMachineMode));
return TopStruct{
};
}
void step_Top(ExecContext& ctx,MutableBuf data0, GlobalBuf global1)   {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:24)
BoundLayout<TopLayout> x2 = BIND_LAYOUT(kLayout_Top, data0);
TopStruct x3 = exec_Top(ctx,x2, global1);
return ;
}
AccumStruct exec_Accum(ExecContext& ctx,BigIntTopStateStruct arg0, ExtVal1Array arg1_0, BoundLayout<AccumLayout> layout2)   {
// Accum(zirgen/circuit/rv32im/v2/dsl/top.zir:99)
BigIntAccumStruct x3 = exec_BigIntAccum(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _0));
return AccumStruct{
};
}
BigIntTopStateStruct exec_TopExtract(ExecContext& ctx,BoundLayout<TopLayout> layout0, GlobalBuf global1)   {
BoundLayout<_globalLayout> x2 = BIND_LAYOUT(kLayoutGlobal, global1);
// builtin Sub
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
Val x3 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, isFirstCycle._super), 0));
NondetRegStruct x4;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, isFirstCycle._super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:50)
NondetRegStruct x5 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, cycleRedef.arm0._super), 0)};
x4 = x5;
} else if (to_size_t(x3)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:52)
NondetRegStruct x6 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, cycleRedef.arm1._super), 0)};
x4 = x6;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:55)
NondetRegStruct x7 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextPcLow));
// builtin Mul
Val x8 = (x3 * x7._super);
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:56)
NondetRegStruct x9 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextPcHigh));
// builtin Mul
Val x10 = (x3 * x9._super);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:57)
ValU32Struct x11 = ValU32Struct{
  .low = x8,   .high = x10};
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:61)
NondetRegStruct x12 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextMachineMode));
// builtin Add
Val x13 = ((x3 * x12._super) + LOAD(LAYOUT_LOOKUP(layout0, isFirstCycle._super), 0));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:91)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:33)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:73)
Val x14 = (x8 + Val(4));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
DenormedValU32Struct x15 = DenormedValU32Struct{
  .low = x14,   .high = x10};
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigIntTopStateNull(zirgen/circuit/rv32im/v2/dsl/inst.zir:114)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:86)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:26)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:42)
BigIntTopStateStruct x16 = BigIntTopStateStruct{
  .polyOp = Val(0),   .coeff = Val(0),   .witness = Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}};
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// Denorm(zirgen/circuit/rv32im/v2/dsl/u32.zir:38)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:86)
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:161)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:54)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:74)
DenormedValU32Struct x17 = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)};
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// IllegalMulOp(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:19)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:32)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:76)
ValU32Struct x18 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
// builtin Component
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:115)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:26)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:77)
ComponentStruct x19 = ComponentStruct{
};
// ECallOutput(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:12)
// IllegalECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:21)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:211)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:81)
ECallOutputStruct x20 = ECallOutputStruct{
  .state = Val(0),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
InstOutputBaseStruct x21;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 0), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:9)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:73)
Val x22 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x22), "value out of range!");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x23 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x23), "value out of range!");
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:56)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:33)
Val x24 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._rs2_34._super), 0) * Val(8));
Val x25 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._rs2_12._super), 0) * Val(2));
// builtin Add
Val x26 = ((x24 + x25) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._rs2_0._super), 0));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:58)
Val x27 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._f7_45._super), 0) * Val(16));
Val x28 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._f7_23._super), 0) * Val(4));
// builtin Add
Val x29 = ((x27 + x28) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._f7_01._super), 0));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:59)
Val x30 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._f7_6._super), 0) * Val(64));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:66)
Val x31 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._f7_6._super), 0) * Val(61440));
Val x32 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.decoded._super._f7_6._super), 0) * Val(65535));
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:10)
Val x33 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.isSameReg._super), 0));
SourceRegsStruct x34;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.isSameReg._super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:53)
ValU32Struct x35 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataHigh._super), 0)};
x34 = SourceRegsStruct{
  .rs1 = x35,   .rs2 = x35};
} else if (to_size_t(x33)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:59)
ValU32Struct x36 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataHigh._super), 0)};
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:60)
ValU32Struct x37 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataHigh._super), 0)};
x34 = SourceRegsStruct{
  .rs1 = x36,   .rs2 = x37};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:91)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:33)
Val x38 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs1Low._super), 0) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs2Low._super), 0));
Val x39 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs1High._super), 0) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs2High._super), 0));
// SubU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:33)
// OpSUB(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:96)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:34)
Val x40 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs1Low._super), 0) + Val(65536));
Val x41 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs1High._super), 0) + Val(65535));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x42 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x40 - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs2Low._super), 0)),   .high = (x41 - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs2High._super), 0))},   .newPc = x15};
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpADDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:128)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:40)
Val x43 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs1Low._super), 0) + ((x31 + ((x30 + x29) * Val(32))) + x26));
Val x44 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.input.sourceRegs.rs1High._super), 0) + x32);
MiscOutputStruct x45;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
x45 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x38,   .high = x39},   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
x45 = x42;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
// BitwiseXor(zirgen/circuit/rv32im/v2/dsl/u32.zir:164)
// OpXOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:101)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:35)
Val x46 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 0), _super), 0));
Val x47 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 1), _super), 0));
Val x48 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 2), _super), 0));
Val x49 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 3), _super), 0));
Val x50 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 4), _super), 0));
Val x51 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 5), _super), 0));
Val x52 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 6), _super), 0));
Val x53 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 7), _super), 0));
Val x54 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 8), _super), 0));
Val x55 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 9), _super), 0));
Val x56 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 10), _super), 0));
Val x57 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 11), _super), 0));
Val x58 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 12), _super), 0));
Val x59 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 13), _super), 0));
Val x60 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 14), _super), 0));
Val x61 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._0.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x62 = (((x46 + (x47 * Val(2))) + (x48 * Val(4))) + (x49 * Val(8)));
Val x63 = (((x62 + (x50 * Val(16))) + (x51 * Val(32))) + (x52 * Val(64)));
Val x64 = (((x63 + (x53 * Val(128))) + (x54 * Val(256))) + (x55 * Val(512)));
Val x65 = (((x64 + (x56 * Val(1024))) + (x57 * Val(2048))) + (x58 * Val(4096)));
Val x66 = (((x65 + (x59 * Val(8192))) + (x60 * Val(16384))) + (x61 * Val(32768)));
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x67 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 0), _super), 0));
Val x68 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 1), _super), 0));
Val x69 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 2), _super), 0));
Val x70 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 3), _super), 0));
Val x71 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 4), _super), 0));
Val x72 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 5), _super), 0));
Val x73 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 6), _super), 0));
Val x74 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 7), _super), 0));
Val x75 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 8), _super), 0));
Val x76 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 9), _super), 0));
Val x77 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 10), _super), 0));
Val x78 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 11), _super), 0));
Val x79 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 12), _super), 0));
Val x80 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 13), _super), 0));
Val x81 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 14), _super), 0));
Val x82 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm2._super._0.andXy._1.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x83 = (((x67 + (x68 * Val(2))) + (x69 * Val(4))) + (x70 * Val(8)));
Val x84 = (((x83 + (x71 * Val(16))) + (x72 * Val(32))) + (x73 * Val(64)));
Val x85 = (((x84 + (x74 * Val(128))) + (x75 * Val(256))) + (x76 * Val(512)));
Val x86 = (((x85 + (x77 * Val(1024))) + (x78 * Val(2048))) + (x79 * Val(4096)));
Val x87 = (((x86 + (x80 * Val(8192))) + (x81 * Val(16384))) + (x82 * Val(32768)));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x88 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x38 - (x66 * Val(2))),   .high = (x39 - (x87 * Val(2)))},   .newPc = x15};
x45 = x88;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
// BitwiseOr(zirgen/circuit/rv32im/v2/dsl/u32.zir:159)
// OpOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:106)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:36)
Val x89 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 0), _super), 0));
Val x90 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 1), _super), 0));
Val x91 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 2), _super), 0));
Val x92 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 3), _super), 0));
Val x93 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 4), _super), 0));
Val x94 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 5), _super), 0));
Val x95 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 6), _super), 0));
Val x96 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 7), _super), 0));
Val x97 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 8), _super), 0));
Val x98 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 9), _super), 0));
Val x99 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 10), _super), 0));
Val x100 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 11), _super), 0));
Val x101 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 12), _super), 0));
Val x102 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 13), _super), 0));
Val x103 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 14), _super), 0));
Val x104 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._0.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x105 = (((x89 + (x90 * Val(2))) + (x91 * Val(4))) + (x92 * Val(8)));
Val x106 = (((x105 + (x93 * Val(16))) + (x94 * Val(32))) + (x95 * Val(64)));
Val x107 = (((x106 + (x96 * Val(128))) + (x97 * Val(256))) + (x98 * Val(512)));
Val x108 = (((x107 + (x99 * Val(1024))) + (x100 * Val(2048))) + (x101 * Val(4096)));
Val x109 = (((x108 + (x102 * Val(8192))) + (x103 * Val(16384))) + (x104 * Val(32768)));
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x110 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 0), _super), 0));
Val x111 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 1), _super), 0));
Val x112 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 2), _super), 0));
Val x113 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 3), _super), 0));
Val x114 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 4), _super), 0));
Val x115 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 5), _super), 0));
Val x116 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 6), _super), 0));
Val x117 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 7), _super), 0));
Val x118 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 8), _super), 0));
Val x119 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 9), _super), 0));
Val x120 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 10), _super), 0));
Val x121 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 11), _super), 0));
Val x122 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 12), _super), 0));
Val x123 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 13), _super), 0));
Val x124 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 14), _super), 0));
Val x125 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm3._super._0.andXy._1.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x126 = (((x110 + (x111 * Val(2))) + (x112 * Val(4))) + (x113 * Val(8)));
Val x127 = (((x126 + (x114 * Val(16))) + (x115 * Val(32))) + (x116 * Val(64)));
Val x128 = (((x127 + (x117 * Val(128))) + (x118 * Val(256))) + (x119 * Val(512)));
Val x129 = (((x128 + (x120 * Val(1024))) + (x121 * Val(2048))) + (x122 * Val(4096)));
Val x130 = (((x129 + (x123 * Val(8192))) + (x124 * Val(16384))) + (x125 * Val(32768)));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x131 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x38 - x109),   .high = (x39 - x130)},   .newPc = x15};
x45 = x131;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
// OpAND(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:111)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:37)
Val x132 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 0), _super), 0));
Val x133 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 1), _super), 0));
Val x134 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 2), _super), 0));
Val x135 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 3), _super), 0));
Val x136 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 4), _super), 0));
Val x137 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 5), _super), 0));
Val x138 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 6), _super), 0));
Val x139 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 7), _super), 0));
Val x140 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 8), _super), 0));
Val x141 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 9), _super), 0));
Val x142 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 10), _super), 0));
Val x143 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 11), _super), 0));
Val x144 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 12), _super), 0));
Val x145 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 13), _super), 0));
Val x146 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 14), _super), 0));
Val x147 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._0.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x148 = (((x132 + (x133 * Val(2))) + (x134 * Val(4))) + (x135 * Val(8)));
Val x149 = (((x148 + (x136 * Val(16))) + (x137 * Val(32))) + (x138 * Val(64)));
Val x150 = (((x149 + (x139 * Val(128))) + (x140 * Val(256))) + (x141 * Val(512)));
Val x151 = (((x150 + (x142 * Val(1024))) + (x143 * Val(2048))) + (x144 * Val(4096)));
Val x152 = (((x151 + (x145 * Val(8192))) + (x146 * Val(16384))) + (x147 * Val(32768)));
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x153 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 0), _super), 0));
Val x154 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 1), _super), 0));
Val x155 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 2), _super), 0));
Val x156 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 3), _super), 0));
Val x157 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 4), _super), 0));
Val x158 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 5), _super), 0));
Val x159 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 6), _super), 0));
Val x160 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 7), _super), 0));
Val x161 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 8), _super), 0));
Val x162 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 9), _super), 0));
Val x163 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 10), _super), 0));
Val x164 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 11), _super), 0));
Val x165 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 12), _super), 0));
Val x166 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 13), _super), 0));
Val x167 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 14), _super), 0));
Val x168 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm4._super._0._1.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x169 = (((x153 + (x154 * Val(2))) + (x155 * Val(4))) + (x156 * Val(8)));
Val x170 = (((x169 + (x157 * Val(16))) + (x158 * Val(32))) + (x159 * Val(64)));
Val x171 = (((x170 + (x160 * Val(128))) + (x161 * Val(256))) + (x162 * Val(512)));
Val x172 = (((x171 + (x163 * Val(1024))) + (x164 * Val(2048))) + (x165 * Val(4096)));
Val x173 = (((x172 + (x166 * Val(8192))) + (x167 * Val(16384))) + (x168 * Val(32768)));
x45 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x152,   .high = x173},   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:133)
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:116)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:38)
Val x174 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm5.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x174), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x175 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm5.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x175), "value out of range!");
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:126)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:134)
Val x176 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm5.cmp.s1.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x176), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:135)
Val x177 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm5.cmp.s2.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x177), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:136)
Val x178 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm5.cmp.s3.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x178), "value out of range!");
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:117)
DenormedValU32Struct x179 = DenormedValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm5.cmp.isLessThan._super), 0),   .high = Val(0)};
x45 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x179,   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// OpSLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:122)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:39)
Val x180 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm6._super.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x180), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x181 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm6._super.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x181), "value out of range!");
// builtin Sub
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:120)
Val x182 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0.miscOutput.arm6._super.cmp.diff.highCarry._super), 0));
x45 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x182,   .high = Val(0)},   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
x45 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x43,   .high = x44},   .newPc = x15};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:23)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:42)
Val x183 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0._super.writeData.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x183), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x184 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0._super.writeData.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x184), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:24)
Val x185 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0._super.pcNorm.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x185), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x186 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0._super.pcNorm.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x186), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x187 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0._super.pcNorm.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm0._super.pcNorm.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x187,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 1), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:9)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:74)
Val x188 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x188), "value out of range!");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x189 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x189), "value out of range!");
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:56)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:33)
Val x190 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._rs2_34._super), 0) * Val(8));
Val x191 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._rs2_12._super), 0) * Val(2));
// builtin Add
Val x192 = ((x190 + x191) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._rs2_0._super), 0));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:58)
Val x193 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._f7_45._super), 0) * Val(16));
Val x194 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._f7_23._super), 0) * Val(4));
// builtin Add
Val x195 = ((x193 + x194) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._f7_01._super), 0));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:59)
Val x196 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._f7_6._super), 0) * Val(64));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:66)
Val x197 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._f7_6._super), 0) * Val(61440));
Val x198 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._f7_6._super), 0) * Val(65535));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:68)
Val x199 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._rd_0._super), 0) * Val(2048));
Val x200 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._rd_34._super), 0) * Val(8));
// builtin Add
Val x201 = (((x197 + x199) + (x195 * Val(32))) + x200);
// builtin Mul
Val x202 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.decoded._super._rd_12._super), 0) * Val(2));
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:10)
Val x203 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.isSameReg._super), 0));
SourceRegsStruct x204;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.isSameReg._super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:53)
ValU32Struct x205 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataHigh._super), 0)};
x204 = SourceRegsStruct{
  .rs1 = x205,   .rs2 = x205};
} else if (to_size_t(x203)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:59)
ValU32Struct x206 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataHigh._super), 0)};
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:60)
ValU32Struct x207 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataHigh._super), 0)};
x204 = SourceRegsStruct{
  .rs1 = x206,   .rs2 = x207};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Add
// BitwiseXor(zirgen/circuit/rv32im/v2/dsl/u32.zir:165)
// OpXORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:133)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:49)
Val x208 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.rs1Low._super), 0) + ((x197 + ((x196 + x195) * Val(32))) + x192));
Val x209 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.input.sourceRegs.rs1High._super), 0) + x198);
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:161)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:54)
Val x210 = (x8 + (x201 + x202));
Val x211 = (x10 + x198);
MiscOutputStruct x212;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
// BitwiseXor(zirgen/circuit/rv32im/v2/dsl/u32.zir:164)
// OpXORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:133)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:49)
Val x213 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 0), _super), 0));
Val x214 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 1), _super), 0));
Val x215 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 2), _super), 0));
Val x216 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 3), _super), 0));
Val x217 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 4), _super), 0));
Val x218 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 5), _super), 0));
Val x219 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 6), _super), 0));
Val x220 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 7), _super), 0));
Val x221 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 8), _super), 0));
Val x222 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 9), _super), 0));
Val x223 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 10), _super), 0));
Val x224 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 11), _super), 0));
Val x225 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 12), _super), 0));
Val x226 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 13), _super), 0));
Val x227 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 14), _super), 0));
Val x228 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._0.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x229 = (((x213 + (x214 * Val(2))) + (x215 * Val(4))) + (x216 * Val(8)));
Val x230 = (((x229 + (x217 * Val(16))) + (x218 * Val(32))) + (x219 * Val(64)));
Val x231 = (((x230 + (x220 * Val(128))) + (x221 * Val(256))) + (x222 * Val(512)));
Val x232 = (((x231 + (x223 * Val(1024))) + (x224 * Val(2048))) + (x225 * Val(4096)));
Val x233 = (((x232 + (x226 * Val(8192))) + (x227 * Val(16384))) + (x228 * Val(32768)));
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x234 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 0), _super), 0));
Val x235 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 1), _super), 0));
Val x236 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 2), _super), 0));
Val x237 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 3), _super), 0));
Val x238 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 4), _super), 0));
Val x239 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 5), _super), 0));
Val x240 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 6), _super), 0));
Val x241 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 7), _super), 0));
Val x242 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 8), _super), 0));
Val x243 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 9), _super), 0));
Val x244 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 10), _super), 0));
Val x245 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 11), _super), 0));
Val x246 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 12), _super), 0));
Val x247 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 13), _super), 0));
Val x248 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 14), _super), 0));
Val x249 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm0._super._0.andXy._1.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x250 = (((x234 + (x235 * Val(2))) + (x236 * Val(4))) + (x237 * Val(8)));
Val x251 = (((x250 + (x238 * Val(16))) + (x239 * Val(32))) + (x240 * Val(64)));
Val x252 = (((x251 + (x241 * Val(128))) + (x242 * Val(256))) + (x243 * Val(512)));
Val x253 = (((x252 + (x244 * Val(1024))) + (x245 * Val(2048))) + (x246 * Val(4096)));
Val x254 = (((x253 + (x247 * Val(8192))) + (x248 * Val(16384))) + (x249 * Val(32768)));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x255 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x208 - (x233 * Val(2))),   .high = (x209 - (x254 * Val(2)))},   .newPc = x15};
x212 = x255;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
// BitwiseOr(zirgen/circuit/rv32im/v2/dsl/u32.zir:159)
// OpORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:138)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:50)
Val x256 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 0), _super), 0));
Val x257 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 1), _super), 0));
Val x258 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 2), _super), 0));
Val x259 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 3), _super), 0));
Val x260 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 4), _super), 0));
Val x261 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 5), _super), 0));
Val x262 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 6), _super), 0));
Val x263 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 7), _super), 0));
Val x264 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 8), _super), 0));
Val x265 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 9), _super), 0));
Val x266 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 10), _super), 0));
Val x267 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 11), _super), 0));
Val x268 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 12), _super), 0));
Val x269 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 13), _super), 0));
Val x270 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 14), _super), 0));
Val x271 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._0.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x272 = (((x256 + (x257 * Val(2))) + (x258 * Val(4))) + (x259 * Val(8)));
Val x273 = (((x272 + (x260 * Val(16))) + (x261 * Val(32))) + (x262 * Val(64)));
Val x274 = (((x273 + (x263 * Val(128))) + (x264 * Val(256))) + (x265 * Val(512)));
Val x275 = (((x274 + (x266 * Val(1024))) + (x267 * Val(2048))) + (x268 * Val(4096)));
Val x276 = (((x275 + (x269 * Val(8192))) + (x270 * Val(16384))) + (x271 * Val(32768)));
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x277 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 0), _super), 0));
Val x278 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 1), _super), 0));
Val x279 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 2), _super), 0));
Val x280 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 3), _super), 0));
Val x281 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 4), _super), 0));
Val x282 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 5), _super), 0));
Val x283 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 6), _super), 0));
Val x284 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 7), _super), 0));
Val x285 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 8), _super), 0));
Val x286 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 9), _super), 0));
Val x287 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 10), _super), 0));
Val x288 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 11), _super), 0));
Val x289 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 12), _super), 0));
Val x290 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 13), _super), 0));
Val x291 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 14), _super), 0));
Val x292 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm1._super._0.andXy._1.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x293 = (((x277 + (x278 * Val(2))) + (x279 * Val(4))) + (x280 * Val(8)));
Val x294 = (((x293 + (x281 * Val(16))) + (x282 * Val(32))) + (x283 * Val(64)));
Val x295 = (((x294 + (x284 * Val(128))) + (x285 * Val(256))) + (x286 * Val(512)));
Val x296 = (((x295 + (x287 * Val(1024))) + (x288 * Val(2048))) + (x289 * Val(4096)));
Val x297 = (((x296 + (x290 * Val(8192))) + (x291 * Val(16384))) + (x292 * Val(32768)));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
MiscOutputStruct x298 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x208 - x276),   .high = (x209 - x297)},   .newPc = x15};
x212 = x298;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
// OpANDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:143)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:51)
Val x299 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 0), _super), 0));
Val x300 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 1), _super), 0));
Val x301 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 2), _super), 0));
Val x302 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 3), _super), 0));
Val x303 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 4), _super), 0));
Val x304 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 5), _super), 0));
Val x305 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 6), _super), 0));
Val x306 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 7), _super), 0));
Val x307 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 8), _super), 0));
Val x308 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 9), _super), 0));
Val x309 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 10), _super), 0));
Val x310 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 11), _super), 0));
Val x311 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 12), _super), 0));
Val x312 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 13), _super), 0));
Val x313 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 14), _super), 0));
Val x314 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._0.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x315 = (((x299 + (x300 * Val(2))) + (x301 * Val(4))) + (x302 * Val(8)));
Val x316 = (((x315 + (x303 * Val(16))) + (x304 * Val(32))) + (x305 * Val(64)));
Val x317 = (((x316 + (x306 * Val(128))) + (x307 * Val(256))) + (x308 * Val(512)));
Val x318 = (((x317 + (x309 * Val(1024))) + (x310 * Val(2048))) + (x311 * Val(4096)));
Val x319 = (((x318 + (x312 * Val(8192))) + (x313 * Val(16384))) + (x314 * Val(32768)));
// builtin Mul
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x320 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 0), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 0), _super), 0));
Val x321 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 1), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 1), _super), 0));
Val x322 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 2), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 2), _super), 0));
Val x323 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 3), _super), 0));
Val x324 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 4), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 4), _super), 0));
Val x325 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 5), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 5), _super), 0));
Val x326 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 6), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 6), _super), 0));
Val x327 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 7), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 7), _super), 0));
Val x328 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 8), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 8), _super), 0));
Val x329 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 9), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 9), _super), 0));
Val x330 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 10), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 10), _super), 0));
Val x331 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 11), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 11), _super), 0));
Val x332 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 12), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 12), _super), 0));
Val x333 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 13), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 13), _super), 0));
Val x334 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 14), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 14), _super), 0));
Val x335 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsX._super), 15), _super), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm2._super._0._1.bitsY._super), 15), _super), 0));
// builtin Add
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:29)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x336 = (((x320 + (x321 * Val(2))) + (x322 * Val(4))) + (x323 * Val(8)));
Val x337 = (((x336 + (x324 * Val(16))) + (x325 * Val(32))) + (x326 * Val(64)));
Val x338 = (((x337 + (x327 * Val(128))) + (x328 * Val(256))) + (x329 * Val(512)));
Val x339 = (((x338 + (x330 * Val(1024))) + (x331 * Val(2048))) + (x332 * Val(4096)));
Val x340 = (((x339 + (x333 * Val(8192))) + (x334 * Val(16384))) + (x335 * Val(32768)));
x212 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x319,   .high = x340},   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:133)
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:148)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:52)
Val x341 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm3.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x341), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x342 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm3.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x342), "value out of range!");
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:126)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:134)
Val x343 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm3.cmp.s1.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x343), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:135)
Val x344 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm3.cmp.s2.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x344), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:136)
Val x345 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm3.cmp.s3.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x345), "value out of range!");
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:149)
DenormedValU32Struct x346 = DenormedValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm3.cmp.isLessThan._super), 0),   .high = Val(0)};
x212 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x346,   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// OpSLTIU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:154)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:53)
Val x347 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm4._super.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x347), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x348 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm4._super.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x348), "value out of range!");
// builtin Sub
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:120)
Val x349 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm4._super.cmp.diff.highCarry._super), 0));
x212 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x349,   .high = Val(0)},   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:161)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:54)
Val x350 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm5._super.cmp.isEqual._super), 0) * x210);
// builtin Sub
Val x351 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm5._super.cmp.isEqual._super), 0));
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x352 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm5._super.cmp.isEqual._super), 0) * x211);
x212 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = x17,   .newPc = DenormedValU32Struct{
  .low = (x350 + (x351 * x14)),   .high = (x352 + (x351 * x10))}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// builtin Sub
// OpBNE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:167)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:55)
Val x353 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm6._super.cmp.isEqual._super), 0));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x354 = (Val(1) - x353);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x355 = DenormedValU32Struct{
  .low = ((x353 * x210) + (x354 * x14)),   .high = ((x353 * x211) + (x354 * x10))};
x212 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = x17,   .newPc = x355};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:133)
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:172)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:56)
Val x356 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x356), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x357 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x357), "value out of range!");
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:126)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:134)
Val x358 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.s1.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x358), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:135)
Val x359 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.s2.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x359), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:136)
Val x360 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.s3.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x360), "value out of range!");
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:173)
Val x361 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.isLessThan._super), 0) * x210);
// builtin Sub
Val x362 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.isLessThan._super), 0));
// builtin Mul
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x363 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1.miscOutput.arm7.cmp.isLessThan._super), 0) * x211);
x212 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = x17,   .newPc = DenormedValU32Struct{
  .low = (x361 + (x362 * x14)),   .high = (x363 + (x362 * x10))}};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:23)
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:58)
Val x364 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1._super.writeData.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x364), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x365 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1._super.writeData.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x365), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:24)
Val x366 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1._super.pcNorm.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x366), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x367 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1._super.pcNorm.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x367), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x368 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1._super.pcNorm.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm1._super.pcNorm.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x368,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 2), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:9)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:75)
Val x369 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x369), "value out of range!");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x370 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x370), "value out of range!");
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:56)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:33)
Val x371 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rs2_34._super), 0) * Val(8));
Val x372 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rs2_12._super), 0) * Val(2));
// builtin Add
Val x373 = ((x371 + x372) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rs2_0._super), 0));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:58)
Val x374 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f7_45._super), 0) * Val(16));
Val x375 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f7_23._super), 0) * Val(4));
// builtin Add
Val x376 = ((x374 + x375) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f7_01._super), 0));
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:59)
Val x377 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f7_6._super), 0) * Val(64));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:60)
Val x378 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f3_2._super), 0) * Val(4));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:66)
Val x379 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f7_6._super), 0) * Val(61440));
Val x380 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f7_6._super), 0) * Val(65535));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:68)
Val x381 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rd_0._super), 0) * Val(2048));
Val x382 = (x376 * Val(32));
Val x383 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rd_34._super), 0) * Val(8));
// builtin Add
Val x384 = (((x379 + x381) + x382) + x383);
// builtin Mul
Val x385 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rd_12._super), 0) * Val(2));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:69)
Val x386 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rs1_0._super), 0) * Val(32768));
Val x387 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f3_2._super), 0) * Val(16384));
Val x388 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f3_01._super), 0) * Val(4096));
// builtin Add
Val x389 = ((x386 + x387) + x388);
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:71)
Val x390 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rs2_0._super), 0) * Val(2048));
// builtin Add
Val x391 = (((x386 + ((x378 + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f3_01._super), 0)) * Val(4096))) + x390) + x382);
// builtin Mul
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:72)
Val x392 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._f7_6._super), 0) * Val(65520));
Val x393 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rs1_34._super), 0) * Val(4));
// builtin Add
Val x394 = ((x392 + x393) + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded._super._rs1_12._super), 0));
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:10)
Val x395 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.isSameReg._super), 0));
SourceRegsStruct x396;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.isSameReg._super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:53)
ValU32Struct x397 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataHigh._super), 0)};
x396 = SourceRegsStruct{
  .rs1 = x397,   .rs2 = x397};
} else if (to_size_t(x395)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:59)
ValU32Struct x398 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataHigh._super), 0)};
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:60)
ValU32Struct x399 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataHigh._super), 0)};
x396 = SourceRegsStruct{
  .rs1 = x398,   .rs2 = x399};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Add
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:179)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:65)
Val x400 = (x8 + (x384 + x385));
Val x401 = (x10 + x380);
// OpJALR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:205)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:69)
Val x402 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.rs1Low._super), 0) + ((x379 + ((x377 + x376) * Val(32))) + x373));
Val x403 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.sourceRegs.rs1High._super), 0) + x380);
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:16)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:79)
// OpAUIPC(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:215)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:71)
MiscOutputStruct x404 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x8 + x389),   .high = (x10 + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded.loadInst.io.newTxn.dataHigh._super), 0))},   .newPc = x15};
MiscOutputStruct x405;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:133)
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:178)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:65)
Val x406 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm0.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x406), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x407 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm0.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x407), "value out of range!");
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:126)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:134)
Val x408 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm0.cmp.s1.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x408), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:135)
Val x409 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm0.cmp.s2.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x409), "value out of range!");
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:136)
Val x410 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm0.cmp.s3.restTimesTwo.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x410), "value out of range!");
// builtin Sub
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:179)
Val x411 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm0.cmp.isLessThan._super), 0));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x412 = (Val(1) - x411);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x413 = DenormedValU32Struct{
  .low = ((x411 * x400) + (x412 * x14)),   .high = ((x411 * x401) + (x412 * x10))};
x405 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = x17,   .newPc = x413};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:184)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:66)
Val x414 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm1._super.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x414), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x415 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm1._super.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x415), "value out of range!");
// builtin Sub
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:120)
Val x416 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm1._super.cmp.diff.highCarry._super), 0));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:185)
Val x417 = (Val(1) - x416);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x418 = DenormedValU32Struct{
  .low = ((x416 * x400) + (x417 * x14)),   .high = ((x416 * x401) + (x417 * x10))};
x405 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = x17,   .newPc = x418};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:190)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:67)
Val x419 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm2._super.cmp.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x419), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x420 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm2._super.cmp.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x420), "value out of range!");
// builtin Sub
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:120)
Val x421 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.miscOutput.arm2._super.cmp.diff.highCarry._super), 0));
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:191)
Val x422 = (Val(1) - x421);
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x423 = (Val(1) - x422);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x424 = DenormedValU32Struct{
  .low = ((x422 * x400) + (x423 * x14)),   .high = ((x422 * x401) + (x423 * x10))};
x405 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = x17,   .newPc = x424};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
x405 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x15,   .newPc = DenormedValU32Struct{
  .low = (x8 + ((x391 + x371) + x372)),   .high = (x10 + x394)}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
x405 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x15,   .newPc = DenormedValU32Struct{
  .low = x402,   .high = x403}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
x405 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x389,   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2.input.decoded.loadInst.io.newTxn.dataHigh._super), 0)},   .newPc = x15};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
x405 = x404;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
x405 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = x17,   .newPc = DenormedValU32Struct{
  .low = x8,   .high = x10}};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:23)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:74)
Val x425 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2._super.writeData.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x425), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x426 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2._super.writeData.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x426), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:24)
Val x427 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2._super.pcNorm.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x427), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x428 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2._super.pcNorm.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x428), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x429 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2._super.pcNorm.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm2._super.pcNorm.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x429,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 3), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:10)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:76)
Val x430 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.decoded.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x430), "value out of range!");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x431 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.decoded.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x431), "value out of range!");
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:11)
Val x432 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.isSameReg._super), 0));
SourceRegsStruct x433;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.isSameReg._super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:53)
ValU32Struct x434 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataHigh._super), 0)};
x433 = SourceRegsStruct{
  .rs1 = x434,   .rs2 = x434};
} else if (to_size_t(x432)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:59)
ValU32Struct x435 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataHigh._super), 0)};
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:60)
ValU32Struct x436 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataHigh._super), 0)};
x433 = SourceRegsStruct{
  .rs1 = x435,   .rs2 = x436};
} else {
   assert(0 && "Reached unreachable mux arm");
}
ValU32Struct x437;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:50)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:26)
Val x438 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0.shiftMul.checkU16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x438), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoMul(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:42)
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:51)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x439 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x439), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x440 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x440), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x441 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x441), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x442 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x442), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x443 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x443), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x444 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x444), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x445 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x445), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x446 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x446), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x447 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x447), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x448 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x448), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x449 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x449), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x450 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x450), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x451 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x451), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x452 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x452), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x453 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x453), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x454 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x454), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x455 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x455), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x456 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x456), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:156)
ValU32Struct x457 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s0.out.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm0._0.mul.s1.out.arg.val._super), 0)};
x437 = x457;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:57)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:27)
Val x458 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1.shiftMul.checkU16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x458), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoMul(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:42)
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:58)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x459 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x459), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x460 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x460), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x461 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x461), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x462 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x462), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x463 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x463), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x464 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x464), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x465 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x465), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x466 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x466), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x467 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x467), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x468 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x468), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x469 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x469), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x470 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x470), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x471 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x471), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x472 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x472), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x473 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x473), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x474 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x474), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x475 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x475), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x476 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x476), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:156)
ValU32Struct x477 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s0.out.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm1._0.mul.s1.out.arg.val._super), 0)};
x437 = x477;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// OpMUL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:64)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:28)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x478 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x478), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x479 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x479), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x480 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x480), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x481 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x481), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x482 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x482), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x483 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x483), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x484 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x484), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x485 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x485), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x486 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x486), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x487 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x487), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x488 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x488), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x489 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x489), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x490 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x490), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x491 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x491), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x492 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x492), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x493 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x493), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x494 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x494), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x495 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x495), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:156)
ValU32Struct x496 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s0.out.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm2._super._0.mul.s1.out.arg.val._super), 0)};
x437 = x496;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// OpMULH(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:70)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:29)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x497 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x497), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x498 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x498), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x499 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x499), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x500 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x500), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x501 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x501), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x502 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x502), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x503 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x503), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x504 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x504), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x505 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x505), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x506 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x506), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x507 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x507), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x508 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x508), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x509 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x509), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x510 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x510), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x511 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x511), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x512 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x512), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x513 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x513), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x514 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x514), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:157)
ValU32Struct x515 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s2.out.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm3._super._0.mul.s3Out.arg.val._super), 0)};
x437 = x515;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// OpMULHSU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:76)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:30)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x516 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x516), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x517 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x517), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x518 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x518), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x519 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x519), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x520 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x520), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x521 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x521), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x522 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x522), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x523 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x523), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x524 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x524), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x525 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x525), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x526 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x526), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x527 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x527), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x528 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x528), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x529 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x529), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x530 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x530), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x531 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x531), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x532 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x532), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x533 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x533), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:157)
ValU32Struct x534 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s2.out.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm4._super._0.mul.s3Out.arg.val._super), 0)};
x437 = x534;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// OpMULHU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:82)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:31)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x535 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x535), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x536 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x536), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x537 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x537), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x538 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x538), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x539 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x539), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x540 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x540), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x541 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x541), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x542 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x542), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x543 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x543), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x544 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x544), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x545 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x545), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x546 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x546), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x547 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x547), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x548 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x548), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x549 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x549), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x550 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x550), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x551 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x551), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x552 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x552), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:157)
ValU32Struct x553 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s2.out.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.mulOutput.arm5._super._0.mul.s3Out.arg.val._super), 0)};
x437 = x553;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
x437 = x18;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
x437 = x18;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:36)
Val x554 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.pcAdd.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x554), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x555 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.pcAdd.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x555), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x556 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.pcAdd.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm3.pcAdd.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x556,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 4), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:10)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:77)
Val x557 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.decoded.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x557), "value out of range!");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x558 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.decoded.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x558), "value out of range!");
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:11)
Val x559 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.isSameReg._super), 0));
SourceRegsStruct x560;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.isSameReg._super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:53)
ValU32Struct x561 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataHigh._super), 0)};
x560 = SourceRegsStruct{
  .rs1 = x561,   .rs2 = x561};
} else if (to_size_t(x559)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:59)
ValU32Struct x562 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataHigh._super), 0)};
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:60)
ValU32Struct x563 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataHigh._super), 0)};
x560 = SourceRegsStruct{
  .rs1 = x562,   .rs2 = x563};
} else {
   assert(0 && "Reached unreachable mux arm");
}
ValU32Struct x564;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:114)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:26)
Val x565 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super.shiftMul.checkU16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x565), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:54)
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:115)
ValU32Struct x566 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.quotLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.quotHigh._super), 0)};
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
Val x567 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x567), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x568 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x568), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x569 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x569), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x570 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x570), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x571 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x571), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x572 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x572), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x573 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x573), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x574 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x574), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x575 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x575), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x576 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x576), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x577 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x577), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x578 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x578), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x579 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x579), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x580 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x580), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x581 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x581), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x582 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x582), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x583 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x583), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x584 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x584), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x585 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x585), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x586 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x586), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x587 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x587), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x588 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x588), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x589 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x589), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x590 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x590), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x591 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x591), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x592 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.isZero._super._super), 0));
ComponentStruct x593;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0.isZero._super._super), 0))) {
x593 = x19;
} else if (to_size_t(x592)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x594 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x594), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x595 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm0._super._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x595), "value out of range!");
x593 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x564 = x566;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:120)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:27)
Val x596 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1.shiftMul.checkU16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x596), "value out of range!");
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:99)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:121)
Val x597 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1.flip.rest.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x597), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:122)
Val x598 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x598), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x599 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x599), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x600 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x600), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x601 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x601), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x602 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x602), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x603 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x603), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x604 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x604), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x605 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x605), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x606 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x606), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x607 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x607), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x608 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x608), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x609 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x609), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x610 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x610), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x611 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x611), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x612 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x612), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x613 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x613), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x614 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x614), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x615 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x615), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x616 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x616), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x617 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x617), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x618 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x618), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x619 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x619), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x620 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x620), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x621 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x621), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x622 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x622), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x623 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.isZero._super._super), 0));
ComponentStruct x624;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.isZero._super._super), 0))) {
x624 = x19;
} else if (to_size_t(x623)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x625 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x625), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x626 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x626), "value out of range!");
x624 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Sub
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:105)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:109)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:123)
Val x627 = (Val(65535) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.quotLow._super), 0));
// builtin Mul
Val x628 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1.flip._super._super), 0) * x627);
// builtin Sub
Val x629 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1.flip._super._super), 0));
Val x630 = (Val(65535) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.quotHigh._super), 0));
// builtin Mul
Val x631 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1.flip._super._super), 0) * x630);
x564 = ValU32Struct{
  .low = (x628 + (x629 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.quotLow._super), 0))),   .high = (x631 + (x629 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm1._0.quotHigh._super), 0)))};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:128)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:28)
Val x632 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super.shiftMul.checkU16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x632), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:54)
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:129)
ValU32Struct x633 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.quotLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.quotHigh._super), 0)};
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
Val x634 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x634), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x635 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x635), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x636 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x636), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x637 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x637), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x638 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x638), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x639 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x639), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x640 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x640), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x641 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x641), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x642 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x642), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x643 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x643), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x644 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x644), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x645 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x645), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x646 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x646), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x647 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x647), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x648 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x648), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x649 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x649), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x650 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x650), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x651 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x651), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x652 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x652), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x653 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x653), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x654 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x654), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x655 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x655), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x656 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x656), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x657 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x657), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x658 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x658), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x659 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.isZero._super._super), 0));
ComponentStruct x660;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0.isZero._super._super), 0))) {
x660 = x19;
} else if (to_size_t(x659)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x661 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x661), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x662 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm2._super._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x662), "value out of range!");
x660 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x564 = x633;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:134)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:29)
Val x663 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3.shiftMul.checkU16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x663), "value out of range!");
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:99)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:135)
Val x664 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3.flip.rest.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x664), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:136)
Val x665 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x665), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x666 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x666), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x667 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x667), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x668 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x668), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x669 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x669), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x670 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x670), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x671 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x671), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x672 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x672), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x673 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x673), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x674 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x674), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x675 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x675), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x676 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x676), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x677 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x677), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x678 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x678), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x679 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x679), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x680 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x680), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x681 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x681), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x682 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x682), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x683 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x683), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x684 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x684), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x685 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x685), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x686 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x686), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x687 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x687), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x688 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x688), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x689 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x689), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x690 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.isZero._super._super), 0));
ComponentStruct x691;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.isZero._super._super), 0))) {
x691 = x19;
} else if (to_size_t(x690)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x692 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x692), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x693 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x693), "value out of range!");
x691 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Sub
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:105)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:109)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:137)
Val x694 = (Val(65535) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.quotLow._super), 0));
// builtin Mul
Val x695 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3.flip._super._super), 0) * x694);
// builtin Sub
Val x696 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3.flip._super._super), 0));
Val x697 = (Val(65535) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.quotHigh._super), 0));
// builtin Mul
Val x698 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3.flip._super._super), 0) * x697);
x564 = ValU32Struct{
  .low = (x695 + (x696 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.quotLow._super), 0))),   .high = (x698 + (x696 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm3._0.quotHigh._super), 0)))};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:54)
// OpDIV(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:142)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:30)
ValU32Struct x699 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.quotLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.quotHigh._super), 0)};
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
Val x700 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x700), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x701 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x701), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x702 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x702), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x703 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x703), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x704 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x704), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x705 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x705), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x706 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x706), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x707 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x707), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x708 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x708), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x709 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x709), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x710 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x710), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x711 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x711), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x712 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x712), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x713 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x713), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x714 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x714), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x715 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x715), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x716 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x716), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x717 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x717), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x718 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x718), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x719 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x719), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x720 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x720), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x721 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x721), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x722 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x722), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x723 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x723), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x724 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x724), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x725 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.isZero._super._super), 0));
ComponentStruct x726;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0.isZero._super._super), 0))) {
x726 = x19;
} else if (to_size_t(x725)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x727 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x727), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x728 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm4._super._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x728), "value out of range!");
x726 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x564 = x699;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:54)
// OpDIVU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:147)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:31)
ValU32Struct x729 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.quotLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.quotHigh._super), 0)};
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
Val x730 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x730), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x731 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x731), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x732 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x732), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x733 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x733), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x734 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x734), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x735 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x735), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x736 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x736), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x737 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x737), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x738 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x738), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x739 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x739), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x740 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x740), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x741 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x741), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x742 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x742), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x743 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x743), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x744 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x744), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x745 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x745), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x746 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x746), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x747 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x747), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x748 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x748), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x749 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x749), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x750 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x750), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x751 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x751), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x752 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x752), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x753 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x753), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x754 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x754), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x755 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.isZero._super._super), 0));
ComponentStruct x756;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0.isZero._super._super), 0))) {
x756 = x19;
} else if (to_size_t(x755)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x757 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x757), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x758 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm5._super._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x758), "value out of range!");
x756 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x564 = x729;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
// OpREM(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:152)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:32)
Val x759 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x759), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x760 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x760), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:58)
ValU32Struct x761 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.remLow.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.remHigh.arg.val._super), 0)};
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x762 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x762), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x763 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x763), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x764 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x764), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x765 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x765), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x766 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x766), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x767 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x767), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x768 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x768), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x769 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x769), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x770 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x770), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x771 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x771), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x772 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x772), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x773 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x773), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x774 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x774), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x775 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x775), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x776 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x776), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x777 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x777), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x778 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x778), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x779 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x779), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x780 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x780), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x781 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x781), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x782 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x782), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x783 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x783), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x784 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x784), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x785 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.isZero._super._super), 0));
ComponentStruct x786;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0.isZero._super._super), 0))) {
x786 = x19;
} else if (to_size_t(x785)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x787 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x787), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x788 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm6._super._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x788), "value out of range!");
x786 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x564 = x761;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
// OpREMU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:157)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:33)
Val x789 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.remLow.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x789), "value out of range!");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
Val x790 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.remHigh.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x790), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:58)
ValU32Struct x791 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.remLow.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.remHigh.arg.val._super), 0)};
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:62)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:117)
INVOKE_EXTERN(ctx,assert, Val(0), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x792 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.ax.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x792), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x793 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.ax.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x793), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x794 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.ax.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x794), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x795 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.ax.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x795), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x796 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.ax.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x796), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x797 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.bx.b0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x797), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
Val x798 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.bx.b1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x798), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x799 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.bx.b2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x799), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:54)
Val x800 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.bx.b3.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x800), "value out of range!");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x801 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.bx.b3Top7times2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x801), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:123)
Val x802 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.cRestTimes2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x802), "value out of range!");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:126)
Val x803 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.s0.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x803), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x804 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.s0.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x804), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x805 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.s1.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x805), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x806 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.s1.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x806), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x807 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.s2.out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x807), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
Val x808 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.s2.carryByte.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x808), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:154)
Val x809 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.mul.s3Out.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x809), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x810 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x810), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x811 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.denomAbs.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x811), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x812 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.denomAbs.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x812), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x813 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.remNormal.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x813), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x814 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.remNormal.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x814), "value out of range!");
// builtin Sub
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x815 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.isZero._super._super), 0));
ComponentStruct x816;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0.isZero._super._super), 0))) {
x816 = x19;
} else if (to_size_t(x815)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
Val x817 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0._3.arm1.lt.diff.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x817), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x818 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.mulOutput.arm7._super._0._3.arm1.lt.diff.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x818), "value out of range!");
x816 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x564 = x791;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:36)
Val x819 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.pcAdd.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x819), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x820 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.pcAdd.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x820), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x821 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.pcAdd.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm4.pcAdd.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x821,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 5), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:10)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:78)
Val x822 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.decoded.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x822), "value out of range!");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x823 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.decoded.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x823), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:12)
Val x824 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addrU32.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x824), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x825 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addrU32.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x825), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:13)
Val x826 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x826), "value out of range!");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x827 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x827), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:14)
ValU32Struct x828 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.data.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.data.io.newTxn.dataHigh._super), 0)};
// builtin Sub
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:89)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:53)
Val x829 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addr.low0._super), 0));
// builtin Mul
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:99)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:54)
Val x830 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addr.low1._super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.data.io.newTxn.dataHigh._super), 0));
// builtin Sub
Val x831 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addr.low1._super), 0));
// builtin Add
Val x832 = (x830 + (x831 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.data.io.newTxn.dataLow._super), 0)));
ValU32Struct x833;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:88)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:53)
Val x834 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm0._super.bytes.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x834), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x835 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm0._super.bytes.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x835), "value out of range!");
// builtin Mul
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:89)
Val x836 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addr.low0._super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm0._super.bytes.byte1.arg.val._super), 0));
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:91)
Val x837 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm0._super.low7x2.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x837), "value out of range!");
// builtin Mul
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:93)
Val x838 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm0._super.highBit._super), 0) * Val(65280));
Val x839 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm0._super.highBit._super), 0) * Val(65535));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
ValU32Struct x840 = ValU32Struct{
  .low = ((x836 + (x829 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm0._super.bytes.byte0.arg.val._super), 0))) + x838),   .high = x839};
x833 = x840;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:101)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:54)
Val x841 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm1._super.low15x2.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x841), "value out of range!");
// builtin Mul
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:103)
Val x842 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm1._super.highBit._super), 0) * Val(65535));
x833 = ValU32Struct{
  .low = x832,   .high = x842};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
x833 = x828;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:116)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:56)
Val x843 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm3._super.bytes.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x843), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x844 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm3._super.bytes.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x844), "value out of range!");
// builtin Mul
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:117)
Val x845 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.input.addr.low0._super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm3._super.bytes.byte1.arg.val._super), 0));
x833 = ValU32Struct{
  .low = (x845 + (x829 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.output.arm3._super.bytes.byte0.arg.val._super), 0))),   .high = Val(0)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
x833 = ValU32Struct{
  .low = x832,   .high = Val(0)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
x833 = x18;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
x833 = x18;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
x833 = x18;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:63)
Val x846 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.pcAdd.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x846), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x847 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.pcAdd.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x847), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x848 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.pcAdd.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm5.pcAdd.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x848,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 6), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:20)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:79)
Val x849 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.decoded.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x849), "value out of range!");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x850 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.decoded.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x850), "value out of range!");
// builtin Sub
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:50)
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:21)
Val x851 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.isSameReg._super), 0));
SourceRegsStruct x852;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.isSameReg._super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:53)
ValU32Struct x853 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.sourceRegs.arm0._super.rboth._super.io.newTxn.dataHigh._super), 0)};
x852 = SourceRegsStruct{
  .rs1 = x853,   .rs2 = x853};
} else if (to_size_t(x851)) {
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:59)
ValU32Struct x854 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.sourceRegs.arm1._0._super.io.newTxn.dataHigh._super), 0)};
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:60)
ValU32Struct x855 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.sourceRegs.arm1._1._super.io.newTxn.dataHigh._super), 0)};
x852 = SourceRegsStruct{
  .rs1 = x854,   .rs2 = x855};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ReadSourceRegs(zirgen/circuit/rv32im/v2/dsl/inst.zir:67)
ValU32Struct x856 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.rs2Low._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.rs2High._super), 0)};
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:24)
Val x857 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addrU32.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x857), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x858 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addrU32.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x858), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:25)
Val x859 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x859), "value out of range!");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x860 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x860), "value out of range!");
// builtin Sub
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:137)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:71)
Val x861 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.low0._super), 0));
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:141)
Val x862 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.low1._super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.data.io.newTxn.dataLow._super), 0));
// builtin Sub
Val x863 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.low1._super), 0));
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:142)
Val x864 = (x863 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.data.io.newTxn.dataHigh._super), 0));
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:154)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:72)
Val x865 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.low1._super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.rs2Low._super), 0));
ValU32Struct x866;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:131)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:71)
Val x867 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.origBytes.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x867), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x868 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.origBytes.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x868), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:132)
Val x869 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.newBytes.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x869), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x870 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.newBytes.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x870), "value out of range!");
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:137)
Val x871 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.low0._super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.origBytes.byte0.arg.val._super), 0));
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:138)
Val x872 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.low0._super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.newBytes.byte0.arg.val._super), 0));
Val x873 = (((x861 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.origBytes.byte1.arg.val._super), 0)) + x872) * Val(256));
// builtin Add
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:137)
Val x874 = ((x871 + (x861 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.output.arm0.newBytes.byte0.arg.val._super), 0))) + x873);
// builtin Mul
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:142)
Val x875 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.addr.low1._super), 0) * x874);
x866 = ValU32Struct{
  .low = (x862 + (x863 * x874)),   .high = (x864 + x875)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
x866 = ValU32Struct{
  .low = (x862 + (x863 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.input.sourceRegs.rs2Low._super), 0))),   .high = (x864 + x865)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
x866 = x856;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
x866 = x18;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
x866 = x18;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
x866 = x18;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
x866 = x18;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
x866 = x18;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:81)
Val x876 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.pcAdd.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x876), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x877 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.pcAdd.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x877), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x878 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.pcAdd.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm6.pcAdd.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x878,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 7), _super), 0))) {
InstOutputBaseStruct x879;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
x879 = InstOutputBaseStruct{
  .newPc = x18,   .newState = Val(16),   .newMode = Val(0),   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// builtin Sub
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:176)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:80)
Val x880 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm1._super.pcZero._super._super), 0));
InstOutputBaseStruct x881;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm1._super.pcZero._super._super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:36)
ValU32Struct x882 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm1._super._super.arm0._super.pc.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm1._super._super.arm0._super.pc.io.newTxn.dataHigh._super), 0)};
x881 = InstOutputBaseStruct{
  .newPc = x882,   .newState = Val(1),   .newMode = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm1._super._super.arm0._super.mode.io.newTxn.dataLow._super), 0),   .topState = x16};
} else if (to_size_t(x880)) {
x881 = InstOutputBaseStruct{
  .newPc = x11,   .newState = Val(48),   .newMode = x13,   .topState = x16};
} else {
   assert(0 && "Reached unreachable mux arm");
}
x879 = x881;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:51)
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:177)
Val x883 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm2._super.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x883), "value out of range!");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x884 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm2._super.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x884), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:58)
ValU32Struct x885 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm2._super.newPcAddr.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm2._super.newPcAddr.io.newTxn.dataHigh._super), 0)};
x879 = InstOutputBaseStruct{
  .newPc = x885,   .newState = Val(48),   .newMode = Val(1),   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:65)
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
Val x886 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm3._super.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x886), "value out of range!");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x887 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm3._super.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x887), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:73)
Val x888 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm3._super.pcAdd.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x888), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x889 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm3._super.pcAdd.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x889), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x890 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm3._super.pcAdd.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm3._super.pcAdd.high16.arg.val._super), 0)};
x879 = InstOutputBaseStruct{
  .newPc = x890,   .newState = Val(48),   .newMode = Val(0),   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// builtin Sub
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:179)
Val x891 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm4._super.pcZero._super._super), 0));
InstOutputBaseStruct x892;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm4._super.pcZero._super._super), 0))) {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:83)
NondetRegStruct x893 = back_Reg(ctx,0, LAYOUT_LOOKUP(x2, isTerminate));
// builtin Sub
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:88)
Val x894 = (Val(1) - x893._super);
ComponentStruct x895;
if (to_size_t(x894)) {
x895 = x19;
} else if (to_size_t((Val(1) - x894))) {
x895 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x892 = InstOutputBaseStruct{
  .newPc = x18,   .newState = Val(16),   .newMode = Val(3),   .topState = x16};
} else if (to_size_t(x891)) {
x892 = InstOutputBaseStruct{
  .newPc = x18,   .newState = Val(4),   .newMode = x13,   .topState = x16};
} else {
   assert(0 && "Reached unreachable mux arm");
}
x879 = x892;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
x879 = InstOutputBaseStruct{
  .newPc = x18,   .newState = Val(6),   .newMode = Val(0),   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:181)
Val x896 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super.mode._super), 0));
// builtin Add
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:135)
Val x897 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super.entry._super), 0) + Val(16));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:140)
ValU32Struct x898 = ValU32Struct{
  .low = x897,   .high = Val(0)};
InstOutputBaseStruct x899;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super.mode._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)
Val x900 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 0), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x900), "value out of range!");
Val x901 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 1), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x901), "value out of range!");
Val x902 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 2), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x902), "value out of range!");
Val x903 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 3), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x903), "value out of range!");
Val x904 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 4), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x904), "value out of range!");
Val x905 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 5), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x905), "value out of range!");
Val x906 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 6), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x906), "value out of range!");
Val x907 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 7), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x907), "value out of range!");
Val x908 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 8), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x908), "value out of range!");
Val x909 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 9), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x909), "value out of range!");
Val x910 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 10), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x910), "value out of range!");
Val x911 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 11), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x911), "value out of range!");
Val x912 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 12), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x912), "value out of range!");
Val x913 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 13), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x913), "value out of range!");
Val x914 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 14), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x914), "value out of range!");
Val x915 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super._1), 15), arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x915), "value out of range!");
// builtin Sub
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:137)
Val x916 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super.done._super._super), 0));
InstOutputBaseStruct x917;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm0._super.done._super._super), 0))) {
x917 = InstOutputBaseStruct{
  .newPc = x18,   .newState = Val(7),   .newMode = Val(0),   .topState = x16};
} else if (to_size_t(x916)) {
x917 = InstOutputBaseStruct{
  .newPc = x898,   .newState = Val(6),   .newMode = Val(1),   .topState = x16};
} else {
   assert(0 && "Reached unreachable mux arm");
}
x899 = x917;
} else if (to_size_t(x896)) {
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:146)
Val x918 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 0), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x918), "value out of range!");
Val x919 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 1), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x919), "value out of range!");
Val x920 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 2), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x920), "value out of range!");
Val x921 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 3), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x921), "value out of range!");
Val x922 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 4), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x922), "value out of range!");
Val x923 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 5), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x923), "value out of range!");
Val x924 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 6), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x924), "value out of range!");
Val x925 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 7), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x925), "value out of range!");
Val x926 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 8), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x926), "value out of range!");
Val x927 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 9), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x927), "value out of range!");
Val x928 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 10), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x928), "value out of range!");
Val x929 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 11), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x929), "value out of range!");
Val x930 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 12), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x930), "value out of range!");
Val x931 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 13), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x931), "value out of range!");
Val x932 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 14), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x932), "value out of range!");
Val x933 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super._1), 15), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x933), "value out of range!");
// builtin Sub
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:151)
Val x934 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super.done._super._super), 0));
InstOutputBaseStruct x935;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm7._super.arm6._super._super.arm1._super.done._super._super), 0))) {
x935 = InstOutputBaseStruct{
  .newPc = x18,   .newState = Val(6),   .newMode = Val(1),   .topState = x16};
} else if (to_size_t(x934)) {
x935 = InstOutputBaseStruct{
  .newPc = x898,   .newState = Val(6),   .newMode = Val(0),   .topState = x16};
} else {
   assert(0 && "Reached unreachable mux arm");
}
x899 = x935;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x879 = x899;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:161)
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:182)
NondetRegStruct x936 = back_Reg(ctx,0, LAYOUT_LOOKUP(x2, isTerminate));
// builtin Mul
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:163)
Val x937 = ((Val(1) - x13) * (Val(1) - x936._super));
ComponentStruct x938;
if (to_size_t(x937)) {
x938 = x19;
} else if (to_size_t((Val(1) - x937))) {
x938 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x879 = InstOutputBaseStruct{
  .newPc = x18,   .newState = Val(7),   .newMode = Val(1),   .topState = x16};
} else {
   assert(0 && "Reached unreachable mux arm");
}
x21 = x879;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 8), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:202)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:81)
Val x939 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.pcAddr.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x939), "value out of range!");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x940 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.pcAddr.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x940), "value out of range!");
ECallOutputStruct x941;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
Val x942;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm0._super.dispatch._super), 0), _super), 0))) {
x942 = Val(9);
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm0._super.dispatch._super), 1), _super), 0))) {
x942 = Val(10);
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm0._super.dispatch._super), 2), _super), 0))) {
x942 = Val(11);
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm0._super.dispatch._super), 3), _super), 0))) {
x942 = Val(16);
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm0._super.dispatch._super), 4), _super), 0))) {
x942 = Val(32);
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm0._super.dispatch._super), 5), _super), 0))) {
x942 = Val(40);
} else {
   assert(0 && "Reached unreachable mux arm");
}
x941 = ECallOutputStruct{
  .state = x942,   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
x941 = ECallOutputStruct{
  .state = Val(4),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:78)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:207)
Val x943 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.newLen.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x943), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:80)
Val x944 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.diff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x944), "value out of range!");
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:59)
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:84)
Val x945 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.ptrDecomp.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x945), "value out of range!");
// builtin Mul
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:85)
Val x946 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.ptr.io.newTxn.dataHigh._super), 0) * Val(16384));
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:59)
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:86)
Val x947 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.lenDecomp.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x947), "value out of range!");
// builtin Mul
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:94)
Val x948 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.lenDecomp.isZero._super), 0) * Val(48));
// builtin Sub
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:96)
Val x949 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.lenDecomp.isZero._super), 0));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:98)
Val x950 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.uneven._super), 0));
// builtin Add
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:96)
Val x951 = ((x948 + ((x949 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.uneven._super), 0)) * Val(12))) + ((x949 * x950) * Val(13)));
x941 = ECallOutputStruct{
  .state = x951,   .s0 = (x946 + LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.ptrDecomp.high.arg.val._super), 0)),   .s1 = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.ptrDecomp.low2._super), 0),   .s2 = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm2._super.newLen.arg.val._super), 0)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:111)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:208)
Val x952 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm3._super.newLen.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x952), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:113)
Val x953 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm3._super.diff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x953), "value out of range!");
x941 = ECallOutputStruct{
  .state = Val(48),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:209)
NondetRegStruct x954 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, instResult.arm8.s0));
NondetRegStruct x955 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, instResult.arm8.s1));
NondetRegStruct x956 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, instResult.arm8.s2));
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:59)
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:123)
Val x957 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.lenDecomp.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x957), "value out of range!");
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:128)
Val x958 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.nextPtrEven._super._super), 0));
// builtin Mul
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:129)
Val x959 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.nextPtrEven._super._super), 0) * (x954._super + Val(1)));
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:143)
Val x960 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.low1._super), 0));
ComponentStruct x961;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.low1._super), 0))) {
x961 = x19;
} else if (to_size_t(x960)) {
x961 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:152)
Val x962 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.oldBytes.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x962), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x963 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.oldBytes.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x963), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:153)
Val x964 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.newBytes_0.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x964), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x965 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.newBytes_0.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x965), "value out of range!");
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:155)
Val x966 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.low0._super), 0));
ComponentStruct x967;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.low0._super), 0))) {
x967 = x19;
} else if (to_size_t(x966)) {
x967 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Mul
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:162)
Val x968 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.lenZero._super._super), 0) * Val(48));
// builtin Sub
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:164)
Val x969 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.lenZero._super._super), 0));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:166)
Val x970 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.uneven._super), 0));
// builtin Add
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:164)
Val x971 = ((x968 + ((x969 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm4._super.uneven._super), 0)) * Val(12))) + ((x969 * x970) * Val(13)));
x941 = ECallOutputStruct{
  .state = x971,   .s0 = (x959 + (x958 * x954._super)),   .s1 = (x958 * (x955._super + Val(1))),   .s2 = (x956._super - Val(1))};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:210)
NondetRegStruct x972 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, instResult.arm8.s0));
NondetRegStruct x973 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, instResult.arm8.s2));
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:59)
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:172)
Val x974 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.lenDecomp.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x974), "value out of range!");
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:173)
Val x975 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x975), "value out of range!");
// builtin Add
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:175)
Val x976 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.low2Hot._super), 1), _super), 0) + LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.low2Hot._super), 2), _super), 0));
// builtin Mul
Val x977 = ((x976 + LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.low2Hot._super), 3), _super), 0)) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.highZero._super._super), 0));
// builtin Sub
Val x978 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.highZero._super._super), 0));
// builtin Add
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:176)
Val x979 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.low2Hot._super), 2), _super), 0) + LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.low2Hot._super), 3), _super), 0));
// builtin Mul
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:177)
Val x980 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.low2Hot._super), 3), _super), 0) * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.highZero._super._super), 0));
// builtin Add
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:180)
Val x981 = ((x977 + x978) + ((x979 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.wordsDecomp.highZero._super._super), 0)) + x978));
Val x982 = ((x981 + (x980 + x978)) + x978);
// builtin Mul
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:189)
Val x983 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.lenZero._super), 0) * Val(48));
// builtin Sub
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:191)
Val x984 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.lenZero._super), 0));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:193)
Val x985 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.newLenHighZero._super._super), 0));
// builtin Add
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:191)
Val x986 = ((x983 + ((x984 * LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.output.arm5._super.newLenHighZero._super._super), 0)) * Val(12))) + ((x984 * x985) * Val(13)));
x941 = ECallOutputStruct{
  .state = x986,   .s0 = (x972._super + x982),   .s1 = Val(0),   .s2 = (x973._super - (x982 * Val(4)))};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
x941 = x20;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
x941 = x20;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:222)
Val x987 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.addPC.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x987), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x988 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.addPC.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x988), "value out of range!");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x989 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.addPC.low16.arg.val._super), 0),   .high = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm8.addPC.high16.arg.val._super), 0)};
x21 = InstOutputBaseStruct{
  .newPc = x989,   .newState = x941.state,   .newMode = Val(1),   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 9), _super), 0))) {
PoseidonStateStruct x990;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// builtin Sub
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:471)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:82)
Val x991 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super.pcZero._super._super), 0));
PoseidonStateStruct x992;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super.pcZero._super._super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:119)
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:133)
NondetRegStruct x993 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x994 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x995 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x996 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x997 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x998 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x999 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1000 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1001 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1002 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1003 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1004 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 0), _super), 0)};
NondetRegStruct x1005 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 1), _super), 0)};
NondetRegStruct x1006 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 2), _super), 0)};
NondetRegStruct x1007 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 3), _super), 0)};
NondetRegStruct x1008 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 4), _super), 0)};
NondetRegStruct x1009 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 5), _super), 0)};
NondetRegStruct x1010 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 6), _super), 0)};
NondetRegStruct x1011 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 7), _super), 0)};
NondetRegStruct x1012 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 8), _super), 0)};
NondetRegStruct x1013 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 9), _super), 0)};
NondetRegStruct x1014 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 10), _super), 0)};
NondetRegStruct x1015 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 11), _super), 0)};
NondetRegStruct x1016 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 12), _super), 0)};
NondetRegStruct x1017 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 13), _super), 0)};
NondetRegStruct x1018 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 14), _super), 0)};
NondetRegStruct x1019 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 15), _super), 0)};
NondetRegStruct x1020 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 16), _super), 0)};
NondetRegStruct x1021 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 17), _super), 0)};
NondetRegStruct x1022 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 18), _super), 0)};
NondetRegStruct x1023 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 19), _super), 0)};
NondetRegStruct x1024 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 20), _super), 0)};
NondetRegStruct x1025 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 21), _super), 0)};
NondetRegStruct x1026 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 22), _super), 0)};
NondetRegStruct x1027 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1028 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm0._super.zcheck._super), 0)};
x992 = PoseidonStateStruct{
  .hasState = x993,   .stateAddr = x994,   .bufOutAddr = x995,   .isElem = x996,   .checkOut = x997,   .loadTxType = x998,   .nextState = x999,   .subState = x1000,   .bufInAddr = x1001,   .count = x1002,   .mode = x1003,   .inner = NondetRegStruct24Array{x1004, x1005, x1006, x1007, x1008, x1009, x1010, x1011, x1012, x1013, x1014, x1015, x1016, x1017, x1018, x1019, x1020, x1021, x1022, x1023, x1024, x1025, x1026, x1027},   .zcheck = x1028};
} else if (to_size_t(x991)) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:105)
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:135)
NondetRegStruct x1029 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1030 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1031 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1032 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1033 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1034 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1035 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1036 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1037 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1038 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1039 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1040 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 0), _super), 0)};
NondetRegStruct x1041 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 1), _super), 0)};
NondetRegStruct x1042 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 2), _super), 0)};
NondetRegStruct x1043 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 3), _super), 0)};
NondetRegStruct x1044 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 4), _super), 0)};
NondetRegStruct x1045 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 5), _super), 0)};
NondetRegStruct x1046 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 6), _super), 0)};
NondetRegStruct x1047 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 7), _super), 0)};
NondetRegStruct x1048 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 8), _super), 0)};
NondetRegStruct x1049 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 9), _super), 0)};
NondetRegStruct x1050 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 10), _super), 0)};
NondetRegStruct x1051 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 11), _super), 0)};
NondetRegStruct x1052 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 12), _super), 0)};
NondetRegStruct x1053 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 13), _super), 0)};
NondetRegStruct x1054 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 14), _super), 0)};
NondetRegStruct x1055 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 15), _super), 0)};
NondetRegStruct x1056 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 16), _super), 0)};
NondetRegStruct x1057 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 17), _super), 0)};
NondetRegStruct x1058 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 18), _super), 0)};
NondetRegStruct x1059 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 19), _super), 0)};
NondetRegStruct x1060 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 20), _super), 0)};
NondetRegStruct x1061 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 21), _super), 0)};
NondetRegStruct x1062 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 22), _super), 0)};
NondetRegStruct x1063 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1064 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super.arm1._super.zcheck._super), 0)};
x992 = PoseidonStateStruct{
  .hasState = x1029,   .stateAddr = x1030,   .bufOutAddr = x1031,   .isElem = x1032,   .checkOut = x1033,   .loadTxType = x1034,   .nextState = x1035,   .subState = x1036,   .bufInAddr = x1037,   .count = x1038,   .mode = x1039,   .inner = NondetRegStruct24Array{x1040, x1041, x1042, x1043, x1044, x1045, x1046, x1047, x1048, x1049, x1050, x1051, x1052, x1053, x1054, x1055, x1056, x1057, x1058, x1059, x1060, x1061, x1062, x1063},   .zcheck = x1064};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)
PoseidonStateStruct x1065 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm0._super._super._super));
x990 = x1065;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:156)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:472)
NondetRegStruct x1066 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1067 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1068 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1069 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1070 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1071 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1072 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1073 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1074 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1075 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1076 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1077 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 0), _super), 0)};
NondetRegStruct x1078 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 1), _super), 0)};
NondetRegStruct x1079 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 2), _super), 0)};
NondetRegStruct x1080 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 3), _super), 0)};
NondetRegStruct x1081 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 4), _super), 0)};
NondetRegStruct x1082 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 5), _super), 0)};
NondetRegStruct x1083 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 6), _super), 0)};
NondetRegStruct x1084 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 7), _super), 0)};
NondetRegStruct x1085 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 8), _super), 0)};
NondetRegStruct x1086 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 9), _super), 0)};
NondetRegStruct x1087 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 10), _super), 0)};
NondetRegStruct x1088 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 11), _super), 0)};
NondetRegStruct x1089 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 12), _super), 0)};
NondetRegStruct x1090 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 13), _super), 0)};
NondetRegStruct x1091 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 14), _super), 0)};
NondetRegStruct x1092 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 15), _super), 0)};
NondetRegStruct x1093 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 16), _super), 0)};
NondetRegStruct x1094 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 17), _super), 0)};
NondetRegStruct x1095 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 18), _super), 0)};
NondetRegStruct x1096 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 19), _super), 0)};
NondetRegStruct x1097 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 20), _super), 0)};
NondetRegStruct x1098 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 21), _super), 0)};
NondetRegStruct x1099 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 22), _super), 0)};
NondetRegStruct x1100 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1101 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm1._super._super.zcheck._super), 0)};
x990 = PoseidonStateStruct{
  .hasState = x1066,   .stateAddr = x1067,   .bufOutAddr = x1068,   .isElem = x1069,   .checkOut = x1070,   .loadTxType = x1071,   .nextState = x1072,   .subState = x1073,   .bufInAddr = x1074,   .count = x1075,   .mode = x1076,   .inner = NondetRegStruct24Array{x1077, x1078, x1079, x1080, x1081, x1082, x1083, x1084, x1085, x1086, x1087, x1088, x1089, x1090, x1091, x1092, x1093, x1094, x1095, x1096, x1097, x1098, x1099, x1100},   .zcheck = x1101};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
PoseidonStateStruct x1102;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._0._super), 0), _super), 0))) {
GetDataStruct x1103;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:178)
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:234)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:473)
ValU32Struct x1104 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1103 = GetDataStruct{
  ._super = x1104,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1105 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1106 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1103 = GetDataStruct{
  ._super = x1106,   .diffLow = Val(0),   .diffHigh = x1105};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1107 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1108 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1109 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 0), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1103 = GetDataStruct{
  ._super = x1109,   .diffLow = x1107,   .diffHigh = x1108};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1110;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1111 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1110 = GetDataStruct{
  ._super = x1111,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1112 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1113 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1110 = GetDataStruct{
  ._super = x1113,   .diffLow = Val(0),   .diffHigh = x1112};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1114 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1115 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1116 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 1), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1110 = GetDataStruct{
  ._super = x1116,   .diffLow = x1114,   .diffHigh = x1115};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1117;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1118 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1117 = GetDataStruct{
  ._super = x1118,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1119 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1120 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1117 = GetDataStruct{
  ._super = x1120,   .diffLow = Val(0),   .diffHigh = x1119};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1121 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1122 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1123 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 2), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1117 = GetDataStruct{
  ._super = x1123,   .diffLow = x1121,   .diffHigh = x1122};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1124;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1125 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1124 = GetDataStruct{
  ._super = x1125,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1126 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1127 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1124 = GetDataStruct{
  ._super = x1127,   .diffLow = Val(0),   .diffHigh = x1126};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1128 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1129 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1130 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 3), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1124 = GetDataStruct{
  ._super = x1130,   .diffLow = x1128,   .diffHigh = x1129};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1131;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1132 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1131 = GetDataStruct{
  ._super = x1132,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1133 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1134 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1131 = GetDataStruct{
  ._super = x1134,   .diffLow = Val(0),   .diffHigh = x1133};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1135 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1136 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1137 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 4), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1131 = GetDataStruct{
  ._super = x1137,   .diffLow = x1135,   .diffHigh = x1136};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1138;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1139 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1138 = GetDataStruct{
  ._super = x1139,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1140 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1141 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1138 = GetDataStruct{
  ._super = x1141,   .diffLow = Val(0),   .diffHigh = x1140};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1142 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1143 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1144 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 5), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1138 = GetDataStruct{
  ._super = x1144,   .diffLow = x1142,   .diffHigh = x1143};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1145;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1146 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1145 = GetDataStruct{
  ._super = x1146,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1147 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1148 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1145 = GetDataStruct{
  ._super = x1148,   .diffLow = Val(0),   .diffHigh = x1147};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1149 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1150 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1151 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 6), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1145 = GetDataStruct{
  ._super = x1151,   .diffLow = x1149,   .diffHigh = x1150};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1152;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1153 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1152 = GetDataStruct{
  ._super = x1153,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1154 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1155 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1152 = GetDataStruct{
  ._super = x1155,   .diffLow = Val(0),   .diffHigh = x1154};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1156 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1157 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1158 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0.loadList), 7), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1152 = GetDataStruct{
  ._super = x1158,   .diffLow = x1156,   .diffHigh = x1157};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:194)
NondetRegStruct x1159 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1160 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1161 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1162 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1163 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1164 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1165 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1166 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1167 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1168 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1169 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1170 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 0), _super), 0)};
NondetRegStruct x1171 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 1), _super), 0)};
NondetRegStruct x1172 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 2), _super), 0)};
NondetRegStruct x1173 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 3), _super), 0)};
NondetRegStruct x1174 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 4), _super), 0)};
NondetRegStruct x1175 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 5), _super), 0)};
NondetRegStruct x1176 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 6), _super), 0)};
NondetRegStruct x1177 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 7), _super), 0)};
NondetRegStruct x1178 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 8), _super), 0)};
NondetRegStruct x1179 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 9), _super), 0)};
NondetRegStruct x1180 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 10), _super), 0)};
NondetRegStruct x1181 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 11), _super), 0)};
NondetRegStruct x1182 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 12), _super), 0)};
NondetRegStruct x1183 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 13), _super), 0)};
NondetRegStruct x1184 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 14), _super), 0)};
NondetRegStruct x1185 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 15), _super), 0)};
NondetRegStruct x1186 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 16), _super), 0)};
NondetRegStruct x1187 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 17), _super), 0)};
NondetRegStruct x1188 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 18), _super), 0)};
NondetRegStruct x1189 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 19), _super), 0)};
NondetRegStruct x1190 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 20), _super), 0)};
NondetRegStruct x1191 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 21), _super), 0)};
NondetRegStruct x1192 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 22), _super), 0)};
NondetRegStruct x1193 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1194 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm0._super.zcheck._super), 0)};
x1102 = PoseidonStateStruct{
  .hasState = x1159,   .stateAddr = x1160,   .bufOutAddr = x1161,   .isElem = x1162,   .checkOut = x1163,   .loadTxType = x1164,   .nextState = x1165,   .subState = x1166,   .bufInAddr = x1167,   .count = x1168,   .mode = x1169,   .inner = NondetRegStruct24Array{x1170, x1171, x1172, x1173, x1174, x1175, x1176, x1177, x1178, x1179, x1180, x1181, x1182, x1183, x1184, x1185, x1186, x1187, x1188, x1189, x1190, x1191, x1192, x1193},   .zcheck = x1194};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._0._super), 1), _super), 0))) {
GetDataStruct x1195;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:201)
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:235)
ValU32Struct x1196 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1195 = GetDataStruct{
  ._super = x1196,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1197 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1198 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1195 = GetDataStruct{
  ._super = x1198,   .diffLow = Val(0),   .diffHigh = x1197};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1199 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1200 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1201 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 0), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1195 = GetDataStruct{
  ._super = x1201,   .diffLow = x1199,   .diffHigh = x1200};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1202;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1203 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1202 = GetDataStruct{
  ._super = x1203,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1204 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1205 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1202 = GetDataStruct{
  ._super = x1205,   .diffLow = Val(0),   .diffHigh = x1204};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1206 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1207 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1208 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 1), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1202 = GetDataStruct{
  ._super = x1208,   .diffLow = x1206,   .diffHigh = x1207};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1209;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1210 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1209 = GetDataStruct{
  ._super = x1210,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1211 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1212 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1209 = GetDataStruct{
  ._super = x1212,   .diffLow = Val(0),   .diffHigh = x1211};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1213 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1214 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1215 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 2), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1209 = GetDataStruct{
  ._super = x1215,   .diffLow = x1213,   .diffHigh = x1214};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1216;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1217 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1216 = GetDataStruct{
  ._super = x1217,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1218 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1219 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1216 = GetDataStruct{
  ._super = x1219,   .diffLow = Val(0),   .diffHigh = x1218};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1220 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1221 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1222 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 3), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1216 = GetDataStruct{
  ._super = x1222,   .diffLow = x1220,   .diffHigh = x1221};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1223;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1224 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1223 = GetDataStruct{
  ._super = x1224,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1225 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1226 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1223 = GetDataStruct{
  ._super = x1226,   .diffLow = Val(0),   .diffHigh = x1225};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1227 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1228 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1229 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 4), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1223 = GetDataStruct{
  ._super = x1229,   .diffLow = x1227,   .diffHigh = x1228};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1230;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1231 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1230 = GetDataStruct{
  ._super = x1231,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1232 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1233 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1230 = GetDataStruct{
  ._super = x1233,   .diffLow = Val(0),   .diffHigh = x1232};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1234 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1235 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1236 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 5), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1230 = GetDataStruct{
  ._super = x1236,   .diffLow = x1234,   .diffHigh = x1235};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1237;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1238 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1237 = GetDataStruct{
  ._super = x1238,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1239 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1240 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1237 = GetDataStruct{
  ._super = x1240,   .diffLow = Val(0),   .diffHigh = x1239};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1241 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1242 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1243 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 6), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1237 = GetDataStruct{
  ._super = x1243,   .diffLow = x1241,   .diffHigh = x1242};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1244;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1245 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1244 = GetDataStruct{
  ._super = x1245,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1246 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1247 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1244 = GetDataStruct{
  ._super = x1247,   .diffLow = Val(0),   .diffHigh = x1246};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1248 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1249 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1250 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1.loadList), 7), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1244 = GetDataStruct{
  ._super = x1250,   .diffLow = x1248,   .diffHigh = x1249};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:211)
NondetRegStruct x1251 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1252 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1253 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1254 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1255 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1256 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1257 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1258 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1259 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1260 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1261 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1262 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 0), _super), 0)};
NondetRegStruct x1263 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 1), _super), 0)};
NondetRegStruct x1264 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 2), _super), 0)};
NondetRegStruct x1265 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 3), _super), 0)};
NondetRegStruct x1266 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 4), _super), 0)};
NondetRegStruct x1267 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 5), _super), 0)};
NondetRegStruct x1268 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 6), _super), 0)};
NondetRegStruct x1269 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 7), _super), 0)};
NondetRegStruct x1270 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 8), _super), 0)};
NondetRegStruct x1271 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 9), _super), 0)};
NondetRegStruct x1272 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 10), _super), 0)};
NondetRegStruct x1273 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 11), _super), 0)};
NondetRegStruct x1274 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 12), _super), 0)};
NondetRegStruct x1275 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 13), _super), 0)};
NondetRegStruct x1276 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 14), _super), 0)};
NondetRegStruct x1277 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 15), _super), 0)};
NondetRegStruct x1278 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 16), _super), 0)};
NondetRegStruct x1279 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 17), _super), 0)};
NondetRegStruct x1280 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 18), _super), 0)};
NondetRegStruct x1281 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 19), _super), 0)};
NondetRegStruct x1282 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 20), _super), 0)};
NondetRegStruct x1283 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 21), _super), 0)};
NondetRegStruct x1284 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 22), _super), 0)};
NondetRegStruct x1285 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1286 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm1._super.zcheck._super), 0)};
x1102 = PoseidonStateStruct{
  .hasState = x1251,   .stateAddr = x1252,   .bufOutAddr = x1253,   .isElem = x1254,   .checkOut = x1255,   .loadTxType = x1256,   .nextState = x1257,   .subState = x1258,   .bufInAddr = x1259,   .count = x1260,   .mode = x1261,   .inner = NondetRegStruct24Array{x1262, x1263, x1264, x1265, x1266, x1267, x1268, x1269, x1270, x1271, x1272, x1273, x1274, x1275, x1276, x1277, x1278, x1279, x1280, x1281, x1282, x1283, x1284, x1285},   .zcheck = x1286};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._0._super), 2), _super), 0))) {
GetDataStruct x1287;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:218)
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:236)
ValU32Struct x1288 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1287 = GetDataStruct{
  ._super = x1288,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1289 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1290 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1287 = GetDataStruct{
  ._super = x1290,   .diffLow = Val(0),   .diffHigh = x1289};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1291 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1292 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1293 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 0), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1287 = GetDataStruct{
  ._super = x1293,   .diffLow = x1291,   .diffHigh = x1292};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1294;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1295 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1294 = GetDataStruct{
  ._super = x1295,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1296 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1297 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1294 = GetDataStruct{
  ._super = x1297,   .diffLow = Val(0),   .diffHigh = x1296};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1298 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1299 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1300 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 1), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1294 = GetDataStruct{
  ._super = x1300,   .diffLow = x1298,   .diffHigh = x1299};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1301;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1302 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1301 = GetDataStruct{
  ._super = x1302,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1303 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1304 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1301 = GetDataStruct{
  ._super = x1304,   .diffLow = Val(0),   .diffHigh = x1303};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1305 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1306 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1307 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 2), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1301 = GetDataStruct{
  ._super = x1307,   .diffLow = x1305,   .diffHigh = x1306};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1308;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1309 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1308 = GetDataStruct{
  ._super = x1309,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1310 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1311 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1308 = GetDataStruct{
  ._super = x1311,   .diffLow = Val(0),   .diffHigh = x1310};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1312 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1313 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1314 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 3), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1308 = GetDataStruct{
  ._super = x1314,   .diffLow = x1312,   .diffHigh = x1313};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1315;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1316 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1315 = GetDataStruct{
  ._super = x1316,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1317 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1318 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1315 = GetDataStruct{
  ._super = x1318,   .diffLow = Val(0),   .diffHigh = x1317};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1319 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1320 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1321 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 4), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1315 = GetDataStruct{
  ._super = x1321,   .diffLow = x1319,   .diffHigh = x1320};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1322;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1323 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1322 = GetDataStruct{
  ._super = x1323,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1324 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1325 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1322 = GetDataStruct{
  ._super = x1325,   .diffLow = Val(0),   .diffHigh = x1324};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1326 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1327 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1328 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 5), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1322 = GetDataStruct{
  ._super = x1328,   .diffLow = x1326,   .diffHigh = x1327};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1329;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1330 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1329 = GetDataStruct{
  ._super = x1330,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1331 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1332 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1329 = GetDataStruct{
  ._super = x1332,   .diffLow = Val(0),   .diffHigh = x1331};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1333 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1334 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1335 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 6), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1329 = GetDataStruct{
  ._super = x1335,   .diffLow = x1333,   .diffHigh = x1334};
} else {
   assert(0 && "Reached unreachable mux arm");
}
GetDataStruct x1336;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 0), _super), 0))) {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:92)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
ValU32Struct x1337 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm0.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm0.io.newTxn.dataHigh._super), 0)};
x1336 = GetDataStruct{
  ._super = x1337,   .diffLow = Val(0),   .diffHigh = Val(1)};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 1), _super), 0))) {
// builtin Sub
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:114)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
Val x1338 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm1._super.io.newTxn.cycle._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm1._super.io.oldTxn.cycle._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x1339 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm1._super.io.newTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm1._super.io.newTxn.dataHigh._super), 0)};
x1336 = GetDataStruct{
  ._super = x1339,   .diffLow = Val(0),   .diffHigh = x1338};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.txType._super), 2), _super), 0))) {
// builtin Sub
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:131)
Val x1340 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm2.io.newTxn.dataLow._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm2.io.oldTxn.dataLow._super), 0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:123)
Val x1341 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm2.io.newTxn.dataHigh._super), 0) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm2.io.oldTxn.dataHigh._super), 0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
ValU32Struct x1342 = ValU32Struct{
  .low = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm2.io.oldTxn.dataLow._super), 0),   .high = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2.loadList), 7), _super.arm2.io.oldTxn.dataHigh._super), 0)};
x1336 = GetDataStruct{
  ._super = x1342,   .diffLow = x1340,   .diffHigh = x1341};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:228)
NondetRegStruct x1343 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1344 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1345 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1346 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1347 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1348 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1349 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1350 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1351 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1352 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1353 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1354 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 0), _super), 0)};
NondetRegStruct x1355 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 1), _super), 0)};
NondetRegStruct x1356 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 2), _super), 0)};
NondetRegStruct x1357 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 3), _super), 0)};
NondetRegStruct x1358 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 4), _super), 0)};
NondetRegStruct x1359 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 5), _super), 0)};
NondetRegStruct x1360 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 6), _super), 0)};
NondetRegStruct x1361 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 7), _super), 0)};
NondetRegStruct x1362 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 8), _super), 0)};
NondetRegStruct x1363 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 9), _super), 0)};
NondetRegStruct x1364 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 10), _super), 0)};
NondetRegStruct x1365 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 11), _super), 0)};
NondetRegStruct x1366 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 12), _super), 0)};
NondetRegStruct x1367 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 13), _super), 0)};
NondetRegStruct x1368 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 14), _super), 0)};
NondetRegStruct x1369 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 15), _super), 0)};
NondetRegStruct x1370 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 16), _super), 0)};
NondetRegStruct x1371 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 17), _super), 0)};
NondetRegStruct x1372 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 18), _super), 0)};
NondetRegStruct x1373 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 19), _super), 0)};
NondetRegStruct x1374 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 20), _super), 0)};
NondetRegStruct x1375 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 21), _super), 0)};
NondetRegStruct x1376 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 22), _super), 0)};
NondetRegStruct x1377 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1378 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super.arm2._super.zcheck._super), 0)};
x1102 = PoseidonStateStruct{
  .hasState = x1343,   .stateAddr = x1344,   .bufOutAddr = x1345,   .isElem = x1346,   .checkOut = x1347,   .loadTxType = x1348,   .nextState = x1349,   .subState = x1350,   .bufInAddr = x1351,   .count = x1352,   .mode = x1353,   .inner = NondetRegStruct24Array{x1354, x1355, x1356, x1357, x1358, x1359, x1360, x1361, x1362, x1363, x1364, x1365, x1366, x1367, x1368, x1369, x1370, x1371, x1372, x1373, x1374, x1375, x1376, x1377},   .zcheck = x1378};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:233)
PoseidonStateStruct x1379 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm2._super._super._super));
x990 = x1379;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:61)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:474)
NondetRegStruct x1380 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1381 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1382 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1383 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1384 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1385 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1386 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1387 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1388 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1389 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1390 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1391 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 0), _super), 0)};
NondetRegStruct x1392 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 1), _super), 0)};
NondetRegStruct x1393 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 2), _super), 0)};
NondetRegStruct x1394 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 3), _super), 0)};
NondetRegStruct x1395 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 4), _super), 0)};
NondetRegStruct x1396 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 5), _super), 0)};
NondetRegStruct x1397 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 6), _super), 0)};
NondetRegStruct x1398 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 7), _super), 0)};
NondetRegStruct x1399 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 8), _super), 0)};
NondetRegStruct x1400 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 9), _super), 0)};
NondetRegStruct x1401 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 10), _super), 0)};
NondetRegStruct x1402 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 11), _super), 0)};
NondetRegStruct x1403 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 12), _super), 0)};
NondetRegStruct x1404 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 13), _super), 0)};
NondetRegStruct x1405 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 14), _super), 0)};
NondetRegStruct x1406 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 15), _super), 0)};
NondetRegStruct x1407 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 16), _super), 0)};
NondetRegStruct x1408 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 17), _super), 0)};
NondetRegStruct x1409 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 18), _super), 0)};
NondetRegStruct x1410 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 19), _super), 0)};
NondetRegStruct x1411 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 20), _super), 0)};
NondetRegStruct x1412 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 21), _super), 0)};
NondetRegStruct x1413 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 22), _super), 0)};
NondetRegStruct x1414 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1415 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm3._super.zcheck._super), 0)};
x990 = PoseidonStateStruct{
  .hasState = x1380,   .stateAddr = x1381,   .bufOutAddr = x1382,   .isElem = x1383,   .checkOut = x1384,   .loadTxType = x1385,   .nextState = x1386,   .subState = x1387,   .bufInAddr = x1388,   .count = x1389,   .mode = x1390,   .inner = NondetRegStruct24Array{x1391, x1392, x1393, x1394, x1395, x1396, x1397, x1398, x1399, x1400, x1401, x1402, x1403, x1404, x1405, x1406, x1407, x1408, x1409, x1410, x1411, x1412, x1413, x1414},   .zcheck = x1415};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:475)
NondetRegStruct x1416 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1417 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1418 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1419 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1420 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1421 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1422 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1423 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1424 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1425 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1426 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1427 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 0), _super), 0)};
NondetRegStruct x1428 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 1), _super), 0)};
NondetRegStruct x1429 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 2), _super), 0)};
NondetRegStruct x1430 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 3), _super), 0)};
NondetRegStruct x1431 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 4), _super), 0)};
NondetRegStruct x1432 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 5), _super), 0)};
NondetRegStruct x1433 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 6), _super), 0)};
NondetRegStruct x1434 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 7), _super), 0)};
NondetRegStruct x1435 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 8), _super), 0)};
NondetRegStruct x1436 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 9), _super), 0)};
NondetRegStruct x1437 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 10), _super), 0)};
NondetRegStruct x1438 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 11), _super), 0)};
NondetRegStruct x1439 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 12), _super), 0)};
NondetRegStruct x1440 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 13), _super), 0)};
NondetRegStruct x1441 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 14), _super), 0)};
NondetRegStruct x1442 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 15), _super), 0)};
NondetRegStruct x1443 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 16), _super), 0)};
NondetRegStruct x1444 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 17), _super), 0)};
NondetRegStruct x1445 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 18), _super), 0)};
NondetRegStruct x1446 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 19), _super), 0)};
NondetRegStruct x1447 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 20), _super), 0)};
NondetRegStruct x1448 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 21), _super), 0)};
NondetRegStruct x1449 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 22), _super), 0)};
NondetRegStruct x1450 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1451 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm4._super.zcheck._super), 0)};
x990 = PoseidonStateStruct{
  .hasState = x1416,   .stateAddr = x1417,   .bufOutAddr = x1418,   .isElem = x1419,   .checkOut = x1420,   .loadTxType = x1421,   .nextState = x1422,   .subState = x1423,   .bufInAddr = x1424,   .count = x1425,   .mode = x1426,   .inner = NondetRegStruct24Array{x1427, x1428, x1429, x1430, x1431, x1432, x1433, x1434, x1435, x1436, x1437, x1438, x1439, x1440, x1441, x1442, x1443, x1444, x1445, x1446, x1447, x1448, x1449, x1450},   .zcheck = x1451};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:476)
PoseidonStateStruct x1452 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout0, instResult.arm9.state));
// builtin Sub
// PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:317)
Val x1453 = (Val(1) - x1452.checkOut._super);
PoseidonStateStruct x1454;
if (to_size_t(x1452.checkOut._super)) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:277)
NondetRegStruct x1455 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1456 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1457 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1458 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1459 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1460 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1461 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1462 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1463 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1464 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1465 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1466 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 0), _super), 0)};
NondetRegStruct x1467 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 1), _super), 0)};
NondetRegStruct x1468 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 2), _super), 0)};
NondetRegStruct x1469 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 3), _super), 0)};
NondetRegStruct x1470 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 4), _super), 0)};
NondetRegStruct x1471 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 5), _super), 0)};
NondetRegStruct x1472 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 6), _super), 0)};
NondetRegStruct x1473 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 7), _super), 0)};
NondetRegStruct x1474 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 8), _super), 0)};
NondetRegStruct x1475 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 9), _super), 0)};
NondetRegStruct x1476 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 10), _super), 0)};
NondetRegStruct x1477 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 11), _super), 0)};
NondetRegStruct x1478 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 12), _super), 0)};
NondetRegStruct x1479 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 13), _super), 0)};
NondetRegStruct x1480 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 14), _super), 0)};
NondetRegStruct x1481 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 15), _super), 0)};
NondetRegStruct x1482 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 16), _super), 0)};
NondetRegStruct x1483 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 17), _super), 0)};
NondetRegStruct x1484 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 18), _super), 0)};
NondetRegStruct x1485 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 19), _super), 0)};
NondetRegStruct x1486 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 20), _super), 0)};
NondetRegStruct x1487 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 21), _super), 0)};
NondetRegStruct x1488 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 22), _super), 0)};
NondetRegStruct x1489 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1490 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm0._super._super.zcheck._super), 0)};
x1454 = PoseidonStateStruct{
  .hasState = x1455,   .stateAddr = x1456,   .bufOutAddr = x1457,   .isElem = x1458,   .checkOut = x1459,   .loadTxType = x1460,   .nextState = x1461,   .subState = x1462,   .bufInAddr = x1463,   .count = x1464,   .mode = x1465,   .inner = NondetRegStruct24Array{x1466, x1467, x1468, x1469, x1470, x1471, x1472, x1473, x1474, x1475, x1476, x1477, x1478, x1479, x1480, x1481, x1482, x1483, x1484, x1485, x1486, x1487, x1488, x1489},   .zcheck = x1490};
} else if (to_size_t(x1453)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:302)
Val x1491 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 0), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1491), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1492 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 0), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1492), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1493 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 0), ftw.lowIsZero._super), 0));
ComponentStruct x1494;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 0), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1495 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 0), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1495), "value out of range!");
x1494 = x19;
} else if (to_size_t(x1493)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1496 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 0), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1496), "value out of range!");
x1494 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1497 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 1), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1497), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1498 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 1), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1498), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1499 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 1), ftw.lowIsZero._super), 0));
ComponentStruct x1500;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 1), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1501 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 1), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1501), "value out of range!");
x1500 = x19;
} else if (to_size_t(x1499)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1502 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 1), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1502), "value out of range!");
x1500 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1503 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 2), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1503), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1504 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 2), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1504), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1505 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 2), ftw.lowIsZero._super), 0));
ComponentStruct x1506;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 2), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1507 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 2), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1507), "value out of range!");
x1506 = x19;
} else if (to_size_t(x1505)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1508 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 2), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1508), "value out of range!");
x1506 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1509 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 3), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1509), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1510 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 3), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1510), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1511 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 3), ftw.lowIsZero._super), 0));
ComponentStruct x1512;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 3), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1513 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 3), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1513), "value out of range!");
x1512 = x19;
} else if (to_size_t(x1511)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1514 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 3), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1514), "value out of range!");
x1512 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1515 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 4), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1515), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1516 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 4), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1516), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1517 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 4), ftw.lowIsZero._super), 0));
ComponentStruct x1518;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 4), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1519 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 4), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1519), "value out of range!");
x1518 = x19;
} else if (to_size_t(x1517)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1520 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 4), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1520), "value out of range!");
x1518 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1521 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 5), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1521), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1522 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 5), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1522), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1523 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 5), ftw.lowIsZero._super), 0));
ComponentStruct x1524;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 5), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1525 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 5), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1525), "value out of range!");
x1524 = x19;
} else if (to_size_t(x1523)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1526 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 5), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1526), "value out of range!");
x1524 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1527 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 6), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1527), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1528 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 6), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1528), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1529 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 6), ftw.lowIsZero._super), 0));
ComponentStruct x1530;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 6), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1531 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 6), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1531), "value out of range!");
x1530 = x19;
} else if (to_size_t(x1529)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1532 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 6), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1532), "value out of range!");
x1530 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1533 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 7), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1533), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1534 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 7), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1534), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1535 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 7), ftw.lowIsZero._super), 0));
ComponentStruct x1536;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 7), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1537 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 7), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1537), "value out of range!");
x1536 = x19;
} else if (to_size_t(x1535)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1538 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._1), 7), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1538), "value out of range!");
x1536 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:313)
NondetRegStruct x1539 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1540 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1541 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1542 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1543 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1544 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1545 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1546 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1547 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1548 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1549 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1550 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 0), _super), 0)};
NondetRegStruct x1551 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 1), _super), 0)};
NondetRegStruct x1552 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 2), _super), 0)};
NondetRegStruct x1553 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 3), _super), 0)};
NondetRegStruct x1554 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 4), _super), 0)};
NondetRegStruct x1555 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 5), _super), 0)};
NondetRegStruct x1556 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 6), _super), 0)};
NondetRegStruct x1557 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 7), _super), 0)};
NondetRegStruct x1558 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 8), _super), 0)};
NondetRegStruct x1559 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 9), _super), 0)};
NondetRegStruct x1560 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 10), _super), 0)};
NondetRegStruct x1561 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 11), _super), 0)};
NondetRegStruct x1562 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 12), _super), 0)};
NondetRegStruct x1563 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 13), _super), 0)};
NondetRegStruct x1564 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 14), _super), 0)};
NondetRegStruct x1565 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 15), _super), 0)};
NondetRegStruct x1566 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 16), _super), 0)};
NondetRegStruct x1567 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 17), _super), 0)};
NondetRegStruct x1568 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 18), _super), 0)};
NondetRegStruct x1569 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 19), _super), 0)};
NondetRegStruct x1570 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 20), _super), 0)};
NondetRegStruct x1571 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 21), _super), 0)};
NondetRegStruct x1572 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 22), _super), 0)};
NondetRegStruct x1573 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1574 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super.arm1._super.zcheck._super), 0)};
x1454 = PoseidonStateStruct{
  .hasState = x1539,   .stateAddr = x1540,   .bufOutAddr = x1541,   .isElem = x1542,   .checkOut = x1543,   .loadTxType = x1544,   .nextState = x1545,   .subState = x1546,   .bufInAddr = x1547,   .count = x1548,   .mode = x1549,   .inner = NondetRegStruct24Array{x1550, x1551, x1552, x1553, x1554, x1555, x1556, x1557, x1558, x1559, x1560, x1561, x1562, x1563, x1564, x1565, x1566, x1567, x1568, x1569, x1570, x1571, x1572, x1573},   .zcheck = x1574};
} else {
   assert(0 && "Reached unreachable mux arm");
}
PoseidonStateStruct x1575 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm5._super._super._super));
x990 = x1575;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// builtin Add
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:447)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:477)
Val x1576 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 0), _super), 0) + LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 1), _super), 0));
Val x1577 = (x1576 + LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 2), _super), 0));
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:341)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:448)
Val x1578 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._0.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1578), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:26)
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:342)
Val x1579 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._0._0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1579), "value out of range!");
ComponentStruct x1580;
if (to_size_t(x1577)) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:341)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:450)
Val x1581 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._3.arm0._0.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1581), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:26)
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:342)
Val x1582 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._3.arm0._0._0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1582), "value out of range!");
x1580 = x19;
} else if (to_size_t((Val(1) - x1577))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:341)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:452)
Val x1583 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._3.arm1._0.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1583), "value out of range!");
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:26)
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:342)
Val x1584 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._3.arm1._0._0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1584), "value out of range!");
x1580 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
PoseidonStateStruct x1585;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 0), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonPagingLoadNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:354)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:457)
NondetRegStruct x1586 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1587 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1588 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1589 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1590 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1591 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1592 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1593 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1594 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1595 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1596 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1597 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 0), _super), 0)};
NondetRegStruct x1598 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 1), _super), 0)};
NondetRegStruct x1599 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 2), _super), 0)};
NondetRegStruct x1600 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 3), _super), 0)};
NondetRegStruct x1601 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 4), _super), 0)};
NondetRegStruct x1602 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 5), _super), 0)};
NondetRegStruct x1603 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 6), _super), 0)};
NondetRegStruct x1604 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 7), _super), 0)};
NondetRegStruct x1605 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 8), _super), 0)};
NondetRegStruct x1606 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 9), _super), 0)};
NondetRegStruct x1607 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 10), _super), 0)};
NondetRegStruct x1608 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 11), _super), 0)};
NondetRegStruct x1609 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 12), _super), 0)};
NondetRegStruct x1610 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 13), _super), 0)};
NondetRegStruct x1611 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 14), _super), 0)};
NondetRegStruct x1612 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 15), _super), 0)};
NondetRegStruct x1613 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 16), _super), 0)};
NondetRegStruct x1614 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 17), _super), 0)};
NondetRegStruct x1615 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 18), _super), 0)};
NondetRegStruct x1616 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 19), _super), 0)};
NondetRegStruct x1617 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 20), _super), 0)};
NondetRegStruct x1618 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 21), _super), 0)};
NondetRegStruct x1619 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 22), _super), 0)};
NondetRegStruct x1620 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1621 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm0.zcheck._super), 0)};
x1585 = PoseidonStateStruct{
  .hasState = x1586,   .stateAddr = x1587,   .bufOutAddr = x1588,   .isElem = x1589,   .checkOut = x1590,   .loadTxType = x1591,   .nextState = x1592,   .subState = x1593,   .bufInAddr = x1594,   .count = x1595,   .mode = x1596,   .inner = NondetRegStruct24Array{x1597, x1598, x1599, x1600, x1601, x1602, x1603, x1604, x1605, x1606, x1607, x1608, x1609, x1610, x1611, x1612, x1613, x1614, x1615, x1616, x1617, x1618, x1619, x1620},   .zcheck = x1621};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 1), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonPagingLoadPage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:376)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:458)
NondetRegStruct x1622 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1623 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1624 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1625 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1626 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1627 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1628 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1629 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1630 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1631 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1632 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1633 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 0), _super), 0)};
NondetRegStruct x1634 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 1), _super), 0)};
NondetRegStruct x1635 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 2), _super), 0)};
NondetRegStruct x1636 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 3), _super), 0)};
NondetRegStruct x1637 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 4), _super), 0)};
NondetRegStruct x1638 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 5), _super), 0)};
NondetRegStruct x1639 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 6), _super), 0)};
NondetRegStruct x1640 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 7), _super), 0)};
NondetRegStruct x1641 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 8), _super), 0)};
NondetRegStruct x1642 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 9), _super), 0)};
NondetRegStruct x1643 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 10), _super), 0)};
NondetRegStruct x1644 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 11), _super), 0)};
NondetRegStruct x1645 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 12), _super), 0)};
NondetRegStruct x1646 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 13), _super), 0)};
NondetRegStruct x1647 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 14), _super), 0)};
NondetRegStruct x1648 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 15), _super), 0)};
NondetRegStruct x1649 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 16), _super), 0)};
NondetRegStruct x1650 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 17), _super), 0)};
NondetRegStruct x1651 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 18), _super), 0)};
NondetRegStruct x1652 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 19), _super), 0)};
NondetRegStruct x1653 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 20), _super), 0)};
NondetRegStruct x1654 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 21), _super), 0)};
NondetRegStruct x1655 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 22), _super), 0)};
NondetRegStruct x1656 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1657 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm1.zcheck._super), 0)};
x1585 = PoseidonStateStruct{
  .hasState = x1622,   .stateAddr = x1623,   .bufOutAddr = x1624,   .isElem = x1625,   .checkOut = x1626,   .loadTxType = x1627,   .nextState = x1628,   .subState = x1629,   .bufInAddr = x1630,   .count = x1631,   .mode = x1632,   .inner = NondetRegStruct24Array{x1633, x1634, x1635, x1636, x1637, x1638, x1639, x1640, x1641, x1642, x1643, x1644, x1645, x1646, x1647, x1648, x1649, x1650, x1651, x1652, x1653, x1654, x1655, x1656},   .zcheck = x1657};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 2), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonPagingLoadDone(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:390)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:459)
NondetRegStruct x1658 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1659 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1660 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1661 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1662 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1663 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1664 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1665 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1666 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1667 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1668 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1669 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 0), _super), 0)};
NondetRegStruct x1670 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 1), _super), 0)};
NondetRegStruct x1671 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 2), _super), 0)};
NondetRegStruct x1672 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 3), _super), 0)};
NondetRegStruct x1673 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 4), _super), 0)};
NondetRegStruct x1674 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 5), _super), 0)};
NondetRegStruct x1675 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 6), _super), 0)};
NondetRegStruct x1676 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 7), _super), 0)};
NondetRegStruct x1677 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 8), _super), 0)};
NondetRegStruct x1678 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 9), _super), 0)};
NondetRegStruct x1679 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 10), _super), 0)};
NondetRegStruct x1680 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 11), _super), 0)};
NondetRegStruct x1681 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 12), _super), 0)};
NondetRegStruct x1682 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 13), _super), 0)};
NondetRegStruct x1683 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 14), _super), 0)};
NondetRegStruct x1684 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 15), _super), 0)};
NondetRegStruct x1685 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 16), _super), 0)};
NondetRegStruct x1686 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 17), _super), 0)};
NondetRegStruct x1687 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 18), _super), 0)};
NondetRegStruct x1688 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 19), _super), 0)};
NondetRegStruct x1689 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 20), _super), 0)};
NondetRegStruct x1690 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 21), _super), 0)};
NondetRegStruct x1691 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 22), _super), 0)};
NondetRegStruct x1692 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1693 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm2.zcheck._super), 0)};
x1585 = PoseidonStateStruct{
  .hasState = x1658,   .stateAddr = x1659,   .bufOutAddr = x1660,   .isElem = x1661,   .checkOut = x1662,   .loadTxType = x1663,   .nextState = x1664,   .subState = x1665,   .bufInAddr = x1666,   .count = x1667,   .mode = x1668,   .inner = NondetRegStruct24Array{x1669, x1670, x1671, x1672, x1673, x1674, x1675, x1676, x1677, x1678, x1679, x1680, x1681, x1682, x1683, x1684, x1685, x1686, x1687, x1688, x1689, x1690, x1691, x1692},   .zcheck = x1693};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 3), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonPagingStorePage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:424)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:460)
NondetRegStruct x1694 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1695 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1696 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1697 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1698 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1699 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1700 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1701 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1702 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1703 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1704 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1705 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 0), _super), 0)};
NondetRegStruct x1706 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 1), _super), 0)};
NondetRegStruct x1707 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 2), _super), 0)};
NondetRegStruct x1708 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 3), _super), 0)};
NondetRegStruct x1709 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 4), _super), 0)};
NondetRegStruct x1710 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 5), _super), 0)};
NondetRegStruct x1711 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 6), _super), 0)};
NondetRegStruct x1712 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 7), _super), 0)};
NondetRegStruct x1713 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 8), _super), 0)};
NondetRegStruct x1714 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 9), _super), 0)};
NondetRegStruct x1715 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 10), _super), 0)};
NondetRegStruct x1716 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 11), _super), 0)};
NondetRegStruct x1717 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 12), _super), 0)};
NondetRegStruct x1718 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 13), _super), 0)};
NondetRegStruct x1719 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 14), _super), 0)};
NondetRegStruct x1720 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 15), _super), 0)};
NondetRegStruct x1721 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 16), _super), 0)};
NondetRegStruct x1722 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 17), _super), 0)};
NondetRegStruct x1723 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 18), _super), 0)};
NondetRegStruct x1724 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 19), _super), 0)};
NondetRegStruct x1725 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 20), _super), 0)};
NondetRegStruct x1726 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 21), _super), 0)};
NondetRegStruct x1727 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 22), _super), 0)};
NondetRegStruct x1728 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1729 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm3.zcheck._super), 0)};
x1585 = PoseidonStateStruct{
  .hasState = x1694,   .stateAddr = x1695,   .bufOutAddr = x1696,   .isElem = x1697,   .checkOut = x1698,   .loadTxType = x1699,   .nextState = x1700,   .subState = x1701,   .bufInAddr = x1702,   .count = x1703,   .mode = x1704,   .inner = NondetRegStruct24Array{x1705, x1706, x1707, x1708, x1709, x1710, x1711, x1712, x1713, x1714, x1715, x1716, x1717, x1718, x1719, x1720, x1721, x1722, x1723, x1724, x1725, x1726, x1727, x1728},   .zcheck = x1729};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 4), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonPagingStoreNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:402)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:461)
NondetRegStruct x1730 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1731 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1732 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1733 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1734 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1735 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1736 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1737 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1738 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1739 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1740 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1741 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 0), _super), 0)};
NondetRegStruct x1742 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 1), _super), 0)};
NondetRegStruct x1743 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 2), _super), 0)};
NondetRegStruct x1744 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 3), _super), 0)};
NondetRegStruct x1745 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 4), _super), 0)};
NondetRegStruct x1746 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 5), _super), 0)};
NondetRegStruct x1747 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 6), _super), 0)};
NondetRegStruct x1748 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 7), _super), 0)};
NondetRegStruct x1749 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 8), _super), 0)};
NondetRegStruct x1750 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 9), _super), 0)};
NondetRegStruct x1751 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 10), _super), 0)};
NondetRegStruct x1752 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 11), _super), 0)};
NondetRegStruct x1753 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 12), _super), 0)};
NondetRegStruct x1754 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 13), _super), 0)};
NondetRegStruct x1755 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 14), _super), 0)};
NondetRegStruct x1756 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 15), _super), 0)};
NondetRegStruct x1757 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 16), _super), 0)};
NondetRegStruct x1758 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 17), _super), 0)};
NondetRegStruct x1759 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 18), _super), 0)};
NondetRegStruct x1760 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 19), _super), 0)};
NondetRegStruct x1761 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 20), _super), 0)};
NondetRegStruct x1762 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 21), _super), 0)};
NondetRegStruct x1763 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 22), _super), 0)};
NondetRegStruct x1764 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1765 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm4.zcheck._super), 0)};
x1585 = PoseidonStateStruct{
  .hasState = x1730,   .stateAddr = x1731,   .bufOutAddr = x1732,   .isElem = x1733,   .checkOut = x1734,   .loadTxType = x1735,   .nextState = x1736,   .subState = x1737,   .bufInAddr = x1738,   .count = x1739,   .mode = x1740,   .inner = NondetRegStruct24Array{x1741, x1742, x1743, x1744, x1745, x1746, x1747, x1748, x1749, x1750, x1751, x1752, x1753, x1754, x1755, x1756, x1757, x1758, x1759, x1760, x1761, x1762, x1763, x1764},   .zcheck = x1765};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super.modeSplit._super), 5), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonPagingStoreDone(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:438)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:462)
NondetRegStruct x1766 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1767 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1768 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1769 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1770 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1771 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1772 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1773 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1774 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1775 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1776 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1777 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 0), _super), 0)};
NondetRegStruct x1778 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 1), _super), 0)};
NondetRegStruct x1779 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 2), _super), 0)};
NondetRegStruct x1780 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 3), _super), 0)};
NondetRegStruct x1781 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 4), _super), 0)};
NondetRegStruct x1782 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 5), _super), 0)};
NondetRegStruct x1783 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 6), _super), 0)};
NondetRegStruct x1784 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 7), _super), 0)};
NondetRegStruct x1785 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 8), _super), 0)};
NondetRegStruct x1786 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 9), _super), 0)};
NondetRegStruct x1787 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 10), _super), 0)};
NondetRegStruct x1788 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 11), _super), 0)};
NondetRegStruct x1789 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 12), _super), 0)};
NondetRegStruct x1790 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 13), _super), 0)};
NondetRegStruct x1791 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 14), _super), 0)};
NondetRegStruct x1792 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 15), _super), 0)};
NondetRegStruct x1793 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 16), _super), 0)};
NondetRegStruct x1794 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 17), _super), 0)};
NondetRegStruct x1795 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 18), _super), 0)};
NondetRegStruct x1796 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 19), _super), 0)};
NondetRegStruct x1797 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 20), _super), 0)};
NondetRegStruct x1798 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 21), _super), 0)};
NondetRegStruct x1799 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 22), _super), 0)};
NondetRegStruct x1800 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1801 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super.arm5.zcheck._super), 0)};
x1585 = PoseidonStateStruct{
  .hasState = x1766,   .stateAddr = x1767,   .bufOutAddr = x1768,   .isElem = x1769,   .checkOut = x1770,   .loadTxType = x1771,   .nextState = x1772,   .subState = x1773,   .bufInAddr = x1774,   .count = x1775,   .mode = x1776,   .inner = NondetRegStruct24Array{x1777, x1778, x1779, x1780, x1781, x1782, x1783, x1784, x1785, x1786, x1787, x1788, x1789, x1790, x1791, x1792, x1793, x1794, x1795, x1796, x1797, x1798, x1799, x1800},   .zcheck = x1801};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:456)
PoseidonStateStruct x1802 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm6._super._super._super));
x990 = x1802;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:322)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:478)
Val x1803 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 0), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1803), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1804 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 0), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1804), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1805 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 0), ftw.lowIsZero._super), 0));
ComponentStruct x1806;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 0), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1807 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 0), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1807), "value out of range!");
x1806 = x19;
} else if (to_size_t(x1805)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1808 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 0), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1808), "value out of range!");
x1806 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1809 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 1), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1809), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1810 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 1), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1810), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1811 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 1), ftw.lowIsZero._super), 0));
ComponentStruct x1812;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 1), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1813 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 1), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1813), "value out of range!");
x1812 = x19;
} else if (to_size_t(x1811)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1814 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 1), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1814), "value out of range!");
x1812 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1815 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 2), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1815), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1816 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 2), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1816), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1817 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 2), ftw.lowIsZero._super), 0));
ComponentStruct x1818;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 2), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1819 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 2), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1819), "value out of range!");
x1818 = x19;
} else if (to_size_t(x1817)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1820 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 2), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1820), "value out of range!");
x1818 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1821 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 3), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1821), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1822 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 3), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1822), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1823 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 3), ftw.lowIsZero._super), 0));
ComponentStruct x1824;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 3), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1825 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 3), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1825), "value out of range!");
x1824 = x19;
} else if (to_size_t(x1823)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1826 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 3), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1826), "value out of range!");
x1824 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1827 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 4), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1827), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1828 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 4), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1828), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1829 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 4), ftw.lowIsZero._super), 0));
ComponentStruct x1830;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 4), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1831 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 4), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1831), "value out of range!");
x1830 = x19;
} else if (to_size_t(x1829)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1832 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 4), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1832), "value out of range!");
x1830 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1833 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 5), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1833), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1834 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 5), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1834), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1835 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 5), ftw.lowIsZero._super), 0));
ComponentStruct x1836;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 5), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1837 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 5), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1837), "value out of range!");
x1836 = x19;
} else if (to_size_t(x1835)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1838 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 5), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1838), "value out of range!");
x1836 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1839 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 6), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1839), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1840 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 6), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1840), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1841 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 6), ftw.lowIsZero._super), 0));
ComponentStruct x1842;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 6), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1843 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 6), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1843), "value out of range!");
x1842 = x19;
} else if (to_size_t(x1841)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1844 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 6), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1844), "value out of range!");
x1842 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
Val x1845 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 7), ftw.low.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1845), "value out of range!");
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:283)
Val x1846 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 7), ftw.high.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1846), "value out of range!");
// builtin Sub
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
Val x1847 = (Val(1) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 7), ftw.lowIsZero._super), 0));
ComponentStruct x1848;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 7), ftw.lowIsZero._super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:292)
Val x1849 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 7), ftw._2.arm0._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1849), "value out of range!");
x1848 = x19;
} else if (to_size_t(x1847)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:294)
Val x1850 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._1), 7), ftw._2.arm1._0.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x1850), "value out of range!");
x1848 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:327)
NondetRegStruct x1851 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1852 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1853 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1854 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1855 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1856 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1857 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1858 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1859 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1860 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1861 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1862 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 0), _super), 0)};
NondetRegStruct x1863 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 1), _super), 0)};
NondetRegStruct x1864 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 2), _super), 0)};
NondetRegStruct x1865 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 3), _super), 0)};
NondetRegStruct x1866 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 4), _super), 0)};
NondetRegStruct x1867 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 5), _super), 0)};
NondetRegStruct x1868 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 6), _super), 0)};
NondetRegStruct x1869 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 7), _super), 0)};
NondetRegStruct x1870 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 8), _super), 0)};
NondetRegStruct x1871 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 9), _super), 0)};
NondetRegStruct x1872 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 10), _super), 0)};
NondetRegStruct x1873 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 11), _super), 0)};
NondetRegStruct x1874 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 12), _super), 0)};
NondetRegStruct x1875 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 13), _super), 0)};
NondetRegStruct x1876 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 14), _super), 0)};
NondetRegStruct x1877 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 15), _super), 0)};
NondetRegStruct x1878 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 16), _super), 0)};
NondetRegStruct x1879 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 17), _super), 0)};
NondetRegStruct x1880 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 18), _super), 0)};
NondetRegStruct x1881 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 19), _super), 0)};
NondetRegStruct x1882 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 20), _super), 0)};
NondetRegStruct x1883 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 21), _super), 0)};
NondetRegStruct x1884 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 22), _super), 0)};
NondetRegStruct x1885 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1886 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef.arm7._super._super.zcheck._super), 0)};
x990 = PoseidonStateStruct{
  .hasState = x1851,   .stateAddr = x1852,   .bufOutAddr = x1853,   .isElem = x1854,   .checkOut = x1855,   .loadTxType = x1856,   .nextState = x1857,   .subState = x1858,   .bufInAddr = x1859,   .count = x1860,   .mode = x1861,   .inner = NondetRegStruct24Array{x1862, x1863, x1864, x1865, x1866, x1867, x1868, x1869, x1870, x1871, x1872, x1873, x1874, x1875, x1876, x1877, x1878, x1879, x1880, x1881, x1882, x1883, x1884, x1885},   .zcheck = x1886};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
PoseidonStateStruct x1887 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm9.stateRedef._super));
x21 = InstOutputBaseStruct{
  .newPc = x11,   .newState = x1887.nextState._super,   .newMode = x1887.mode._super,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 10), _super), 0))) {
PoseidonStateStruct x1888;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:253)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:488)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:83)
NondetRegStruct x1889 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1890 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1891 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1892 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1893 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1894 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1895 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1896 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1897 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1898 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1899 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1900 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 0), _super), 0)};
NondetRegStruct x1901 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 1), _super), 0)};
NondetRegStruct x1902 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 2), _super), 0)};
NondetRegStruct x1903 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 3), _super), 0)};
NondetRegStruct x1904 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 4), _super), 0)};
NondetRegStruct x1905 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 5), _super), 0)};
NondetRegStruct x1906 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 6), _super), 0)};
NondetRegStruct x1907 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 7), _super), 0)};
NondetRegStruct x1908 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 8), _super), 0)};
NondetRegStruct x1909 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 9), _super), 0)};
NondetRegStruct x1910 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 10), _super), 0)};
NondetRegStruct x1911 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 11), _super), 0)};
NondetRegStruct x1912 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 12), _super), 0)};
NondetRegStruct x1913 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 13), _super), 0)};
NondetRegStruct x1914 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 14), _super), 0)};
NondetRegStruct x1915 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 15), _super), 0)};
NondetRegStruct x1916 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 16), _super), 0)};
NondetRegStruct x1917 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 17), _super), 0)};
NondetRegStruct x1918 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 18), _super), 0)};
NondetRegStruct x1919 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 19), _super), 0)};
NondetRegStruct x1920 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 20), _super), 0)};
NondetRegStruct x1921 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 21), _super), 0)};
NondetRegStruct x1922 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 22), _super), 0)};
NondetRegStruct x1923 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1924 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm0._super.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x1889,   .stateAddr = x1890,   .bufOutAddr = x1891,   .isElem = x1892,   .checkOut = x1893,   .loadTxType = x1894,   .nextState = x1895,   .subState = x1896,   .bufInAddr = x1897,   .count = x1898,   .mode = x1899,   .inner = NondetRegStruct24Array{x1900, x1901, x1902, x1903, x1904, x1905, x1906, x1907, x1908, x1909, x1910, x1911, x1912, x1913, x1914, x1915, x1916, x1917, x1918, x1919, x1920, x1921, x1922, x1923},   .zcheck = x1924};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonIntRounds(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:258)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:489)
NondetRegStruct x1925 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1926 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1927 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1928 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1929 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1930 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1931 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1932 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1933 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1934 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1935 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1936 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 0), _super), 0)};
NondetRegStruct x1937 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 1), _super), 0)};
NondetRegStruct x1938 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 2), _super), 0)};
NondetRegStruct x1939 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 3), _super), 0)};
NondetRegStruct x1940 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 4), _super), 0)};
NondetRegStruct x1941 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 5), _super), 0)};
NondetRegStruct x1942 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 6), _super), 0)};
NondetRegStruct x1943 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 7), _super), 0)};
NondetRegStruct x1944 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 8), _super), 0)};
NondetRegStruct x1945 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 9), _super), 0)};
NondetRegStruct x1946 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 10), _super), 0)};
NondetRegStruct x1947 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 11), _super), 0)};
NondetRegStruct x1948 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 12), _super), 0)};
NondetRegStruct x1949 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 13), _super), 0)};
NondetRegStruct x1950 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 14), _super), 0)};
NondetRegStruct x1951 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 15), _super), 0)};
NondetRegStruct x1952 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 16), _super), 0)};
NondetRegStruct x1953 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 17), _super), 0)};
NondetRegStruct x1954 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 18), _super), 0)};
NondetRegStruct x1955 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 19), _super), 0)};
NondetRegStruct x1956 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 20), _super), 0)};
NondetRegStruct x1957 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 21), _super), 0)};
NondetRegStruct x1958 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 22), _super), 0)};
NondetRegStruct x1959 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1960 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm1._super.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x1925,   .stateAddr = x1926,   .bufOutAddr = x1927,   .isElem = x1928,   .checkOut = x1929,   .loadTxType = x1930,   .nextState = x1931,   .subState = x1932,   .bufInAddr = x1933,   .count = x1934,   .mode = x1935,   .inner = NondetRegStruct24Array{x1936, x1937, x1938, x1939, x1940, x1941, x1942, x1943, x1944, x1945, x1946, x1947, x1948, x1949, x1950, x1951, x1952, x1953, x1954, x1955, x1956, x1957, x1958, x1959},   .zcheck = x1960};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:61)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:490)
NondetRegStruct x1961 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1962 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1963 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x1964 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x1965 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x1966 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x1967 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x1968 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x1969 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x1970 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x1971 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x1972 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 0), _super), 0)};
NondetRegStruct x1973 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 1), _super), 0)};
NondetRegStruct x1974 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 2), _super), 0)};
NondetRegStruct x1975 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 3), _super), 0)};
NondetRegStruct x1976 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 4), _super), 0)};
NondetRegStruct x1977 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 5), _super), 0)};
NondetRegStruct x1978 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 6), _super), 0)};
NondetRegStruct x1979 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 7), _super), 0)};
NondetRegStruct x1980 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 8), _super), 0)};
NondetRegStruct x1981 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 9), _super), 0)};
NondetRegStruct x1982 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 10), _super), 0)};
NondetRegStruct x1983 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 11), _super), 0)};
NondetRegStruct x1984 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 12), _super), 0)};
NondetRegStruct x1985 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 13), _super), 0)};
NondetRegStruct x1986 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 14), _super), 0)};
NondetRegStruct x1987 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 15), _super), 0)};
NondetRegStruct x1988 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 16), _super), 0)};
NondetRegStruct x1989 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 17), _super), 0)};
NondetRegStruct x1990 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 18), _super), 0)};
NondetRegStruct x1991 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 19), _super), 0)};
NondetRegStruct x1992 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 20), _super), 0)};
NondetRegStruct x1993 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 21), _super), 0)};
NondetRegStruct x1994 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 22), _super), 0)};
NondetRegStruct x1995 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x1996 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm2.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x1961,   .stateAddr = x1962,   .bufOutAddr = x1963,   .isElem = x1964,   .checkOut = x1965,   .loadTxType = x1966,   .nextState = x1967,   .subState = x1968,   .bufInAddr = x1969,   .count = x1970,   .mode = x1971,   .inner = NondetRegStruct24Array{x1972, x1973, x1974, x1975, x1976, x1977, x1978, x1979, x1980, x1981, x1982, x1983, x1984, x1985, x1986, x1987, x1988, x1989, x1990, x1991, x1992, x1993, x1994, x1995},   .zcheck = x1996};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:491)
NondetRegStruct x1997 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x1998 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x1999 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x2000 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x2001 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x2002 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x2003 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x2004 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x2005 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x2006 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x2007 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x2008 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 0), _super), 0)};
NondetRegStruct x2009 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 1), _super), 0)};
NondetRegStruct x2010 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 2), _super), 0)};
NondetRegStruct x2011 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 3), _super), 0)};
NondetRegStruct x2012 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 4), _super), 0)};
NondetRegStruct x2013 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 5), _super), 0)};
NondetRegStruct x2014 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 6), _super), 0)};
NondetRegStruct x2015 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 7), _super), 0)};
NondetRegStruct x2016 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 8), _super), 0)};
NondetRegStruct x2017 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 9), _super), 0)};
NondetRegStruct x2018 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 10), _super), 0)};
NondetRegStruct x2019 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 11), _super), 0)};
NondetRegStruct x2020 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 12), _super), 0)};
NondetRegStruct x2021 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 13), _super), 0)};
NondetRegStruct x2022 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 14), _super), 0)};
NondetRegStruct x2023 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 15), _super), 0)};
NondetRegStruct x2024 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 16), _super), 0)};
NondetRegStruct x2025 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 17), _super), 0)};
NondetRegStruct x2026 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 18), _super), 0)};
NondetRegStruct x2027 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 19), _super), 0)};
NondetRegStruct x2028 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 20), _super), 0)};
NondetRegStruct x2029 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 21), _super), 0)};
NondetRegStruct x2030 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 22), _super), 0)};
NondetRegStruct x2031 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x2032 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm3.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x1997,   .stateAddr = x1998,   .bufOutAddr = x1999,   .isElem = x2000,   .checkOut = x2001,   .loadTxType = x2002,   .nextState = x2003,   .subState = x2004,   .bufInAddr = x2005,   .count = x2006,   .mode = x2007,   .inner = NondetRegStruct24Array{x2008, x2009, x2010, x2011, x2012, x2013, x2014, x2015, x2016, x2017, x2018, x2019, x2020, x2021, x2022, x2023, x2024, x2025, x2026, x2027, x2028, x2029, x2030, x2031},   .zcheck = x2032};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:492)
NondetRegStruct x2033 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x2034 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x2035 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x2036 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x2037 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x2038 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x2039 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x2040 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x2041 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x2042 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x2043 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x2044 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 0), _super), 0)};
NondetRegStruct x2045 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 1), _super), 0)};
NondetRegStruct x2046 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 2), _super), 0)};
NondetRegStruct x2047 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 3), _super), 0)};
NondetRegStruct x2048 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 4), _super), 0)};
NondetRegStruct x2049 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 5), _super), 0)};
NondetRegStruct x2050 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 6), _super), 0)};
NondetRegStruct x2051 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 7), _super), 0)};
NondetRegStruct x2052 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 8), _super), 0)};
NondetRegStruct x2053 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 9), _super), 0)};
NondetRegStruct x2054 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 10), _super), 0)};
NondetRegStruct x2055 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 11), _super), 0)};
NondetRegStruct x2056 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 12), _super), 0)};
NondetRegStruct x2057 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 13), _super), 0)};
NondetRegStruct x2058 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 14), _super), 0)};
NondetRegStruct x2059 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 15), _super), 0)};
NondetRegStruct x2060 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 16), _super), 0)};
NondetRegStruct x2061 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 17), _super), 0)};
NondetRegStruct x2062 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 18), _super), 0)};
NondetRegStruct x2063 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 19), _super), 0)};
NondetRegStruct x2064 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 20), _super), 0)};
NondetRegStruct x2065 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 21), _super), 0)};
NondetRegStruct x2066 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 22), _super), 0)};
NondetRegStruct x2067 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x2068 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm4.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x2033,   .stateAddr = x2034,   .bufOutAddr = x2035,   .isElem = x2036,   .checkOut = x2037,   .loadTxType = x2038,   .nextState = x2039,   .subState = x2040,   .bufInAddr = x2041,   .count = x2042,   .mode = x2043,   .inner = NondetRegStruct24Array{x2044, x2045, x2046, x2047, x2048, x2049, x2050, x2051, x2052, x2053, x2054, x2055, x2056, x2057, x2058, x2059, x2060, x2061, x2062, x2063, x2064, x2065, x2066, x2067},   .zcheck = x2068};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:493)
NondetRegStruct x2069 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x2070 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x2071 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x2072 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x2073 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x2074 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x2075 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x2076 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x2077 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x2078 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x2079 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x2080 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 0), _super), 0)};
NondetRegStruct x2081 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 1), _super), 0)};
NondetRegStruct x2082 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 2), _super), 0)};
NondetRegStruct x2083 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 3), _super), 0)};
NondetRegStruct x2084 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 4), _super), 0)};
NondetRegStruct x2085 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 5), _super), 0)};
NondetRegStruct x2086 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 6), _super), 0)};
NondetRegStruct x2087 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 7), _super), 0)};
NondetRegStruct x2088 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 8), _super), 0)};
NondetRegStruct x2089 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 9), _super), 0)};
NondetRegStruct x2090 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 10), _super), 0)};
NondetRegStruct x2091 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 11), _super), 0)};
NondetRegStruct x2092 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 12), _super), 0)};
NondetRegStruct x2093 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 13), _super), 0)};
NondetRegStruct x2094 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 14), _super), 0)};
NondetRegStruct x2095 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 15), _super), 0)};
NondetRegStruct x2096 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 16), _super), 0)};
NondetRegStruct x2097 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 17), _super), 0)};
NondetRegStruct x2098 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 18), _super), 0)};
NondetRegStruct x2099 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 19), _super), 0)};
NondetRegStruct x2100 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 20), _super), 0)};
NondetRegStruct x2101 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 21), _super), 0)};
NondetRegStruct x2102 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 22), _super), 0)};
NondetRegStruct x2103 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x2104 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm5.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x2069,   .stateAddr = x2070,   .bufOutAddr = x2071,   .isElem = x2072,   .checkOut = x2073,   .loadTxType = x2074,   .nextState = x2075,   .subState = x2076,   .bufInAddr = x2077,   .count = x2078,   .mode = x2079,   .inner = NondetRegStruct24Array{x2080, x2081, x2082, x2083, x2084, x2085, x2086, x2087, x2088, x2089, x2090, x2091, x2092, x2093, x2094, x2095, x2096, x2097, x2098, x2099, x2100, x2101, x2102, x2103},   .zcheck = x2104};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:494)
NondetRegStruct x2105 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x2106 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x2107 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x2108 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x2109 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x2110 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x2111 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x2112 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x2113 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x2114 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x2115 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x2116 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 0), _super), 0)};
NondetRegStruct x2117 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 1), _super), 0)};
NondetRegStruct x2118 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 2), _super), 0)};
NondetRegStruct x2119 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 3), _super), 0)};
NondetRegStruct x2120 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 4), _super), 0)};
NondetRegStruct x2121 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 5), _super), 0)};
NondetRegStruct x2122 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 6), _super), 0)};
NondetRegStruct x2123 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 7), _super), 0)};
NondetRegStruct x2124 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 8), _super), 0)};
NondetRegStruct x2125 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 9), _super), 0)};
NondetRegStruct x2126 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 10), _super), 0)};
NondetRegStruct x2127 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 11), _super), 0)};
NondetRegStruct x2128 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 12), _super), 0)};
NondetRegStruct x2129 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 13), _super), 0)};
NondetRegStruct x2130 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 14), _super), 0)};
NondetRegStruct x2131 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 15), _super), 0)};
NondetRegStruct x2132 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 16), _super), 0)};
NondetRegStruct x2133 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 17), _super), 0)};
NondetRegStruct x2134 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 18), _super), 0)};
NondetRegStruct x2135 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 19), _super), 0)};
NondetRegStruct x2136 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 20), _super), 0)};
NondetRegStruct x2137 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 21), _super), 0)};
NondetRegStruct x2138 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 22), _super), 0)};
NondetRegStruct x2139 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x2140 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm6.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x2105,   .stateAddr = x2106,   .bufOutAddr = x2107,   .isElem = x2108,   .checkOut = x2109,   .loadTxType = x2110,   .nextState = x2111,   .subState = x2112,   .bufInAddr = x2113,   .count = x2114,   .mode = x2115,   .inner = NondetRegStruct24Array{x2116, x2117, x2118, x2119, x2120, x2121, x2122, x2123, x2124, x2125, x2126, x2127, x2128, x2129, x2130, x2131, x2132, x2133, x2134, x2135, x2136, x2137, x2138, x2139},   .zcheck = x2140};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:495)
NondetRegStruct x2141 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.hasState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x2142 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.stateAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x2143 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.bufOutAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x2144 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.isElem._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x2145 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.checkOut._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x2146 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.loadTxType._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x2147 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.nextState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x2148 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.subState._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x2149 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.bufInAddr._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x2150 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.count._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x2151 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.mode._super), 0)};
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct x2152 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 0), _super), 0)};
NondetRegStruct x2153 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 1), _super), 0)};
NondetRegStruct x2154 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 2), _super), 0)};
NondetRegStruct x2155 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 3), _super), 0)};
NondetRegStruct x2156 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 4), _super), 0)};
NondetRegStruct x2157 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 5), _super), 0)};
NondetRegStruct x2158 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 6), _super), 0)};
NondetRegStruct x2159 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 7), _super), 0)};
NondetRegStruct x2160 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 8), _super), 0)};
NondetRegStruct x2161 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 9), _super), 0)};
NondetRegStruct x2162 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 10), _super), 0)};
NondetRegStruct x2163 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 11), _super), 0)};
NondetRegStruct x2164 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 12), _super), 0)};
NondetRegStruct x2165 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 13), _super), 0)};
NondetRegStruct x2166 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 14), _super), 0)};
NondetRegStruct x2167 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 15), _super), 0)};
NondetRegStruct x2168 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 16), _super), 0)};
NondetRegStruct x2169 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 17), _super), 0)};
NondetRegStruct x2170 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 18), _super), 0)};
NondetRegStruct x2171 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 19), _super), 0)};
NondetRegStruct x2172 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 20), _super), 0)};
NondetRegStruct x2173 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 21), _super), 0)};
NondetRegStruct x2174 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 22), _super), 0)};
NondetRegStruct x2175 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.inner), 23), _super), 0)};
// builtin NondetExtReg
// ExtReg(<preamble>:12)
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x2176 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef.arm7.zcheck._super), 0)};
x1888 = PoseidonStateStruct{
  .hasState = x2141,   .stateAddr = x2142,   .bufOutAddr = x2143,   .isElem = x2144,   .checkOut = x2145,   .loadTxType = x2146,   .nextState = x2147,   .subState = x2148,   .bufInAddr = x2149,   .count = x2150,   .mode = x2151,   .inner = NondetRegStruct24Array{x2152, x2153, x2154, x2155, x2156, x2157, x2158, x2159, x2160, x2161, x2162, x2163, x2164, x2165, x2166, x2167, x2168, x2169, x2170, x2171, x2172, x2173, x2174, x2175},   .zcheck = x2176};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:487)
PoseidonStateStruct x2177 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm10.stateRedef._super));
x21 = InstOutputBaseStruct{
  .newPc = x11,   .newState = x2177.nextState._super,   .newMode = x2177.mode._super,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 11), _super), 0))) {
ShaStateStruct x2178;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// builtin NondetReg
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:52)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:229)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:84)
NondetRegStruct x2179 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2180 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2181 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2182 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2183 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2184 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2185 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2186 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 0), _super), 0)};
NondetRegStruct x2187 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 1), _super), 0)};
NondetRegStruct x2188 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 2), _super), 0)};
NondetRegStruct x2189 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 3), _super), 0)};
NondetRegStruct x2190 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 4), _super), 0)};
NondetRegStruct x2191 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 5), _super), 0)};
NondetRegStruct x2192 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 6), _super), 0)};
NondetRegStruct x2193 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 7), _super), 0)};
NondetRegStruct x2194 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 8), _super), 0)};
NondetRegStruct x2195 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 9), _super), 0)};
NondetRegStruct x2196 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 10), _super), 0)};
NondetRegStruct x2197 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 11), _super), 0)};
NondetRegStruct x2198 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 12), _super), 0)};
NondetRegStruct x2199 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 13), _super), 0)};
NondetRegStruct x2200 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 14), _super), 0)};
NondetRegStruct x2201 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 15), _super), 0)};
NondetRegStruct x2202 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 16), _super), 0)};
NondetRegStruct x2203 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 17), _super), 0)};
NondetRegStruct x2204 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 18), _super), 0)};
NondetRegStruct x2205 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 19), _super), 0)};
NondetRegStruct x2206 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 20), _super), 0)};
NondetRegStruct x2207 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 21), _super), 0)};
NondetRegStruct x2208 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 22), _super), 0)};
NondetRegStruct x2209 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 23), _super), 0)};
NondetRegStruct x2210 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 24), _super), 0)};
NondetRegStruct x2211 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 25), _super), 0)};
NondetRegStruct x2212 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 26), _super), 0)};
NondetRegStruct x2213 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 27), _super), 0)};
NondetRegStruct x2214 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 28), _super), 0)};
NondetRegStruct x2215 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 29), _super), 0)};
NondetRegStruct x2216 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 30), _super), 0)};
NondetRegStruct x2217 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2218 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 0), _super), 0)};
NondetRegStruct x2219 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 1), _super), 0)};
NondetRegStruct x2220 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 2), _super), 0)};
NondetRegStruct x2221 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 3), _super), 0)};
NondetRegStruct x2222 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 4), _super), 0)};
NondetRegStruct x2223 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 5), _super), 0)};
NondetRegStruct x2224 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 6), _super), 0)};
NondetRegStruct x2225 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 7), _super), 0)};
NondetRegStruct x2226 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 8), _super), 0)};
NondetRegStruct x2227 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 9), _super), 0)};
NondetRegStruct x2228 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 10), _super), 0)};
NondetRegStruct x2229 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 11), _super), 0)};
NondetRegStruct x2230 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 12), _super), 0)};
NondetRegStruct x2231 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 13), _super), 0)};
NondetRegStruct x2232 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 14), _super), 0)};
NondetRegStruct x2233 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 15), _super), 0)};
NondetRegStruct x2234 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 16), _super), 0)};
NondetRegStruct x2235 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 17), _super), 0)};
NondetRegStruct x2236 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 18), _super), 0)};
NondetRegStruct x2237 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 19), _super), 0)};
NondetRegStruct x2238 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 20), _super), 0)};
NondetRegStruct x2239 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 21), _super), 0)};
NondetRegStruct x2240 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 22), _super), 0)};
NondetRegStruct x2241 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 23), _super), 0)};
NondetRegStruct x2242 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 24), _super), 0)};
NondetRegStruct x2243 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 25), _super), 0)};
NondetRegStruct x2244 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 26), _super), 0)};
NondetRegStruct x2245 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 27), _super), 0)};
NondetRegStruct x2246 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 28), _super), 0)};
NondetRegStruct x2247 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 29), _super), 0)};
NondetRegStruct x2248 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 30), _super), 0)};
NondetRegStruct x2249 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2250 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 0), _super), 0)};
NondetRegStruct x2251 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 1), _super), 0)};
NondetRegStruct x2252 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 2), _super), 0)};
NondetRegStruct x2253 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 3), _super), 0)};
NondetRegStruct x2254 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 4), _super), 0)};
NondetRegStruct x2255 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 5), _super), 0)};
NondetRegStruct x2256 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 6), _super), 0)};
NondetRegStruct x2257 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 7), _super), 0)};
NondetRegStruct x2258 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 8), _super), 0)};
NondetRegStruct x2259 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 9), _super), 0)};
NondetRegStruct x2260 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 10), _super), 0)};
NondetRegStruct x2261 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 11), _super), 0)};
NondetRegStruct x2262 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 12), _super), 0)};
NondetRegStruct x2263 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 13), _super), 0)};
NondetRegStruct x2264 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 14), _super), 0)};
NondetRegStruct x2265 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 15), _super), 0)};
NondetRegStruct x2266 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 16), _super), 0)};
NondetRegStruct x2267 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 17), _super), 0)};
NondetRegStruct x2268 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 18), _super), 0)};
NondetRegStruct x2269 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 19), _super), 0)};
NondetRegStruct x2270 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 20), _super), 0)};
NondetRegStruct x2271 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 21), _super), 0)};
NondetRegStruct x2272 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 22), _super), 0)};
NondetRegStruct x2273 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 23), _super), 0)};
NondetRegStruct x2274 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 24), _super), 0)};
NondetRegStruct x2275 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 25), _super), 0)};
NondetRegStruct x2276 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 26), _super), 0)};
NondetRegStruct x2277 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 27), _super), 0)};
NondetRegStruct x2278 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 28), _super), 0)};
NondetRegStruct x2279 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 29), _super), 0)};
NondetRegStruct x2280 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 30), _super), 0)};
NondetRegStruct x2281 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm0._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2179,   .stateOutAddr = x2180,   .dataAddr = x2181,   .count = x2182,   .kAddr = x2183,   .round = x2184,   .nextState = x2185,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2186}, ShaStateAStruct{
  ._super = x2187}, ShaStateAStruct{
  ._super = x2188}, ShaStateAStruct{
  ._super = x2189}, ShaStateAStruct{
  ._super = x2190}, ShaStateAStruct{
  ._super = x2191}, ShaStateAStruct{
  ._super = x2192}, ShaStateAStruct{
  ._super = x2193}, ShaStateAStruct{
  ._super = x2194}, ShaStateAStruct{
  ._super = x2195}, ShaStateAStruct{
  ._super = x2196}, ShaStateAStruct{
  ._super = x2197}, ShaStateAStruct{
  ._super = x2198}, ShaStateAStruct{
  ._super = x2199}, ShaStateAStruct{
  ._super = x2200}, ShaStateAStruct{
  ._super = x2201}, ShaStateAStruct{
  ._super = x2202}, ShaStateAStruct{
  ._super = x2203}, ShaStateAStruct{
  ._super = x2204}, ShaStateAStruct{
  ._super = x2205}, ShaStateAStruct{
  ._super = x2206}, ShaStateAStruct{
  ._super = x2207}, ShaStateAStruct{
  ._super = x2208}, ShaStateAStruct{
  ._super = x2209}, ShaStateAStruct{
  ._super = x2210}, ShaStateAStruct{
  ._super = x2211}, ShaStateAStruct{
  ._super = x2212}, ShaStateAStruct{
  ._super = x2213}, ShaStateAStruct{
  ._super = x2214}, ShaStateAStruct{
  ._super = x2215}, ShaStateAStruct{
  ._super = x2216}, ShaStateAStruct{
  ._super = x2217}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2218}, ShaStateEStruct{
  ._super = x2219}, ShaStateEStruct{
  ._super = x2220}, ShaStateEStruct{
  ._super = x2221}, ShaStateEStruct{
  ._super = x2222}, ShaStateEStruct{
  ._super = x2223}, ShaStateEStruct{
  ._super = x2224}, ShaStateEStruct{
  ._super = x2225}, ShaStateEStruct{
  ._super = x2226}, ShaStateEStruct{
  ._super = x2227}, ShaStateEStruct{
  ._super = x2228}, ShaStateEStruct{
  ._super = x2229}, ShaStateEStruct{
  ._super = x2230}, ShaStateEStruct{
  ._super = x2231}, ShaStateEStruct{
  ._super = x2232}, ShaStateEStruct{
  ._super = x2233}, ShaStateEStruct{
  ._super = x2234}, ShaStateEStruct{
  ._super = x2235}, ShaStateEStruct{
  ._super = x2236}, ShaStateEStruct{
  ._super = x2237}, ShaStateEStruct{
  ._super = x2238}, ShaStateEStruct{
  ._super = x2239}, ShaStateEStruct{
  ._super = x2240}, ShaStateEStruct{
  ._super = x2241}, ShaStateEStruct{
  ._super = x2242}, ShaStateEStruct{
  ._super = x2243}, ShaStateEStruct{
  ._super = x2244}, ShaStateEStruct{
  ._super = x2245}, ShaStateEStruct{
  ._super = x2246}, ShaStateEStruct{
  ._super = x2247}, ShaStateEStruct{
  ._super = x2248}, ShaStateEStruct{
  ._super = x2249}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2250}, ShaStateWStruct{
  ._super = x2251}, ShaStateWStruct{
  ._super = x2252}, ShaStateWStruct{
  ._super = x2253}, ShaStateWStruct{
  ._super = x2254}, ShaStateWStruct{
  ._super = x2255}, ShaStateWStruct{
  ._super = x2256}, ShaStateWStruct{
  ._super = x2257}, ShaStateWStruct{
  ._super = x2258}, ShaStateWStruct{
  ._super = x2259}, ShaStateWStruct{
  ._super = x2260}, ShaStateWStruct{
  ._super = x2261}, ShaStateWStruct{
  ._super = x2262}, ShaStateWStruct{
  ._super = x2263}, ShaStateWStruct{
  ._super = x2264}, ShaStateWStruct{
  ._super = x2265}, ShaStateWStruct{
  ._super = x2266}, ShaStateWStruct{
  ._super = x2267}, ShaStateWStruct{
  ._super = x2268}, ShaStateWStruct{
  ._super = x2269}, ShaStateWStruct{
  ._super = x2270}, ShaStateWStruct{
  ._super = x2271}, ShaStateWStruct{
  ._super = x2272}, ShaStateWStruct{
  ._super = x2273}, ShaStateWStruct{
  ._super = x2274}, ShaStateWStruct{
  ._super = x2275}, ShaStateWStruct{
  ._super = x2276}, ShaStateWStruct{
  ._super = x2277}, ShaStateWStruct{
  ._super = x2278}, ShaStateWStruct{
  ._super = x2279}, ShaStateWStruct{
  ._super = x2280}, ShaStateWStruct{
  ._super = x2281}}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// builtin Sub
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:101)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:230)
Val x2282 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super.lastRound._super._super), 0));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:102)
Val x2283 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super.countZero._super._super), 0));
Val x2284;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super.lastRound._super._super), 0))) {
Val x2285;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super.countZero._super._super), 0))) {
x2285 = Val(48);
} else if (to_size_t(x2283)) {
x2285 = Val(34);
} else {
   assert(0 && "Reached unreachable mux arm");
}
x2284 = x2285;
} else if (to_size_t(x2282)) {
x2284 = Val(33);
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:114)
NondetRegStruct x2286 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2287 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2288 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2289 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2290 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2291 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2292 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2293 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 0), _super), 0)};
NondetRegStruct x2294 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 1), _super), 0)};
NondetRegStruct x2295 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 2), _super), 0)};
NondetRegStruct x2296 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 3), _super), 0)};
NondetRegStruct x2297 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 4), _super), 0)};
NondetRegStruct x2298 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 5), _super), 0)};
NondetRegStruct x2299 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 6), _super), 0)};
NondetRegStruct x2300 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 7), _super), 0)};
NondetRegStruct x2301 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 8), _super), 0)};
NondetRegStruct x2302 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 9), _super), 0)};
NondetRegStruct x2303 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 10), _super), 0)};
NondetRegStruct x2304 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 11), _super), 0)};
NondetRegStruct x2305 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 12), _super), 0)};
NondetRegStruct x2306 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 13), _super), 0)};
NondetRegStruct x2307 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 14), _super), 0)};
NondetRegStruct x2308 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 15), _super), 0)};
NondetRegStruct x2309 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 16), _super), 0)};
NondetRegStruct x2310 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 17), _super), 0)};
NondetRegStruct x2311 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 18), _super), 0)};
NondetRegStruct x2312 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 19), _super), 0)};
NondetRegStruct x2313 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 20), _super), 0)};
NondetRegStruct x2314 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 21), _super), 0)};
NondetRegStruct x2315 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 22), _super), 0)};
NondetRegStruct x2316 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 23), _super), 0)};
NondetRegStruct x2317 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 24), _super), 0)};
NondetRegStruct x2318 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 25), _super), 0)};
NondetRegStruct x2319 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 26), _super), 0)};
NondetRegStruct x2320 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 27), _super), 0)};
NondetRegStruct x2321 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 28), _super), 0)};
NondetRegStruct x2322 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 29), _super), 0)};
NondetRegStruct x2323 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 30), _super), 0)};
NondetRegStruct x2324 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2325 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 0), _super), 0)};
NondetRegStruct x2326 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 1), _super), 0)};
NondetRegStruct x2327 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 2), _super), 0)};
NondetRegStruct x2328 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 3), _super), 0)};
NondetRegStruct x2329 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 4), _super), 0)};
NondetRegStruct x2330 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 5), _super), 0)};
NondetRegStruct x2331 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 6), _super), 0)};
NondetRegStruct x2332 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 7), _super), 0)};
NondetRegStruct x2333 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 8), _super), 0)};
NondetRegStruct x2334 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 9), _super), 0)};
NondetRegStruct x2335 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 10), _super), 0)};
NondetRegStruct x2336 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 11), _super), 0)};
NondetRegStruct x2337 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 12), _super), 0)};
NondetRegStruct x2338 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 13), _super), 0)};
NondetRegStruct x2339 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 14), _super), 0)};
NondetRegStruct x2340 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 15), _super), 0)};
NondetRegStruct x2341 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 16), _super), 0)};
NondetRegStruct x2342 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 17), _super), 0)};
NondetRegStruct x2343 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 18), _super), 0)};
NondetRegStruct x2344 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 19), _super), 0)};
NondetRegStruct x2345 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 20), _super), 0)};
NondetRegStruct x2346 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 21), _super), 0)};
NondetRegStruct x2347 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 22), _super), 0)};
NondetRegStruct x2348 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 23), _super), 0)};
NondetRegStruct x2349 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 24), _super), 0)};
NondetRegStruct x2350 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 25), _super), 0)};
NondetRegStruct x2351 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 26), _super), 0)};
NondetRegStruct x2352 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 27), _super), 0)};
NondetRegStruct x2353 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 28), _super), 0)};
NondetRegStruct x2354 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 29), _super), 0)};
NondetRegStruct x2355 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 30), _super), 0)};
NondetRegStruct x2356 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2357 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 0), _super), 0)};
NondetRegStruct x2358 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 1), _super), 0)};
NondetRegStruct x2359 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 2), _super), 0)};
NondetRegStruct x2360 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 3), _super), 0)};
NondetRegStruct x2361 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 4), _super), 0)};
NondetRegStruct x2362 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 5), _super), 0)};
NondetRegStruct x2363 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 6), _super), 0)};
NondetRegStruct x2364 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 7), _super), 0)};
NondetRegStruct x2365 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 8), _super), 0)};
NondetRegStruct x2366 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 9), _super), 0)};
NondetRegStruct x2367 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 10), _super), 0)};
NondetRegStruct x2368 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 11), _super), 0)};
NondetRegStruct x2369 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 12), _super), 0)};
NondetRegStruct x2370 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 13), _super), 0)};
NondetRegStruct x2371 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 14), _super), 0)};
NondetRegStruct x2372 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 15), _super), 0)};
NondetRegStruct x2373 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 16), _super), 0)};
NondetRegStruct x2374 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 17), _super), 0)};
NondetRegStruct x2375 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 18), _super), 0)};
NondetRegStruct x2376 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 19), _super), 0)};
NondetRegStruct x2377 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 20), _super), 0)};
NondetRegStruct x2378 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 21), _super), 0)};
NondetRegStruct x2379 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 22), _super), 0)};
NondetRegStruct x2380 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 23), _super), 0)};
NondetRegStruct x2381 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 24), _super), 0)};
NondetRegStruct x2382 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 25), _super), 0)};
NondetRegStruct x2383 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 26), _super), 0)};
NondetRegStruct x2384 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 27), _super), 0)};
NondetRegStruct x2385 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 28), _super), 0)};
NondetRegStruct x2386 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 29), _super), 0)};
NondetRegStruct x2387 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 30), _super), 0)};
NondetRegStruct x2388 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm1._super._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2286,   .stateOutAddr = x2287,   .dataAddr = x2288,   .count = x2289,   .kAddr = x2290,   .round = x2291,   .nextState = x2292,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2293}, ShaStateAStruct{
  ._super = x2294}, ShaStateAStruct{
  ._super = x2295}, ShaStateAStruct{
  ._super = x2296}, ShaStateAStruct{
  ._super = x2297}, ShaStateAStruct{
  ._super = x2298}, ShaStateAStruct{
  ._super = x2299}, ShaStateAStruct{
  ._super = x2300}, ShaStateAStruct{
  ._super = x2301}, ShaStateAStruct{
  ._super = x2302}, ShaStateAStruct{
  ._super = x2303}, ShaStateAStruct{
  ._super = x2304}, ShaStateAStruct{
  ._super = x2305}, ShaStateAStruct{
  ._super = x2306}, ShaStateAStruct{
  ._super = x2307}, ShaStateAStruct{
  ._super = x2308}, ShaStateAStruct{
  ._super = x2309}, ShaStateAStruct{
  ._super = x2310}, ShaStateAStruct{
  ._super = x2311}, ShaStateAStruct{
  ._super = x2312}, ShaStateAStruct{
  ._super = x2313}, ShaStateAStruct{
  ._super = x2314}, ShaStateAStruct{
  ._super = x2315}, ShaStateAStruct{
  ._super = x2316}, ShaStateAStruct{
  ._super = x2317}, ShaStateAStruct{
  ._super = x2318}, ShaStateAStruct{
  ._super = x2319}, ShaStateAStruct{
  ._super = x2320}, ShaStateAStruct{
  ._super = x2321}, ShaStateAStruct{
  ._super = x2322}, ShaStateAStruct{
  ._super = x2323}, ShaStateAStruct{
  ._super = x2324}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2325}, ShaStateEStruct{
  ._super = x2326}, ShaStateEStruct{
  ._super = x2327}, ShaStateEStruct{
  ._super = x2328}, ShaStateEStruct{
  ._super = x2329}, ShaStateEStruct{
  ._super = x2330}, ShaStateEStruct{
  ._super = x2331}, ShaStateEStruct{
  ._super = x2332}, ShaStateEStruct{
  ._super = x2333}, ShaStateEStruct{
  ._super = x2334}, ShaStateEStruct{
  ._super = x2335}, ShaStateEStruct{
  ._super = x2336}, ShaStateEStruct{
  ._super = x2337}, ShaStateEStruct{
  ._super = x2338}, ShaStateEStruct{
  ._super = x2339}, ShaStateEStruct{
  ._super = x2340}, ShaStateEStruct{
  ._super = x2341}, ShaStateEStruct{
  ._super = x2342}, ShaStateEStruct{
  ._super = x2343}, ShaStateEStruct{
  ._super = x2344}, ShaStateEStruct{
  ._super = x2345}, ShaStateEStruct{
  ._super = x2346}, ShaStateEStruct{
  ._super = x2347}, ShaStateEStruct{
  ._super = x2348}, ShaStateEStruct{
  ._super = x2349}, ShaStateEStruct{
  ._super = x2350}, ShaStateEStruct{
  ._super = x2351}, ShaStateEStruct{
  ._super = x2352}, ShaStateEStruct{
  ._super = x2353}, ShaStateEStruct{
  ._super = x2354}, ShaStateEStruct{
  ._super = x2355}, ShaStateEStruct{
  ._super = x2356}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2357}, ShaStateWStruct{
  ._super = x2358}, ShaStateWStruct{
  ._super = x2359}, ShaStateWStruct{
  ._super = x2360}, ShaStateWStruct{
  ._super = x2361}, ShaStateWStruct{
  ._super = x2362}, ShaStateWStruct{
  ._super = x2363}, ShaStateWStruct{
  ._super = x2364}, ShaStateWStruct{
  ._super = x2365}, ShaStateWStruct{
  ._super = x2366}, ShaStateWStruct{
  ._super = x2367}, ShaStateWStruct{
  ._super = x2368}, ShaStateWStruct{
  ._super = x2369}, ShaStateWStruct{
  ._super = x2370}, ShaStateWStruct{
  ._super = x2371}, ShaStateWStruct{
  ._super = x2372}, ShaStateWStruct{
  ._super = x2373}, ShaStateWStruct{
  ._super = x2374}, ShaStateWStruct{
  ._super = x2375}, ShaStateWStruct{
  ._super = x2376}, ShaStateWStruct{
  ._super = x2377}, ShaStateWStruct{
  ._super = x2378}, ShaStateWStruct{
  ._super = x2379}, ShaStateWStruct{
  ._super = x2380}, ShaStateWStruct{
  ._super = x2381}, ShaStateWStruct{
  ._super = x2382}, ShaStateWStruct{
  ._super = x2383}, ShaStateWStruct{
  ._super = x2384}, ShaStateWStruct{
  ._super = x2385}, ShaStateWStruct{
  ._super = x2386}, ShaStateWStruct{
  ._super = x2387}, ShaStateWStruct{
  ._super = x2388}}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:144)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:231)
NondetRegStruct x2389 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2390 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2391 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2392 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2393 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2394 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2395 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2396 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 0), _super), 0)};
NondetRegStruct x2397 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 1), _super), 0)};
NondetRegStruct x2398 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 2), _super), 0)};
NondetRegStruct x2399 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 3), _super), 0)};
NondetRegStruct x2400 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 4), _super), 0)};
NondetRegStruct x2401 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 5), _super), 0)};
NondetRegStruct x2402 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 6), _super), 0)};
NondetRegStruct x2403 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 7), _super), 0)};
NondetRegStruct x2404 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 8), _super), 0)};
NondetRegStruct x2405 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 9), _super), 0)};
NondetRegStruct x2406 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 10), _super), 0)};
NondetRegStruct x2407 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 11), _super), 0)};
NondetRegStruct x2408 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 12), _super), 0)};
NondetRegStruct x2409 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 13), _super), 0)};
NondetRegStruct x2410 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 14), _super), 0)};
NondetRegStruct x2411 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 15), _super), 0)};
NondetRegStruct x2412 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 16), _super), 0)};
NondetRegStruct x2413 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 17), _super), 0)};
NondetRegStruct x2414 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 18), _super), 0)};
NondetRegStruct x2415 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 19), _super), 0)};
NondetRegStruct x2416 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 20), _super), 0)};
NondetRegStruct x2417 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 21), _super), 0)};
NondetRegStruct x2418 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 22), _super), 0)};
NondetRegStruct x2419 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 23), _super), 0)};
NondetRegStruct x2420 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 24), _super), 0)};
NondetRegStruct x2421 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 25), _super), 0)};
NondetRegStruct x2422 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 26), _super), 0)};
NondetRegStruct x2423 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 27), _super), 0)};
NondetRegStruct x2424 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 28), _super), 0)};
NondetRegStruct x2425 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 29), _super), 0)};
NondetRegStruct x2426 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 30), _super), 0)};
NondetRegStruct x2427 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2428 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 0), _super), 0)};
NondetRegStruct x2429 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 1), _super), 0)};
NondetRegStruct x2430 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 2), _super), 0)};
NondetRegStruct x2431 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 3), _super), 0)};
NondetRegStruct x2432 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 4), _super), 0)};
NondetRegStruct x2433 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 5), _super), 0)};
NondetRegStruct x2434 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 6), _super), 0)};
NondetRegStruct x2435 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 7), _super), 0)};
NondetRegStruct x2436 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 8), _super), 0)};
NondetRegStruct x2437 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 9), _super), 0)};
NondetRegStruct x2438 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 10), _super), 0)};
NondetRegStruct x2439 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 11), _super), 0)};
NondetRegStruct x2440 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 12), _super), 0)};
NondetRegStruct x2441 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 13), _super), 0)};
NondetRegStruct x2442 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 14), _super), 0)};
NondetRegStruct x2443 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 15), _super), 0)};
NondetRegStruct x2444 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 16), _super), 0)};
NondetRegStruct x2445 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 17), _super), 0)};
NondetRegStruct x2446 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 18), _super), 0)};
NondetRegStruct x2447 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 19), _super), 0)};
NondetRegStruct x2448 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 20), _super), 0)};
NondetRegStruct x2449 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 21), _super), 0)};
NondetRegStruct x2450 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 22), _super), 0)};
NondetRegStruct x2451 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 23), _super), 0)};
NondetRegStruct x2452 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 24), _super), 0)};
NondetRegStruct x2453 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 25), _super), 0)};
NondetRegStruct x2454 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 26), _super), 0)};
NondetRegStruct x2455 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 27), _super), 0)};
NondetRegStruct x2456 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 28), _super), 0)};
NondetRegStruct x2457 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 29), _super), 0)};
NondetRegStruct x2458 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 30), _super), 0)};
NondetRegStruct x2459 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2460 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 0), _super), 0)};
NondetRegStruct x2461 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 1), _super), 0)};
NondetRegStruct x2462 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 2), _super), 0)};
NondetRegStruct x2463 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 3), _super), 0)};
NondetRegStruct x2464 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 4), _super), 0)};
NondetRegStruct x2465 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 5), _super), 0)};
NondetRegStruct x2466 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 6), _super), 0)};
NondetRegStruct x2467 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 7), _super), 0)};
NondetRegStruct x2468 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 8), _super), 0)};
NondetRegStruct x2469 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 9), _super), 0)};
NondetRegStruct x2470 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 10), _super), 0)};
NondetRegStruct x2471 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 11), _super), 0)};
NondetRegStruct x2472 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 12), _super), 0)};
NondetRegStruct x2473 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 13), _super), 0)};
NondetRegStruct x2474 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 14), _super), 0)};
NondetRegStruct x2475 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 15), _super), 0)};
NondetRegStruct x2476 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 16), _super), 0)};
NondetRegStruct x2477 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 17), _super), 0)};
NondetRegStruct x2478 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 18), _super), 0)};
NondetRegStruct x2479 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 19), _super), 0)};
NondetRegStruct x2480 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 20), _super), 0)};
NondetRegStruct x2481 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 21), _super), 0)};
NondetRegStruct x2482 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 22), _super), 0)};
NondetRegStruct x2483 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 23), _super), 0)};
NondetRegStruct x2484 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 24), _super), 0)};
NondetRegStruct x2485 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 25), _super), 0)};
NondetRegStruct x2486 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 26), _super), 0)};
NondetRegStruct x2487 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 27), _super), 0)};
NondetRegStruct x2488 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 28), _super), 0)};
NondetRegStruct x2489 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 29), _super), 0)};
NondetRegStruct x2490 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 30), _super), 0)};
NondetRegStruct x2491 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm2._super._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2389,   .stateOutAddr = x2390,   .dataAddr = x2391,   .count = x2392,   .kAddr = x2393,   .round = x2394,   .nextState = x2395,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2396}, ShaStateAStruct{
  ._super = x2397}, ShaStateAStruct{
  ._super = x2398}, ShaStateAStruct{
  ._super = x2399}, ShaStateAStruct{
  ._super = x2400}, ShaStateAStruct{
  ._super = x2401}, ShaStateAStruct{
  ._super = x2402}, ShaStateAStruct{
  ._super = x2403}, ShaStateAStruct{
  ._super = x2404}, ShaStateAStruct{
  ._super = x2405}, ShaStateAStruct{
  ._super = x2406}, ShaStateAStruct{
  ._super = x2407}, ShaStateAStruct{
  ._super = x2408}, ShaStateAStruct{
  ._super = x2409}, ShaStateAStruct{
  ._super = x2410}, ShaStateAStruct{
  ._super = x2411}, ShaStateAStruct{
  ._super = x2412}, ShaStateAStruct{
  ._super = x2413}, ShaStateAStruct{
  ._super = x2414}, ShaStateAStruct{
  ._super = x2415}, ShaStateAStruct{
  ._super = x2416}, ShaStateAStruct{
  ._super = x2417}, ShaStateAStruct{
  ._super = x2418}, ShaStateAStruct{
  ._super = x2419}, ShaStateAStruct{
  ._super = x2420}, ShaStateAStruct{
  ._super = x2421}, ShaStateAStruct{
  ._super = x2422}, ShaStateAStruct{
  ._super = x2423}, ShaStateAStruct{
  ._super = x2424}, ShaStateAStruct{
  ._super = x2425}, ShaStateAStruct{
  ._super = x2426}, ShaStateAStruct{
  ._super = x2427}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2428}, ShaStateEStruct{
  ._super = x2429}, ShaStateEStruct{
  ._super = x2430}, ShaStateEStruct{
  ._super = x2431}, ShaStateEStruct{
  ._super = x2432}, ShaStateEStruct{
  ._super = x2433}, ShaStateEStruct{
  ._super = x2434}, ShaStateEStruct{
  ._super = x2435}, ShaStateEStruct{
  ._super = x2436}, ShaStateEStruct{
  ._super = x2437}, ShaStateEStruct{
  ._super = x2438}, ShaStateEStruct{
  ._super = x2439}, ShaStateEStruct{
  ._super = x2440}, ShaStateEStruct{
  ._super = x2441}, ShaStateEStruct{
  ._super = x2442}, ShaStateEStruct{
  ._super = x2443}, ShaStateEStruct{
  ._super = x2444}, ShaStateEStruct{
  ._super = x2445}, ShaStateEStruct{
  ._super = x2446}, ShaStateEStruct{
  ._super = x2447}, ShaStateEStruct{
  ._super = x2448}, ShaStateEStruct{
  ._super = x2449}, ShaStateEStruct{
  ._super = x2450}, ShaStateEStruct{
  ._super = x2451}, ShaStateEStruct{
  ._super = x2452}, ShaStateEStruct{
  ._super = x2453}, ShaStateEStruct{
  ._super = x2454}, ShaStateEStruct{
  ._super = x2455}, ShaStateEStruct{
  ._super = x2456}, ShaStateEStruct{
  ._super = x2457}, ShaStateEStruct{
  ._super = x2458}, ShaStateEStruct{
  ._super = x2459}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2460}, ShaStateWStruct{
  ._super = x2461}, ShaStateWStruct{
  ._super = x2462}, ShaStateWStruct{
  ._super = x2463}, ShaStateWStruct{
  ._super = x2464}, ShaStateWStruct{
  ._super = x2465}, ShaStateWStruct{
  ._super = x2466}, ShaStateWStruct{
  ._super = x2467}, ShaStateWStruct{
  ._super = x2468}, ShaStateWStruct{
  ._super = x2469}, ShaStateWStruct{
  ._super = x2470}, ShaStateWStruct{
  ._super = x2471}, ShaStateWStruct{
  ._super = x2472}, ShaStateWStruct{
  ._super = x2473}, ShaStateWStruct{
  ._super = x2474}, ShaStateWStruct{
  ._super = x2475}, ShaStateWStruct{
  ._super = x2476}, ShaStateWStruct{
  ._super = x2477}, ShaStateWStruct{
  ._super = x2478}, ShaStateWStruct{
  ._super = x2479}, ShaStateWStruct{
  ._super = x2480}, ShaStateWStruct{
  ._super = x2481}, ShaStateWStruct{
  ._super = x2482}, ShaStateWStruct{
  ._super = x2483}, ShaStateWStruct{
  ._super = x2484}, ShaStateWStruct{
  ._super = x2485}, ShaStateWStruct{
  ._super = x2486}, ShaStateWStruct{
  ._super = x2487}, ShaStateWStruct{
  ._super = x2488}, ShaStateWStruct{
  ._super = x2489}, ShaStateWStruct{
  ._super = x2490}, ShaStateWStruct{
  ._super = x2491}}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:172)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:232)
NondetRegStruct x2492 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2493 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2494 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2495 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2496 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2497 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2498 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2499 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 0), _super), 0)};
NondetRegStruct x2500 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 1), _super), 0)};
NondetRegStruct x2501 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 2), _super), 0)};
NondetRegStruct x2502 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 3), _super), 0)};
NondetRegStruct x2503 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 4), _super), 0)};
NondetRegStruct x2504 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 5), _super), 0)};
NondetRegStruct x2505 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 6), _super), 0)};
NondetRegStruct x2506 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 7), _super), 0)};
NondetRegStruct x2507 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 8), _super), 0)};
NondetRegStruct x2508 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 9), _super), 0)};
NondetRegStruct x2509 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 10), _super), 0)};
NondetRegStruct x2510 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 11), _super), 0)};
NondetRegStruct x2511 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 12), _super), 0)};
NondetRegStruct x2512 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 13), _super), 0)};
NondetRegStruct x2513 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 14), _super), 0)};
NondetRegStruct x2514 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 15), _super), 0)};
NondetRegStruct x2515 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 16), _super), 0)};
NondetRegStruct x2516 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 17), _super), 0)};
NondetRegStruct x2517 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 18), _super), 0)};
NondetRegStruct x2518 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 19), _super), 0)};
NondetRegStruct x2519 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 20), _super), 0)};
NondetRegStruct x2520 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 21), _super), 0)};
NondetRegStruct x2521 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 22), _super), 0)};
NondetRegStruct x2522 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 23), _super), 0)};
NondetRegStruct x2523 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 24), _super), 0)};
NondetRegStruct x2524 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 25), _super), 0)};
NondetRegStruct x2525 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 26), _super), 0)};
NondetRegStruct x2526 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 27), _super), 0)};
NondetRegStruct x2527 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 28), _super), 0)};
NondetRegStruct x2528 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 29), _super), 0)};
NondetRegStruct x2529 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 30), _super), 0)};
NondetRegStruct x2530 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2531 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 0), _super), 0)};
NondetRegStruct x2532 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 1), _super), 0)};
NondetRegStruct x2533 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 2), _super), 0)};
NondetRegStruct x2534 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 3), _super), 0)};
NondetRegStruct x2535 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 4), _super), 0)};
NondetRegStruct x2536 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 5), _super), 0)};
NondetRegStruct x2537 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 6), _super), 0)};
NondetRegStruct x2538 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 7), _super), 0)};
NondetRegStruct x2539 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 8), _super), 0)};
NondetRegStruct x2540 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 9), _super), 0)};
NondetRegStruct x2541 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 10), _super), 0)};
NondetRegStruct x2542 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 11), _super), 0)};
NondetRegStruct x2543 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 12), _super), 0)};
NondetRegStruct x2544 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 13), _super), 0)};
NondetRegStruct x2545 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 14), _super), 0)};
NondetRegStruct x2546 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 15), _super), 0)};
NondetRegStruct x2547 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 16), _super), 0)};
NondetRegStruct x2548 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 17), _super), 0)};
NondetRegStruct x2549 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 18), _super), 0)};
NondetRegStruct x2550 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 19), _super), 0)};
NondetRegStruct x2551 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 20), _super), 0)};
NondetRegStruct x2552 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 21), _super), 0)};
NondetRegStruct x2553 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 22), _super), 0)};
NondetRegStruct x2554 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 23), _super), 0)};
NondetRegStruct x2555 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 24), _super), 0)};
NondetRegStruct x2556 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 25), _super), 0)};
NondetRegStruct x2557 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 26), _super), 0)};
NondetRegStruct x2558 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 27), _super), 0)};
NondetRegStruct x2559 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 28), _super), 0)};
NondetRegStruct x2560 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 29), _super), 0)};
NondetRegStruct x2561 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 30), _super), 0)};
NondetRegStruct x2562 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2563 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 0), _super), 0)};
NondetRegStruct x2564 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 1), _super), 0)};
NondetRegStruct x2565 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 2), _super), 0)};
NondetRegStruct x2566 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 3), _super), 0)};
NondetRegStruct x2567 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 4), _super), 0)};
NondetRegStruct x2568 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 5), _super), 0)};
NondetRegStruct x2569 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 6), _super), 0)};
NondetRegStruct x2570 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 7), _super), 0)};
NondetRegStruct x2571 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 8), _super), 0)};
NondetRegStruct x2572 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 9), _super), 0)};
NondetRegStruct x2573 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 10), _super), 0)};
NondetRegStruct x2574 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 11), _super), 0)};
NondetRegStruct x2575 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 12), _super), 0)};
NondetRegStruct x2576 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 13), _super), 0)};
NondetRegStruct x2577 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 14), _super), 0)};
NondetRegStruct x2578 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 15), _super), 0)};
NondetRegStruct x2579 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 16), _super), 0)};
NondetRegStruct x2580 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 17), _super), 0)};
NondetRegStruct x2581 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 18), _super), 0)};
NondetRegStruct x2582 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 19), _super), 0)};
NondetRegStruct x2583 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 20), _super), 0)};
NondetRegStruct x2584 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 21), _super), 0)};
NondetRegStruct x2585 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 22), _super), 0)};
NondetRegStruct x2586 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 23), _super), 0)};
NondetRegStruct x2587 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 24), _super), 0)};
NondetRegStruct x2588 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 25), _super), 0)};
NondetRegStruct x2589 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 26), _super), 0)};
NondetRegStruct x2590 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 27), _super), 0)};
NondetRegStruct x2591 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 28), _super), 0)};
NondetRegStruct x2592 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 29), _super), 0)};
NondetRegStruct x2593 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 30), _super), 0)};
NondetRegStruct x2594 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm3._super._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2492,   .stateOutAddr = x2493,   .dataAddr = x2494,   .count = x2495,   .kAddr = x2496,   .round = x2497,   .nextState = x2498,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2499}, ShaStateAStruct{
  ._super = x2500}, ShaStateAStruct{
  ._super = x2501}, ShaStateAStruct{
  ._super = x2502}, ShaStateAStruct{
  ._super = x2503}, ShaStateAStruct{
  ._super = x2504}, ShaStateAStruct{
  ._super = x2505}, ShaStateAStruct{
  ._super = x2506}, ShaStateAStruct{
  ._super = x2507}, ShaStateAStruct{
  ._super = x2508}, ShaStateAStruct{
  ._super = x2509}, ShaStateAStruct{
  ._super = x2510}, ShaStateAStruct{
  ._super = x2511}, ShaStateAStruct{
  ._super = x2512}, ShaStateAStruct{
  ._super = x2513}, ShaStateAStruct{
  ._super = x2514}, ShaStateAStruct{
  ._super = x2515}, ShaStateAStruct{
  ._super = x2516}, ShaStateAStruct{
  ._super = x2517}, ShaStateAStruct{
  ._super = x2518}, ShaStateAStruct{
  ._super = x2519}, ShaStateAStruct{
  ._super = x2520}, ShaStateAStruct{
  ._super = x2521}, ShaStateAStruct{
  ._super = x2522}, ShaStateAStruct{
  ._super = x2523}, ShaStateAStruct{
  ._super = x2524}, ShaStateAStruct{
  ._super = x2525}, ShaStateAStruct{
  ._super = x2526}, ShaStateAStruct{
  ._super = x2527}, ShaStateAStruct{
  ._super = x2528}, ShaStateAStruct{
  ._super = x2529}, ShaStateAStruct{
  ._super = x2530}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2531}, ShaStateEStruct{
  ._super = x2532}, ShaStateEStruct{
  ._super = x2533}, ShaStateEStruct{
  ._super = x2534}, ShaStateEStruct{
  ._super = x2535}, ShaStateEStruct{
  ._super = x2536}, ShaStateEStruct{
  ._super = x2537}, ShaStateEStruct{
  ._super = x2538}, ShaStateEStruct{
  ._super = x2539}, ShaStateEStruct{
  ._super = x2540}, ShaStateEStruct{
  ._super = x2541}, ShaStateEStruct{
  ._super = x2542}, ShaStateEStruct{
  ._super = x2543}, ShaStateEStruct{
  ._super = x2544}, ShaStateEStruct{
  ._super = x2545}, ShaStateEStruct{
  ._super = x2546}, ShaStateEStruct{
  ._super = x2547}, ShaStateEStruct{
  ._super = x2548}, ShaStateEStruct{
  ._super = x2549}, ShaStateEStruct{
  ._super = x2550}, ShaStateEStruct{
  ._super = x2551}, ShaStateEStruct{
  ._super = x2552}, ShaStateEStruct{
  ._super = x2553}, ShaStateEStruct{
  ._super = x2554}, ShaStateEStruct{
  ._super = x2555}, ShaStateEStruct{
  ._super = x2556}, ShaStateEStruct{
  ._super = x2557}, ShaStateEStruct{
  ._super = x2558}, ShaStateEStruct{
  ._super = x2559}, ShaStateEStruct{
  ._super = x2560}, ShaStateEStruct{
  ._super = x2561}, ShaStateEStruct{
  ._super = x2562}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2563}, ShaStateWStruct{
  ._super = x2564}, ShaStateWStruct{
  ._super = x2565}, ShaStateWStruct{
  ._super = x2566}, ShaStateWStruct{
  ._super = x2567}, ShaStateWStruct{
  ._super = x2568}, ShaStateWStruct{
  ._super = x2569}, ShaStateWStruct{
  ._super = x2570}, ShaStateWStruct{
  ._super = x2571}, ShaStateWStruct{
  ._super = x2572}, ShaStateWStruct{
  ._super = x2573}, ShaStateWStruct{
  ._super = x2574}, ShaStateWStruct{
  ._super = x2575}, ShaStateWStruct{
  ._super = x2576}, ShaStateWStruct{
  ._super = x2577}, ShaStateWStruct{
  ._super = x2578}, ShaStateWStruct{
  ._super = x2579}, ShaStateWStruct{
  ._super = x2580}, ShaStateWStruct{
  ._super = x2581}, ShaStateWStruct{
  ._super = x2582}, ShaStateWStruct{
  ._super = x2583}, ShaStateWStruct{
  ._super = x2584}, ShaStateWStruct{
  ._super = x2585}, ShaStateWStruct{
  ._super = x2586}, ShaStateWStruct{
  ._super = x2587}, ShaStateWStruct{
  ._super = x2588}, ShaStateWStruct{
  ._super = x2589}, ShaStateWStruct{
  ._super = x2590}, ShaStateWStruct{
  ._super = x2591}, ShaStateWStruct{
  ._super = x2592}, ShaStateWStruct{
  ._super = x2593}, ShaStateWStruct{
  ._super = x2594}}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// builtin Sub
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:194)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:233)
Val x2595 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super.countZero._super._super), 0));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:197)
Val x2596 = (Val(1) - LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super.lastRound._super._super), 0));
Val x2597;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super.countZero._super._super), 0))) {
x2597 = Val(48);
} else if (to_size_t(x2595)) {
Val x2598;
if (to_size_t(LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super.lastRound._super._super), 0))) {
x2598 = Val(34);
} else if (to_size_t(x2596)) {
x2598 = Val(36);
} else {
   assert(0 && "Reached unreachable mux arm");
}
x2597 = x2598;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:205)
NondetRegStruct x2599 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2600 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2601 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2602 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2603 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2604 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2605 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2606 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 0), _super), 0)};
NondetRegStruct x2607 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 1), _super), 0)};
NondetRegStruct x2608 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 2), _super), 0)};
NondetRegStruct x2609 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 3), _super), 0)};
NondetRegStruct x2610 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 4), _super), 0)};
NondetRegStruct x2611 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 5), _super), 0)};
NondetRegStruct x2612 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 6), _super), 0)};
NondetRegStruct x2613 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 7), _super), 0)};
NondetRegStruct x2614 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 8), _super), 0)};
NondetRegStruct x2615 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 9), _super), 0)};
NondetRegStruct x2616 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 10), _super), 0)};
NondetRegStruct x2617 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 11), _super), 0)};
NondetRegStruct x2618 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 12), _super), 0)};
NondetRegStruct x2619 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 13), _super), 0)};
NondetRegStruct x2620 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 14), _super), 0)};
NondetRegStruct x2621 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 15), _super), 0)};
NondetRegStruct x2622 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 16), _super), 0)};
NondetRegStruct x2623 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 17), _super), 0)};
NondetRegStruct x2624 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 18), _super), 0)};
NondetRegStruct x2625 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 19), _super), 0)};
NondetRegStruct x2626 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 20), _super), 0)};
NondetRegStruct x2627 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 21), _super), 0)};
NondetRegStruct x2628 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 22), _super), 0)};
NondetRegStruct x2629 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 23), _super), 0)};
NondetRegStruct x2630 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 24), _super), 0)};
NondetRegStruct x2631 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 25), _super), 0)};
NondetRegStruct x2632 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 26), _super), 0)};
NondetRegStruct x2633 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 27), _super), 0)};
NondetRegStruct x2634 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 28), _super), 0)};
NondetRegStruct x2635 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 29), _super), 0)};
NondetRegStruct x2636 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 30), _super), 0)};
NondetRegStruct x2637 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2638 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 0), _super), 0)};
NondetRegStruct x2639 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 1), _super), 0)};
NondetRegStruct x2640 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 2), _super), 0)};
NondetRegStruct x2641 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 3), _super), 0)};
NondetRegStruct x2642 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 4), _super), 0)};
NondetRegStruct x2643 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 5), _super), 0)};
NondetRegStruct x2644 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 6), _super), 0)};
NondetRegStruct x2645 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 7), _super), 0)};
NondetRegStruct x2646 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 8), _super), 0)};
NondetRegStruct x2647 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 9), _super), 0)};
NondetRegStruct x2648 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 10), _super), 0)};
NondetRegStruct x2649 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 11), _super), 0)};
NondetRegStruct x2650 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 12), _super), 0)};
NondetRegStruct x2651 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 13), _super), 0)};
NondetRegStruct x2652 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 14), _super), 0)};
NondetRegStruct x2653 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 15), _super), 0)};
NondetRegStruct x2654 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 16), _super), 0)};
NondetRegStruct x2655 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 17), _super), 0)};
NondetRegStruct x2656 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 18), _super), 0)};
NondetRegStruct x2657 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 19), _super), 0)};
NondetRegStruct x2658 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 20), _super), 0)};
NondetRegStruct x2659 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 21), _super), 0)};
NondetRegStruct x2660 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 22), _super), 0)};
NondetRegStruct x2661 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 23), _super), 0)};
NondetRegStruct x2662 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 24), _super), 0)};
NondetRegStruct x2663 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 25), _super), 0)};
NondetRegStruct x2664 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 26), _super), 0)};
NondetRegStruct x2665 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 27), _super), 0)};
NondetRegStruct x2666 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 28), _super), 0)};
NondetRegStruct x2667 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 29), _super), 0)};
NondetRegStruct x2668 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 30), _super), 0)};
NondetRegStruct x2669 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2670 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 0), _super), 0)};
NondetRegStruct x2671 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 1), _super), 0)};
NondetRegStruct x2672 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 2), _super), 0)};
NondetRegStruct x2673 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 3), _super), 0)};
NondetRegStruct x2674 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 4), _super), 0)};
NondetRegStruct x2675 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 5), _super), 0)};
NondetRegStruct x2676 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 6), _super), 0)};
NondetRegStruct x2677 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 7), _super), 0)};
NondetRegStruct x2678 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 8), _super), 0)};
NondetRegStruct x2679 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 9), _super), 0)};
NondetRegStruct x2680 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 10), _super), 0)};
NondetRegStruct x2681 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 11), _super), 0)};
NondetRegStruct x2682 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 12), _super), 0)};
NondetRegStruct x2683 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 13), _super), 0)};
NondetRegStruct x2684 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 14), _super), 0)};
NondetRegStruct x2685 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 15), _super), 0)};
NondetRegStruct x2686 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 16), _super), 0)};
NondetRegStruct x2687 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 17), _super), 0)};
NondetRegStruct x2688 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 18), _super), 0)};
NondetRegStruct x2689 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 19), _super), 0)};
NondetRegStruct x2690 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 20), _super), 0)};
NondetRegStruct x2691 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 21), _super), 0)};
NondetRegStruct x2692 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 22), _super), 0)};
NondetRegStruct x2693 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 23), _super), 0)};
NondetRegStruct x2694 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 24), _super), 0)};
NondetRegStruct x2695 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 25), _super), 0)};
NondetRegStruct x2696 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 26), _super), 0)};
NondetRegStruct x2697 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 27), _super), 0)};
NondetRegStruct x2698 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 28), _super), 0)};
NondetRegStruct x2699 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 29), _super), 0)};
NondetRegStruct x2700 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 30), _super), 0)};
NondetRegStruct x2701 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm4._super._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2599,   .stateOutAddr = x2600,   .dataAddr = x2601,   .count = x2602,   .kAddr = x2603,   .round = x2604,   .nextState = x2605,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2606}, ShaStateAStruct{
  ._super = x2607}, ShaStateAStruct{
  ._super = x2608}, ShaStateAStruct{
  ._super = x2609}, ShaStateAStruct{
  ._super = x2610}, ShaStateAStruct{
  ._super = x2611}, ShaStateAStruct{
  ._super = x2612}, ShaStateAStruct{
  ._super = x2613}, ShaStateAStruct{
  ._super = x2614}, ShaStateAStruct{
  ._super = x2615}, ShaStateAStruct{
  ._super = x2616}, ShaStateAStruct{
  ._super = x2617}, ShaStateAStruct{
  ._super = x2618}, ShaStateAStruct{
  ._super = x2619}, ShaStateAStruct{
  ._super = x2620}, ShaStateAStruct{
  ._super = x2621}, ShaStateAStruct{
  ._super = x2622}, ShaStateAStruct{
  ._super = x2623}, ShaStateAStruct{
  ._super = x2624}, ShaStateAStruct{
  ._super = x2625}, ShaStateAStruct{
  ._super = x2626}, ShaStateAStruct{
  ._super = x2627}, ShaStateAStruct{
  ._super = x2628}, ShaStateAStruct{
  ._super = x2629}, ShaStateAStruct{
  ._super = x2630}, ShaStateAStruct{
  ._super = x2631}, ShaStateAStruct{
  ._super = x2632}, ShaStateAStruct{
  ._super = x2633}, ShaStateAStruct{
  ._super = x2634}, ShaStateAStruct{
  ._super = x2635}, ShaStateAStruct{
  ._super = x2636}, ShaStateAStruct{
  ._super = x2637}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2638}, ShaStateEStruct{
  ._super = x2639}, ShaStateEStruct{
  ._super = x2640}, ShaStateEStruct{
  ._super = x2641}, ShaStateEStruct{
  ._super = x2642}, ShaStateEStruct{
  ._super = x2643}, ShaStateEStruct{
  ._super = x2644}, ShaStateEStruct{
  ._super = x2645}, ShaStateEStruct{
  ._super = x2646}, ShaStateEStruct{
  ._super = x2647}, ShaStateEStruct{
  ._super = x2648}, ShaStateEStruct{
  ._super = x2649}, ShaStateEStruct{
  ._super = x2650}, ShaStateEStruct{
  ._super = x2651}, ShaStateEStruct{
  ._super = x2652}, ShaStateEStruct{
  ._super = x2653}, ShaStateEStruct{
  ._super = x2654}, ShaStateEStruct{
  ._super = x2655}, ShaStateEStruct{
  ._super = x2656}, ShaStateEStruct{
  ._super = x2657}, ShaStateEStruct{
  ._super = x2658}, ShaStateEStruct{
  ._super = x2659}, ShaStateEStruct{
  ._super = x2660}, ShaStateEStruct{
  ._super = x2661}, ShaStateEStruct{
  ._super = x2662}, ShaStateEStruct{
  ._super = x2663}, ShaStateEStruct{
  ._super = x2664}, ShaStateEStruct{
  ._super = x2665}, ShaStateEStruct{
  ._super = x2666}, ShaStateEStruct{
  ._super = x2667}, ShaStateEStruct{
  ._super = x2668}, ShaStateEStruct{
  ._super = x2669}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2670}, ShaStateWStruct{
  ._super = x2671}, ShaStateWStruct{
  ._super = x2672}, ShaStateWStruct{
  ._super = x2673}, ShaStateWStruct{
  ._super = x2674}, ShaStateWStruct{
  ._super = x2675}, ShaStateWStruct{
  ._super = x2676}, ShaStateWStruct{
  ._super = x2677}, ShaStateWStruct{
  ._super = x2678}, ShaStateWStruct{
  ._super = x2679}, ShaStateWStruct{
  ._super = x2680}, ShaStateWStruct{
  ._super = x2681}, ShaStateWStruct{
  ._super = x2682}, ShaStateWStruct{
  ._super = x2683}, ShaStateWStruct{
  ._super = x2684}, ShaStateWStruct{
  ._super = x2685}, ShaStateWStruct{
  ._super = x2686}, ShaStateWStruct{
  ._super = x2687}, ShaStateWStruct{
  ._super = x2688}, ShaStateWStruct{
  ._super = x2689}, ShaStateWStruct{
  ._super = x2690}, ShaStateWStruct{
  ._super = x2691}, ShaStateWStruct{
  ._super = x2692}, ShaStateWStruct{
  ._super = x2693}, ShaStateWStruct{
  ._super = x2694}, ShaStateWStruct{
  ._super = x2695}, ShaStateWStruct{
  ._super = x2696}, ShaStateWStruct{
  ._super = x2697}, ShaStateWStruct{
  ._super = x2698}, ShaStateWStruct{
  ._super = x2699}, ShaStateWStruct{
  ._super = x2700}, ShaStateWStruct{
  ._super = x2701}}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:34)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:234)
NondetRegStruct x2702 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2703 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2704 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2705 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2706 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2707 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2708 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2709 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 0), _super), 0)};
NondetRegStruct x2710 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 1), _super), 0)};
NondetRegStruct x2711 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 2), _super), 0)};
NondetRegStruct x2712 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 3), _super), 0)};
NondetRegStruct x2713 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 4), _super), 0)};
NondetRegStruct x2714 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 5), _super), 0)};
NondetRegStruct x2715 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 6), _super), 0)};
NondetRegStruct x2716 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 7), _super), 0)};
NondetRegStruct x2717 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 8), _super), 0)};
NondetRegStruct x2718 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 9), _super), 0)};
NondetRegStruct x2719 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 10), _super), 0)};
NondetRegStruct x2720 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 11), _super), 0)};
NondetRegStruct x2721 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 12), _super), 0)};
NondetRegStruct x2722 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 13), _super), 0)};
NondetRegStruct x2723 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 14), _super), 0)};
NondetRegStruct x2724 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 15), _super), 0)};
NondetRegStruct x2725 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 16), _super), 0)};
NondetRegStruct x2726 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 17), _super), 0)};
NondetRegStruct x2727 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 18), _super), 0)};
NondetRegStruct x2728 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 19), _super), 0)};
NondetRegStruct x2729 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 20), _super), 0)};
NondetRegStruct x2730 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 21), _super), 0)};
NondetRegStruct x2731 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 22), _super), 0)};
NondetRegStruct x2732 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 23), _super), 0)};
NondetRegStruct x2733 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 24), _super), 0)};
NondetRegStruct x2734 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 25), _super), 0)};
NondetRegStruct x2735 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 26), _super), 0)};
NondetRegStruct x2736 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 27), _super), 0)};
NondetRegStruct x2737 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 28), _super), 0)};
NondetRegStruct x2738 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 29), _super), 0)};
NondetRegStruct x2739 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 30), _super), 0)};
NondetRegStruct x2740 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2741 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 0), _super), 0)};
NondetRegStruct x2742 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 1), _super), 0)};
NondetRegStruct x2743 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 2), _super), 0)};
NondetRegStruct x2744 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 3), _super), 0)};
NondetRegStruct x2745 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 4), _super), 0)};
NondetRegStruct x2746 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 5), _super), 0)};
NondetRegStruct x2747 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 6), _super), 0)};
NondetRegStruct x2748 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 7), _super), 0)};
NondetRegStruct x2749 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 8), _super), 0)};
NondetRegStruct x2750 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 9), _super), 0)};
NondetRegStruct x2751 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 10), _super), 0)};
NondetRegStruct x2752 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 11), _super), 0)};
NondetRegStruct x2753 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 12), _super), 0)};
NondetRegStruct x2754 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 13), _super), 0)};
NondetRegStruct x2755 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 14), _super), 0)};
NondetRegStruct x2756 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 15), _super), 0)};
NondetRegStruct x2757 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 16), _super), 0)};
NondetRegStruct x2758 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 17), _super), 0)};
NondetRegStruct x2759 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 18), _super), 0)};
NondetRegStruct x2760 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 19), _super), 0)};
NondetRegStruct x2761 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 20), _super), 0)};
NondetRegStruct x2762 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 21), _super), 0)};
NondetRegStruct x2763 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 22), _super), 0)};
NondetRegStruct x2764 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 23), _super), 0)};
NondetRegStruct x2765 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 24), _super), 0)};
NondetRegStruct x2766 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 25), _super), 0)};
NondetRegStruct x2767 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 26), _super), 0)};
NondetRegStruct x2768 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 27), _super), 0)};
NondetRegStruct x2769 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 28), _super), 0)};
NondetRegStruct x2770 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 29), _super), 0)};
NondetRegStruct x2771 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 30), _super), 0)};
NondetRegStruct x2772 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2773 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 0), _super), 0)};
NondetRegStruct x2774 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 1), _super), 0)};
NondetRegStruct x2775 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 2), _super), 0)};
NondetRegStruct x2776 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 3), _super), 0)};
NondetRegStruct x2777 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 4), _super), 0)};
NondetRegStruct x2778 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 5), _super), 0)};
NondetRegStruct x2779 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 6), _super), 0)};
NondetRegStruct x2780 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 7), _super), 0)};
NondetRegStruct x2781 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 8), _super), 0)};
NondetRegStruct x2782 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 9), _super), 0)};
NondetRegStruct x2783 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 10), _super), 0)};
NondetRegStruct x2784 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 11), _super), 0)};
NondetRegStruct x2785 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 12), _super), 0)};
NondetRegStruct x2786 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 13), _super), 0)};
NondetRegStruct x2787 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 14), _super), 0)};
NondetRegStruct x2788 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 15), _super), 0)};
NondetRegStruct x2789 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 16), _super), 0)};
NondetRegStruct x2790 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 17), _super), 0)};
NondetRegStruct x2791 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 18), _super), 0)};
NondetRegStruct x2792 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 19), _super), 0)};
NondetRegStruct x2793 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 20), _super), 0)};
NondetRegStruct x2794 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 21), _super), 0)};
NondetRegStruct x2795 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 22), _super), 0)};
NondetRegStruct x2796 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 23), _super), 0)};
NondetRegStruct x2797 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 24), _super), 0)};
NondetRegStruct x2798 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 25), _super), 0)};
NondetRegStruct x2799 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 26), _super), 0)};
NondetRegStruct x2800 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 27), _super), 0)};
NondetRegStruct x2801 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 28), _super), 0)};
NondetRegStruct x2802 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 29), _super), 0)};
NondetRegStruct x2803 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 30), _super), 0)};
NondetRegStruct x2804 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm5._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2702,   .stateOutAddr = x2703,   .dataAddr = x2704,   .count = x2705,   .kAddr = x2706,   .round = x2707,   .nextState = x2708,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2709}, ShaStateAStruct{
  ._super = x2710}, ShaStateAStruct{
  ._super = x2711}, ShaStateAStruct{
  ._super = x2712}, ShaStateAStruct{
  ._super = x2713}, ShaStateAStruct{
  ._super = x2714}, ShaStateAStruct{
  ._super = x2715}, ShaStateAStruct{
  ._super = x2716}, ShaStateAStruct{
  ._super = x2717}, ShaStateAStruct{
  ._super = x2718}, ShaStateAStruct{
  ._super = x2719}, ShaStateAStruct{
  ._super = x2720}, ShaStateAStruct{
  ._super = x2721}, ShaStateAStruct{
  ._super = x2722}, ShaStateAStruct{
  ._super = x2723}, ShaStateAStruct{
  ._super = x2724}, ShaStateAStruct{
  ._super = x2725}, ShaStateAStruct{
  ._super = x2726}, ShaStateAStruct{
  ._super = x2727}, ShaStateAStruct{
  ._super = x2728}, ShaStateAStruct{
  ._super = x2729}, ShaStateAStruct{
  ._super = x2730}, ShaStateAStruct{
  ._super = x2731}, ShaStateAStruct{
  ._super = x2732}, ShaStateAStruct{
  ._super = x2733}, ShaStateAStruct{
  ._super = x2734}, ShaStateAStruct{
  ._super = x2735}, ShaStateAStruct{
  ._super = x2736}, ShaStateAStruct{
  ._super = x2737}, ShaStateAStruct{
  ._super = x2738}, ShaStateAStruct{
  ._super = x2739}, ShaStateAStruct{
  ._super = x2740}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2741}, ShaStateEStruct{
  ._super = x2742}, ShaStateEStruct{
  ._super = x2743}, ShaStateEStruct{
  ._super = x2744}, ShaStateEStruct{
  ._super = x2745}, ShaStateEStruct{
  ._super = x2746}, ShaStateEStruct{
  ._super = x2747}, ShaStateEStruct{
  ._super = x2748}, ShaStateEStruct{
  ._super = x2749}, ShaStateEStruct{
  ._super = x2750}, ShaStateEStruct{
  ._super = x2751}, ShaStateEStruct{
  ._super = x2752}, ShaStateEStruct{
  ._super = x2753}, ShaStateEStruct{
  ._super = x2754}, ShaStateEStruct{
  ._super = x2755}, ShaStateEStruct{
  ._super = x2756}, ShaStateEStruct{
  ._super = x2757}, ShaStateEStruct{
  ._super = x2758}, ShaStateEStruct{
  ._super = x2759}, ShaStateEStruct{
  ._super = x2760}, ShaStateEStruct{
  ._super = x2761}, ShaStateEStruct{
  ._super = x2762}, ShaStateEStruct{
  ._super = x2763}, ShaStateEStruct{
  ._super = x2764}, ShaStateEStruct{
  ._super = x2765}, ShaStateEStruct{
  ._super = x2766}, ShaStateEStruct{
  ._super = x2767}, ShaStateEStruct{
  ._super = x2768}, ShaStateEStruct{
  ._super = x2769}, ShaStateEStruct{
  ._super = x2770}, ShaStateEStruct{
  ._super = x2771}, ShaStateEStruct{
  ._super = x2772}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2773}, ShaStateWStruct{
  ._super = x2774}, ShaStateWStruct{
  ._super = x2775}, ShaStateWStruct{
  ._super = x2776}, ShaStateWStruct{
  ._super = x2777}, ShaStateWStruct{
  ._super = x2778}, ShaStateWStruct{
  ._super = x2779}, ShaStateWStruct{
  ._super = x2780}, ShaStateWStruct{
  ._super = x2781}, ShaStateWStruct{
  ._super = x2782}, ShaStateWStruct{
  ._super = x2783}, ShaStateWStruct{
  ._super = x2784}, ShaStateWStruct{
  ._super = x2785}, ShaStateWStruct{
  ._super = x2786}, ShaStateWStruct{
  ._super = x2787}, ShaStateWStruct{
  ._super = x2788}, ShaStateWStruct{
  ._super = x2789}, ShaStateWStruct{
  ._super = x2790}, ShaStateWStruct{
  ._super = x2791}, ShaStateWStruct{
  ._super = x2792}, ShaStateWStruct{
  ._super = x2793}, ShaStateWStruct{
  ._super = x2794}, ShaStateWStruct{
  ._super = x2795}, ShaStateWStruct{
  ._super = x2796}, ShaStateWStruct{
  ._super = x2797}, ShaStateWStruct{
  ._super = x2798}, ShaStateWStruct{
  ._super = x2799}, ShaStateWStruct{
  ._super = x2800}, ShaStateWStruct{
  ._super = x2801}, ShaStateWStruct{
  ._super = x2802}, ShaStateWStruct{
  ._super = x2803}, ShaStateWStruct{
  ._super = x2804}}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:235)
NondetRegStruct x2805 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2806 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2807 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2808 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2809 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2810 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2811 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2812 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 0), _super), 0)};
NondetRegStruct x2813 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 1), _super), 0)};
NondetRegStruct x2814 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 2), _super), 0)};
NondetRegStruct x2815 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 3), _super), 0)};
NondetRegStruct x2816 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 4), _super), 0)};
NondetRegStruct x2817 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 5), _super), 0)};
NondetRegStruct x2818 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 6), _super), 0)};
NondetRegStruct x2819 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 7), _super), 0)};
NondetRegStruct x2820 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 8), _super), 0)};
NondetRegStruct x2821 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 9), _super), 0)};
NondetRegStruct x2822 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 10), _super), 0)};
NondetRegStruct x2823 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 11), _super), 0)};
NondetRegStruct x2824 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 12), _super), 0)};
NondetRegStruct x2825 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 13), _super), 0)};
NondetRegStruct x2826 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 14), _super), 0)};
NondetRegStruct x2827 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 15), _super), 0)};
NondetRegStruct x2828 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 16), _super), 0)};
NondetRegStruct x2829 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 17), _super), 0)};
NondetRegStruct x2830 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 18), _super), 0)};
NondetRegStruct x2831 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 19), _super), 0)};
NondetRegStruct x2832 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 20), _super), 0)};
NondetRegStruct x2833 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 21), _super), 0)};
NondetRegStruct x2834 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 22), _super), 0)};
NondetRegStruct x2835 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 23), _super), 0)};
NondetRegStruct x2836 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 24), _super), 0)};
NondetRegStruct x2837 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 25), _super), 0)};
NondetRegStruct x2838 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 26), _super), 0)};
NondetRegStruct x2839 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 27), _super), 0)};
NondetRegStruct x2840 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 28), _super), 0)};
NondetRegStruct x2841 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 29), _super), 0)};
NondetRegStruct x2842 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 30), _super), 0)};
NondetRegStruct x2843 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2844 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 0), _super), 0)};
NondetRegStruct x2845 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 1), _super), 0)};
NondetRegStruct x2846 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 2), _super), 0)};
NondetRegStruct x2847 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 3), _super), 0)};
NondetRegStruct x2848 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 4), _super), 0)};
NondetRegStruct x2849 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 5), _super), 0)};
NondetRegStruct x2850 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 6), _super), 0)};
NondetRegStruct x2851 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 7), _super), 0)};
NondetRegStruct x2852 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 8), _super), 0)};
NondetRegStruct x2853 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 9), _super), 0)};
NondetRegStruct x2854 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 10), _super), 0)};
NondetRegStruct x2855 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 11), _super), 0)};
NondetRegStruct x2856 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 12), _super), 0)};
NondetRegStruct x2857 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 13), _super), 0)};
NondetRegStruct x2858 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 14), _super), 0)};
NondetRegStruct x2859 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 15), _super), 0)};
NondetRegStruct x2860 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 16), _super), 0)};
NondetRegStruct x2861 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 17), _super), 0)};
NondetRegStruct x2862 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 18), _super), 0)};
NondetRegStruct x2863 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 19), _super), 0)};
NondetRegStruct x2864 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 20), _super), 0)};
NondetRegStruct x2865 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 21), _super), 0)};
NondetRegStruct x2866 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 22), _super), 0)};
NondetRegStruct x2867 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 23), _super), 0)};
NondetRegStruct x2868 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 24), _super), 0)};
NondetRegStruct x2869 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 25), _super), 0)};
NondetRegStruct x2870 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 26), _super), 0)};
NondetRegStruct x2871 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 27), _super), 0)};
NondetRegStruct x2872 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 28), _super), 0)};
NondetRegStruct x2873 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 29), _super), 0)};
NondetRegStruct x2874 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 30), _super), 0)};
NondetRegStruct x2875 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2876 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 0), _super), 0)};
NondetRegStruct x2877 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 1), _super), 0)};
NondetRegStruct x2878 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 2), _super), 0)};
NondetRegStruct x2879 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 3), _super), 0)};
NondetRegStruct x2880 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 4), _super), 0)};
NondetRegStruct x2881 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 5), _super), 0)};
NondetRegStruct x2882 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 6), _super), 0)};
NondetRegStruct x2883 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 7), _super), 0)};
NondetRegStruct x2884 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 8), _super), 0)};
NondetRegStruct x2885 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 9), _super), 0)};
NondetRegStruct x2886 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 10), _super), 0)};
NondetRegStruct x2887 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 11), _super), 0)};
NondetRegStruct x2888 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 12), _super), 0)};
NondetRegStruct x2889 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 13), _super), 0)};
NondetRegStruct x2890 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 14), _super), 0)};
NondetRegStruct x2891 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 15), _super), 0)};
NondetRegStruct x2892 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 16), _super), 0)};
NondetRegStruct x2893 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 17), _super), 0)};
NondetRegStruct x2894 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 18), _super), 0)};
NondetRegStruct x2895 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 19), _super), 0)};
NondetRegStruct x2896 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 20), _super), 0)};
NondetRegStruct x2897 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 21), _super), 0)};
NondetRegStruct x2898 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 22), _super), 0)};
NondetRegStruct x2899 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 23), _super), 0)};
NondetRegStruct x2900 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 24), _super), 0)};
NondetRegStruct x2901 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 25), _super), 0)};
NondetRegStruct x2902 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 26), _super), 0)};
NondetRegStruct x2903 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 27), _super), 0)};
NondetRegStruct x2904 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 28), _super), 0)};
NondetRegStruct x2905 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 29), _super), 0)};
NondetRegStruct x2906 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 30), _super), 0)};
NondetRegStruct x2907 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm6._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2805,   .stateOutAddr = x2806,   .dataAddr = x2807,   .count = x2808,   .kAddr = x2809,   .round = x2810,   .nextState = x2811,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2812}, ShaStateAStruct{
  ._super = x2813}, ShaStateAStruct{
  ._super = x2814}, ShaStateAStruct{
  ._super = x2815}, ShaStateAStruct{
  ._super = x2816}, ShaStateAStruct{
  ._super = x2817}, ShaStateAStruct{
  ._super = x2818}, ShaStateAStruct{
  ._super = x2819}, ShaStateAStruct{
  ._super = x2820}, ShaStateAStruct{
  ._super = x2821}, ShaStateAStruct{
  ._super = x2822}, ShaStateAStruct{
  ._super = x2823}, ShaStateAStruct{
  ._super = x2824}, ShaStateAStruct{
  ._super = x2825}, ShaStateAStruct{
  ._super = x2826}, ShaStateAStruct{
  ._super = x2827}, ShaStateAStruct{
  ._super = x2828}, ShaStateAStruct{
  ._super = x2829}, ShaStateAStruct{
  ._super = x2830}, ShaStateAStruct{
  ._super = x2831}, ShaStateAStruct{
  ._super = x2832}, ShaStateAStruct{
  ._super = x2833}, ShaStateAStruct{
  ._super = x2834}, ShaStateAStruct{
  ._super = x2835}, ShaStateAStruct{
  ._super = x2836}, ShaStateAStruct{
  ._super = x2837}, ShaStateAStruct{
  ._super = x2838}, ShaStateAStruct{
  ._super = x2839}, ShaStateAStruct{
  ._super = x2840}, ShaStateAStruct{
  ._super = x2841}, ShaStateAStruct{
  ._super = x2842}, ShaStateAStruct{
  ._super = x2843}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2844}, ShaStateEStruct{
  ._super = x2845}, ShaStateEStruct{
  ._super = x2846}, ShaStateEStruct{
  ._super = x2847}, ShaStateEStruct{
  ._super = x2848}, ShaStateEStruct{
  ._super = x2849}, ShaStateEStruct{
  ._super = x2850}, ShaStateEStruct{
  ._super = x2851}, ShaStateEStruct{
  ._super = x2852}, ShaStateEStruct{
  ._super = x2853}, ShaStateEStruct{
  ._super = x2854}, ShaStateEStruct{
  ._super = x2855}, ShaStateEStruct{
  ._super = x2856}, ShaStateEStruct{
  ._super = x2857}, ShaStateEStruct{
  ._super = x2858}, ShaStateEStruct{
  ._super = x2859}, ShaStateEStruct{
  ._super = x2860}, ShaStateEStruct{
  ._super = x2861}, ShaStateEStruct{
  ._super = x2862}, ShaStateEStruct{
  ._super = x2863}, ShaStateEStruct{
  ._super = x2864}, ShaStateEStruct{
  ._super = x2865}, ShaStateEStruct{
  ._super = x2866}, ShaStateEStruct{
  ._super = x2867}, ShaStateEStruct{
  ._super = x2868}, ShaStateEStruct{
  ._super = x2869}, ShaStateEStruct{
  ._super = x2870}, ShaStateEStruct{
  ._super = x2871}, ShaStateEStruct{
  ._super = x2872}, ShaStateEStruct{
  ._super = x2873}, ShaStateEStruct{
  ._super = x2874}, ShaStateEStruct{
  ._super = x2875}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2876}, ShaStateWStruct{
  ._super = x2877}, ShaStateWStruct{
  ._super = x2878}, ShaStateWStruct{
  ._super = x2879}, ShaStateWStruct{
  ._super = x2880}, ShaStateWStruct{
  ._super = x2881}, ShaStateWStruct{
  ._super = x2882}, ShaStateWStruct{
  ._super = x2883}, ShaStateWStruct{
  ._super = x2884}, ShaStateWStruct{
  ._super = x2885}, ShaStateWStruct{
  ._super = x2886}, ShaStateWStruct{
  ._super = x2887}, ShaStateWStruct{
  ._super = x2888}, ShaStateWStruct{
  ._super = x2889}, ShaStateWStruct{
  ._super = x2890}, ShaStateWStruct{
  ._super = x2891}, ShaStateWStruct{
  ._super = x2892}, ShaStateWStruct{
  ._super = x2893}, ShaStateWStruct{
  ._super = x2894}, ShaStateWStruct{
  ._super = x2895}, ShaStateWStruct{
  ._super = x2896}, ShaStateWStruct{
  ._super = x2897}, ShaStateWStruct{
  ._super = x2898}, ShaStateWStruct{
  ._super = x2899}, ShaStateWStruct{
  ._super = x2900}, ShaStateWStruct{
  ._super = x2901}, ShaStateWStruct{
  ._super = x2902}, ShaStateWStruct{
  ._super = x2903}, ShaStateWStruct{
  ._super = x2904}, ShaStateWStruct{
  ._super = x2905}, ShaStateWStruct{
  ._super = x2906}, ShaStateWStruct{
  ._super = x2907}}};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
// Reg(<preamble>:5)
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:236)
NondetRegStruct x2908 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.stateInAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x2909 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.stateOutAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x2910 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.dataAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x2911 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.count._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x2912 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.kAddr._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x2913 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.round._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x2914 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.nextState._super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
NondetRegStruct x2915 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 0), _super), 0)};
NondetRegStruct x2916 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 1), _super), 0)};
NondetRegStruct x2917 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 2), _super), 0)};
NondetRegStruct x2918 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 3), _super), 0)};
NondetRegStruct x2919 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 4), _super), 0)};
NondetRegStruct x2920 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 5), _super), 0)};
NondetRegStruct x2921 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 6), _super), 0)};
NondetRegStruct x2922 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 7), _super), 0)};
NondetRegStruct x2923 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 8), _super), 0)};
NondetRegStruct x2924 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 9), _super), 0)};
NondetRegStruct x2925 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 10), _super), 0)};
NondetRegStruct x2926 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 11), _super), 0)};
NondetRegStruct x2927 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 12), _super), 0)};
NondetRegStruct x2928 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 13), _super), 0)};
NondetRegStruct x2929 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 14), _super), 0)};
NondetRegStruct x2930 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 15), _super), 0)};
NondetRegStruct x2931 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 16), _super), 0)};
NondetRegStruct x2932 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 17), _super), 0)};
NondetRegStruct x2933 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 18), _super), 0)};
NondetRegStruct x2934 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 19), _super), 0)};
NondetRegStruct x2935 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 20), _super), 0)};
NondetRegStruct x2936 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 21), _super), 0)};
NondetRegStruct x2937 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 22), _super), 0)};
NondetRegStruct x2938 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 23), _super), 0)};
NondetRegStruct x2939 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 24), _super), 0)};
NondetRegStruct x2940 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 25), _super), 0)};
NondetRegStruct x2941 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 26), _super), 0)};
NondetRegStruct x2942 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 27), _super), 0)};
NondetRegStruct x2943 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 28), _super), 0)};
NondetRegStruct x2944 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 29), _super), 0)};
NondetRegStruct x2945 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 30), _super), 0)};
NondetRegStruct x2946 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.a), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
NondetRegStruct x2947 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 0), _super), 0)};
NondetRegStruct x2948 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 1), _super), 0)};
NondetRegStruct x2949 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 2), _super), 0)};
NondetRegStruct x2950 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 3), _super), 0)};
NondetRegStruct x2951 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 4), _super), 0)};
NondetRegStruct x2952 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 5), _super), 0)};
NondetRegStruct x2953 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 6), _super), 0)};
NondetRegStruct x2954 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 7), _super), 0)};
NondetRegStruct x2955 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 8), _super), 0)};
NondetRegStruct x2956 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 9), _super), 0)};
NondetRegStruct x2957 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 10), _super), 0)};
NondetRegStruct x2958 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 11), _super), 0)};
NondetRegStruct x2959 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 12), _super), 0)};
NondetRegStruct x2960 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 13), _super), 0)};
NondetRegStruct x2961 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 14), _super), 0)};
NondetRegStruct x2962 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 15), _super), 0)};
NondetRegStruct x2963 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 16), _super), 0)};
NondetRegStruct x2964 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 17), _super), 0)};
NondetRegStruct x2965 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 18), _super), 0)};
NondetRegStruct x2966 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 19), _super), 0)};
NondetRegStruct x2967 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 20), _super), 0)};
NondetRegStruct x2968 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 21), _super), 0)};
NondetRegStruct x2969 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 22), _super), 0)};
NondetRegStruct x2970 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 23), _super), 0)};
NondetRegStruct x2971 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 24), _super), 0)};
NondetRegStruct x2972 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 25), _super), 0)};
NondetRegStruct x2973 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 26), _super), 0)};
NondetRegStruct x2974 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 27), _super), 0)};
NondetRegStruct x2975 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 28), _super), 0)};
NondetRegStruct x2976 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 29), _super), 0)};
NondetRegStruct x2977 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 30), _super), 0)};
NondetRegStruct x2978 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.e), 31), _super), 0)};
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
NondetRegStruct x2979 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 0), _super), 0)};
NondetRegStruct x2980 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 1), _super), 0)};
NondetRegStruct x2981 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 2), _super), 0)};
NondetRegStruct x2982 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 3), _super), 0)};
NondetRegStruct x2983 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 4), _super), 0)};
NondetRegStruct x2984 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 5), _super), 0)};
NondetRegStruct x2985 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 6), _super), 0)};
NondetRegStruct x2986 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 7), _super), 0)};
NondetRegStruct x2987 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 8), _super), 0)};
NondetRegStruct x2988 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 9), _super), 0)};
NondetRegStruct x2989 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 10), _super), 0)};
NondetRegStruct x2990 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 11), _super), 0)};
NondetRegStruct x2991 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 12), _super), 0)};
NondetRegStruct x2992 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 13), _super), 0)};
NondetRegStruct x2993 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 14), _super), 0)};
NondetRegStruct x2994 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 15), _super), 0)};
NondetRegStruct x2995 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 16), _super), 0)};
NondetRegStruct x2996 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 17), _super), 0)};
NondetRegStruct x2997 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 18), _super), 0)};
NondetRegStruct x2998 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 19), _super), 0)};
NondetRegStruct x2999 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 20), _super), 0)};
NondetRegStruct x3000 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 21), _super), 0)};
NondetRegStruct x3001 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 22), _super), 0)};
NondetRegStruct x3002 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 23), _super), 0)};
NondetRegStruct x3003 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 24), _super), 0)};
NondetRegStruct x3004 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 25), _super), 0)};
NondetRegStruct x3005 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 26), _super), 0)};
NondetRegStruct x3006 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 27), _super), 0)};
NondetRegStruct x3007 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 28), _super), 0)};
NondetRegStruct x3008 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 29), _super), 0)};
NondetRegStruct x3009 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 30), _super), 0)};
NondetRegStruct x3010 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef.arm7._super.w), 31), _super), 0)};
x2178 = ShaStateStruct{
  .stateInAddr = x2908,   .stateOutAddr = x2909,   .dataAddr = x2910,   .count = x2911,   .kAddr = x2912,   .round = x2913,   .nextState = x2914,   .a = ShaStateAStruct32Array{ShaStateAStruct{
  ._super = x2915}, ShaStateAStruct{
  ._super = x2916}, ShaStateAStruct{
  ._super = x2917}, ShaStateAStruct{
  ._super = x2918}, ShaStateAStruct{
  ._super = x2919}, ShaStateAStruct{
  ._super = x2920}, ShaStateAStruct{
  ._super = x2921}, ShaStateAStruct{
  ._super = x2922}, ShaStateAStruct{
  ._super = x2923}, ShaStateAStruct{
  ._super = x2924}, ShaStateAStruct{
  ._super = x2925}, ShaStateAStruct{
  ._super = x2926}, ShaStateAStruct{
  ._super = x2927}, ShaStateAStruct{
  ._super = x2928}, ShaStateAStruct{
  ._super = x2929}, ShaStateAStruct{
  ._super = x2930}, ShaStateAStruct{
  ._super = x2931}, ShaStateAStruct{
  ._super = x2932}, ShaStateAStruct{
  ._super = x2933}, ShaStateAStruct{
  ._super = x2934}, ShaStateAStruct{
  ._super = x2935}, ShaStateAStruct{
  ._super = x2936}, ShaStateAStruct{
  ._super = x2937}, ShaStateAStruct{
  ._super = x2938}, ShaStateAStruct{
  ._super = x2939}, ShaStateAStruct{
  ._super = x2940}, ShaStateAStruct{
  ._super = x2941}, ShaStateAStruct{
  ._super = x2942}, ShaStateAStruct{
  ._super = x2943}, ShaStateAStruct{
  ._super = x2944}, ShaStateAStruct{
  ._super = x2945}, ShaStateAStruct{
  ._super = x2946}},   .e = ShaStateEStruct32Array{ShaStateEStruct{
  ._super = x2947}, ShaStateEStruct{
  ._super = x2948}, ShaStateEStruct{
  ._super = x2949}, ShaStateEStruct{
  ._super = x2950}, ShaStateEStruct{
  ._super = x2951}, ShaStateEStruct{
  ._super = x2952}, ShaStateEStruct{
  ._super = x2953}, ShaStateEStruct{
  ._super = x2954}, ShaStateEStruct{
  ._super = x2955}, ShaStateEStruct{
  ._super = x2956}, ShaStateEStruct{
  ._super = x2957}, ShaStateEStruct{
  ._super = x2958}, ShaStateEStruct{
  ._super = x2959}, ShaStateEStruct{
  ._super = x2960}, ShaStateEStruct{
  ._super = x2961}, ShaStateEStruct{
  ._super = x2962}, ShaStateEStruct{
  ._super = x2963}, ShaStateEStruct{
  ._super = x2964}, ShaStateEStruct{
  ._super = x2965}, ShaStateEStruct{
  ._super = x2966}, ShaStateEStruct{
  ._super = x2967}, ShaStateEStruct{
  ._super = x2968}, ShaStateEStruct{
  ._super = x2969}, ShaStateEStruct{
  ._super = x2970}, ShaStateEStruct{
  ._super = x2971}, ShaStateEStruct{
  ._super = x2972}, ShaStateEStruct{
  ._super = x2973}, ShaStateEStruct{
  ._super = x2974}, ShaStateEStruct{
  ._super = x2975}, ShaStateEStruct{
  ._super = x2976}, ShaStateEStruct{
  ._super = x2977}, ShaStateEStruct{
  ._super = x2978}},   .w = ShaStateWStruct32Array{ShaStateWStruct{
  ._super = x2979}, ShaStateWStruct{
  ._super = x2980}, ShaStateWStruct{
  ._super = x2981}, ShaStateWStruct{
  ._super = x2982}, ShaStateWStruct{
  ._super = x2983}, ShaStateWStruct{
  ._super = x2984}, ShaStateWStruct{
  ._super = x2985}, ShaStateWStruct{
  ._super = x2986}, ShaStateWStruct{
  ._super = x2987}, ShaStateWStruct{
  ._super = x2988}, ShaStateWStruct{
  ._super = x2989}, ShaStateWStruct{
  ._super = x2990}, ShaStateWStruct{
  ._super = x2991}, ShaStateWStruct{
  ._super = x2992}, ShaStateWStruct{
  ._super = x2993}, ShaStateWStruct{
  ._super = x2994}, ShaStateWStruct{
  ._super = x2995}, ShaStateWStruct{
  ._super = x2996}, ShaStateWStruct{
  ._super = x2997}, ShaStateWStruct{
  ._super = x2998}, ShaStateWStruct{
  ._super = x2999}, ShaStateWStruct{
  ._super = x3000}, ShaStateWStruct{
  ._super = x3001}, ShaStateWStruct{
  ._super = x3002}, ShaStateWStruct{
  ._super = x3003}, ShaStateWStruct{
  ._super = x3004}, ShaStateWStruct{
  ._super = x3005}, ShaStateWStruct{
  ._super = x3006}, ShaStateWStruct{
  ._super = x3007}, ShaStateWStruct{
  ._super = x3008}, ShaStateWStruct{
  ._super = x3009}, ShaStateWStruct{
  ._super = x3010}}};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
ShaStateStruct x3011 = back_ShaState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm11.stateRedef._super));
x21 = InstOutputBaseStruct{
  .newPc = x11,   .newState = x3011.nextState._super,   .newMode = x13,   .topState = x16};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, majorOnehot._super), 12), _super), 0))) {
BigIntStateStruct x3012;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 0), _super), 0))) {
// builtin NondetReg
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:46)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:175)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:85)
NondetRegStruct x3013 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3014 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3015 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3016 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3017 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3018 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 0), _super), 0)};
NondetRegStruct x3019 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 1), _super), 0)};
NondetRegStruct x3020 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 2), _super), 0)};
NondetRegStruct x3021 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 3), _super), 0)};
NondetRegStruct x3022 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 4), _super), 0)};
NondetRegStruct x3023 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 5), _super), 0)};
NondetRegStruct x3024 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 6), _super), 0)};
NondetRegStruct x3025 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 7), _super), 0)};
NondetRegStruct x3026 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 8), _super), 0)};
NondetRegStruct x3027 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 9), _super), 0)};
NondetRegStruct x3028 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 10), _super), 0)};
NondetRegStruct x3029 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 11), _super), 0)};
NondetRegStruct x3030 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 12), _super), 0)};
NondetRegStruct x3031 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 13), _super), 0)};
NondetRegStruct x3032 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 14), _super), 0)};
NondetRegStruct x3033 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3034 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm0._super._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3013,   .mode = x3014,   .pc = x3015,   .polyOp = x3016,   .coeff = x3017,   .bytes = NondetRegStruct16Array{x3018, x3019, x3020, x3021, x3022, x3023, x3024, x3025, x3026, x3027, x3028, x3029, x3030, x3031, x3032, x3033},   .nextState = x3034};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 1), _super), 0))) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:176)
BigIntStateStruct x3035 = back_BigIntState(ctx,1, LAYOUT_LOOKUP(layout0, instResult.arm12.state));
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:119)
Val x3036 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.instHigh.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3036), "value out of range!");
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x3037 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.instHigh.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3037), "value out of range!");
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:139)
Val x3038 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.dataAddrU32.low16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3038), "value out of range!");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
Val x3039 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.dataAddrU32.high16.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3039), "value out of range!");
NondetRegStruct16Array x3040;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.memOpOneHot._super), 0), _super), 0))) {
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
// BigIntAddr(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:66)
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:74)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:145)
Val x3041 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.addr._super.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3041), "value out of range!");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x3042 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.addr._super.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3042), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:58)
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:76)
NondetRegStruct x3043 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.low.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3044 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.low.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3044), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3045 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.low.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3046 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.low.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3046), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:59)
NondetRegStruct x3047 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.high.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3048 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.high.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3048), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3049 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.high.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3050 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 0), _super.high.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3050), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:58)
NondetRegStruct x3051 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.low.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3052 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.low.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3052), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3053 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.low.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3054 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.low.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3054), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:59)
NondetRegStruct x3055 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.high.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3056 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.high.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3056), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3057 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.high.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3058 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 1), _super.high.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3058), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:58)
NondetRegStruct x3059 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.low.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3060 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.low.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3060), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3061 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.low.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3062 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.low.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3062), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:59)
NondetRegStruct x3063 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.high.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3064 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.high.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3064), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3065 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.high.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3066 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 2), _super.high.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3066), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:58)
NondetRegStruct x3067 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.low.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3068 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.low.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3068), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3069 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.low.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3070 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.low.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3070), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:59)
NondetRegStruct x3071 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.high.byte0.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3072 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.high.byte0.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3072), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
NondetRegStruct x3073 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.high.byte1.arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3074 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm0.words), 3), _super.high.byte1.arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3074), "value out of range!");
x3040 = NondetRegStruct16Array{x3043, x3045, x3047, x3049, x3051, x3053, x3055, x3057, x3059, x3061, x3063, x3065, x3067, x3069, x3071, x3073};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.memOpOneHot._super), 1), _super), 0))) {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:50)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
// BigIntAddr(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:66)
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:94)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:146)
Val x3075 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1.addr._super.upperDiff.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3075), "value out of range!");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x3076 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1.addr._super.med14.arg.val._super), 0), Val(65536));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3076), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:18)
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:88)
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:95)
NondetRegStruct x3077 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 0), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3078 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 0), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3078), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3079 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 1), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3080 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 1), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3080), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3081 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 2), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3082 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 2), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3082), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3083 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 3), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3084 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 3), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3084), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3085 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 4), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3086 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 4), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3086), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3087 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 5), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3088 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 5), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3088), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3089 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 6), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3090 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 6), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3090), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3091 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 7), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3092 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 7), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3092), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3093 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 8), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3094 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 8), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3094), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3095 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 9), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3096 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 9), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3096), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3097 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 10), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3098 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 10), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3098), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3099 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 11), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3100 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 11), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3100), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3101 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 12), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3102 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 12), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3102), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3103 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 13), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3104 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 13), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3104), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3105 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 14), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3106 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 14), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3106), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3107 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 15), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3108 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm1._super._super), 15), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3108), "value out of range!");
x3040 = NondetRegStruct16Array{x3077, x3079, x3081, x3083, x3085, x3087, x3089, x3091, x3093, x3095, x3097, x3099, x3101, x3103, x3105, x3107};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.memOpOneHot._super), 2), _super), 0))) {
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
// BigIntCheck(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:108)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:147)
NondetRegStruct x3109 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 0), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3110 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 0), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3110), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3111 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 1), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3112 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 1), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3112), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3113 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 2), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3114 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 2), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3114), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3115 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 3), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3116 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 3), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3116), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3117 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 4), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3118 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 4), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3118), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3119 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 5), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3120 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 5), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3120), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3121 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 6), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3122 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 6), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3122), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3123 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 7), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3124 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 7), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3124), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3125 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 8), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3126 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 8), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3126), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3127 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 9), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3128 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 9), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3128), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3129 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 10), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3130 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 10), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3130), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3131 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 11), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3132 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 11), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3132), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3133 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 12), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3134 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 12), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3134), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3135 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 13), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3136 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 13), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3136), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3137 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 14), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3138 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 14), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3138), "value out of range!");
// builtin NondetReg
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
NondetRegStruct x3139 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 15), arg.val._super), 0)};
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:12)
Val x3140 = inRange(Val(0), LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1.bytes.arm2._super._super), 15), arg.val._super), 0), Val(256));
INVOKE_EXTERN(ctx,assert, (Val(1) - x3140), "value out of range!");
x3040 = NondetRegStruct16Array{x3109, x3111, x3113, x3115, x3117, x3119, x3121, x3123, x3125, x3127, x3129, x3131, x3133, x3135, x3137, x3139};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin Sub
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:151)
Val x3141 = (Val(1) - x3035.isEcall._super);
// builtin Mul
Val x3142 = (LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._2._super._super), 0) * x3141);
Val x3143;
if (to_size_t(x3142)) {
x3143 = Val(48);
} else if (to_size_t((Val(1) - x3142))) {
x3143 = Val(41);
} else {
   assert(0 && "Reached unreachable mux arm");
}
// builtin NondetReg
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:158)
NondetRegStruct x3144 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3145 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3146 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3147 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3148 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3149 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 0), _super), 0)};
NondetRegStruct x3150 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 1), _super), 0)};
NondetRegStruct x3151 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 2), _super), 0)};
NondetRegStruct x3152 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 3), _super), 0)};
NondetRegStruct x3153 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 4), _super), 0)};
NondetRegStruct x3154 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 5), _super), 0)};
NondetRegStruct x3155 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 6), _super), 0)};
NondetRegStruct x3156 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 7), _super), 0)};
NondetRegStruct x3157 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 8), _super), 0)};
NondetRegStruct x3158 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 9), _super), 0)};
NondetRegStruct x3159 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 10), _super), 0)};
NondetRegStruct x3160 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 11), _super), 0)};
NondetRegStruct x3161 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 12), _super), 0)};
NondetRegStruct x3162 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 13), _super), 0)};
NondetRegStruct x3163 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 14), _super), 0)};
NondetRegStruct x3164 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3165 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm1._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3144,   .mode = x3145,   .pc = x3146,   .polyOp = x3147,   .coeff = x3148,   .bytes = NondetRegStruct16Array{x3149, x3150, x3151, x3152, x3153, x3154, x3155, x3156, x3157, x3158, x3159, x3160, x3161, x3162, x3163, x3164},   .nextState = x3165};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 2), _super), 0))) {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:27)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:177)
NondetRegStruct x3166 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3167 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3168 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3169 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3170 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3171 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 0), _super), 0)};
NondetRegStruct x3172 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 1), _super), 0)};
NondetRegStruct x3173 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 2), _super), 0)};
NondetRegStruct x3174 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 3), _super), 0)};
NondetRegStruct x3175 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 4), _super), 0)};
NondetRegStruct x3176 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 5), _super), 0)};
NondetRegStruct x3177 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 6), _super), 0)};
NondetRegStruct x3178 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 7), _super), 0)};
NondetRegStruct x3179 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 8), _super), 0)};
NondetRegStruct x3180 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 9), _super), 0)};
NondetRegStruct x3181 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 10), _super), 0)};
NondetRegStruct x3182 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 11), _super), 0)};
NondetRegStruct x3183 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 12), _super), 0)};
NondetRegStruct x3184 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 13), _super), 0)};
NondetRegStruct x3185 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 14), _super), 0)};
NondetRegStruct x3186 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3187 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm2._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3166,   .mode = x3167,   .pc = x3168,   .polyOp = x3169,   .coeff = x3170,   .bytes = NondetRegStruct16Array{x3171, x3172, x3173, x3174, x3175, x3176, x3177, x3178, x3179, x3180, x3181, x3182, x3183, x3184, x3185, x3186},   .nextState = x3187};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 3), _super), 0))) {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:178)
NondetRegStruct x3188 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3189 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3190 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3191 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3192 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3193 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 0), _super), 0)};
NondetRegStruct x3194 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 1), _super), 0)};
NondetRegStruct x3195 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 2), _super), 0)};
NondetRegStruct x3196 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 3), _super), 0)};
NondetRegStruct x3197 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 4), _super), 0)};
NondetRegStruct x3198 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 5), _super), 0)};
NondetRegStruct x3199 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 6), _super), 0)};
NondetRegStruct x3200 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 7), _super), 0)};
NondetRegStruct x3201 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 8), _super), 0)};
NondetRegStruct x3202 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 9), _super), 0)};
NondetRegStruct x3203 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 10), _super), 0)};
NondetRegStruct x3204 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 11), _super), 0)};
NondetRegStruct x3205 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 12), _super), 0)};
NondetRegStruct x3206 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 13), _super), 0)};
NondetRegStruct x3207 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 14), _super), 0)};
NondetRegStruct x3208 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3209 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm3._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3188,   .mode = x3189,   .pc = x3190,   .polyOp = x3191,   .coeff = x3192,   .bytes = NondetRegStruct16Array{x3193, x3194, x3195, x3196, x3197, x3198, x3199, x3200, x3201, x3202, x3203, x3204, x3205, x3206, x3207, x3208},   .nextState = x3209};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 4), _super), 0))) {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:179)
NondetRegStruct x3210 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3211 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3212 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3213 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3214 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3215 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 0), _super), 0)};
NondetRegStruct x3216 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 1), _super), 0)};
NondetRegStruct x3217 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 2), _super), 0)};
NondetRegStruct x3218 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 3), _super), 0)};
NondetRegStruct x3219 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 4), _super), 0)};
NondetRegStruct x3220 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 5), _super), 0)};
NondetRegStruct x3221 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 6), _super), 0)};
NondetRegStruct x3222 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 7), _super), 0)};
NondetRegStruct x3223 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 8), _super), 0)};
NondetRegStruct x3224 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 9), _super), 0)};
NondetRegStruct x3225 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 10), _super), 0)};
NondetRegStruct x3226 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 11), _super), 0)};
NondetRegStruct x3227 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 12), _super), 0)};
NondetRegStruct x3228 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 13), _super), 0)};
NondetRegStruct x3229 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 14), _super), 0)};
NondetRegStruct x3230 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3231 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm4._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3210,   .mode = x3211,   .pc = x3212,   .polyOp = x3213,   .coeff = x3214,   .bytes = NondetRegStruct16Array{x3215, x3216, x3217, x3218, x3219, x3220, x3221, x3222, x3223, x3224, x3225, x3226, x3227, x3228, x3229, x3230},   .nextState = x3231};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 5), _super), 0))) {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:180)
NondetRegStruct x3232 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3233 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3234 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3235 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3236 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3237 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 0), _super), 0)};
NondetRegStruct x3238 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 1), _super), 0)};
NondetRegStruct x3239 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 2), _super), 0)};
NondetRegStruct x3240 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 3), _super), 0)};
NondetRegStruct x3241 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 4), _super), 0)};
NondetRegStruct x3242 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 5), _super), 0)};
NondetRegStruct x3243 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 6), _super), 0)};
NondetRegStruct x3244 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 7), _super), 0)};
NondetRegStruct x3245 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 8), _super), 0)};
NondetRegStruct x3246 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 9), _super), 0)};
NondetRegStruct x3247 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 10), _super), 0)};
NondetRegStruct x3248 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 11), _super), 0)};
NondetRegStruct x3249 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 12), _super), 0)};
NondetRegStruct x3250 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 13), _super), 0)};
NondetRegStruct x3251 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 14), _super), 0)};
NondetRegStruct x3252 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3253 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm5._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3232,   .mode = x3233,   .pc = x3234,   .polyOp = x3235,   .coeff = x3236,   .bytes = NondetRegStruct16Array{x3237, x3238, x3239, x3240, x3241, x3242, x3243, x3244, x3245, x3246, x3247, x3248, x3249, x3250, x3251, x3252},   .nextState = x3253};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 6), _super), 0))) {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:181)
NondetRegStruct x3254 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3255 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3256 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3257 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3258 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3259 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 0), _super), 0)};
NondetRegStruct x3260 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 1), _super), 0)};
NondetRegStruct x3261 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 2), _super), 0)};
NondetRegStruct x3262 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 3), _super), 0)};
NondetRegStruct x3263 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 4), _super), 0)};
NondetRegStruct x3264 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 5), _super), 0)};
NondetRegStruct x3265 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 6), _super), 0)};
NondetRegStruct x3266 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 7), _super), 0)};
NondetRegStruct x3267 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 8), _super), 0)};
NondetRegStruct x3268 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 9), _super), 0)};
NondetRegStruct x3269 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 10), _super), 0)};
NondetRegStruct x3270 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 11), _super), 0)};
NondetRegStruct x3271 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 12), _super), 0)};
NondetRegStruct x3272 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 13), _super), 0)};
NondetRegStruct x3273 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 14), _super), 0)};
NondetRegStruct x3274 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3275 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm6._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3254,   .mode = x3255,   .pc = x3256,   .polyOp = x3257,   .coeff = x3258,   .bytes = NondetRegStruct16Array{x3259, x3260, x3261, x3262, x3263, x3264, x3265, x3266, x3267, x3268, x3269, x3270, x3271, x3272, x3273, x3274},   .nextState = x3275};
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instInput.minorOnehot._super), 7), _super), 0))) {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:13)
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:19)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:14)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
NondetRegStruct x3276 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.isEcall._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
NondetRegStruct x3277 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.mode._super), 0)};
// Reg(<preamble>:5)
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:16)
NondetRegStruct x3278 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.pc._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:17)
NondetRegStruct x3279 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.polyOp._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:18)
NondetRegStruct x3280 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.coeff._super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:19)
NondetRegStruct x3281 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 0), _super), 0)};
NondetRegStruct x3282 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 1), _super), 0)};
NondetRegStruct x3283 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 2), _super), 0)};
NondetRegStruct x3284 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 3), _super), 0)};
NondetRegStruct x3285 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 4), _super), 0)};
NondetRegStruct x3286 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 5), _super), 0)};
NondetRegStruct x3287 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 6), _super), 0)};
NondetRegStruct x3288 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 7), _super), 0)};
NondetRegStruct x3289 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 8), _super), 0)};
NondetRegStruct x3290 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 9), _super), 0)};
NondetRegStruct x3291 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 10), _super), 0)};
NondetRegStruct x3292 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 11), _super), 0)};
NondetRegStruct x3293 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 12), _super), 0)};
NondetRegStruct x3294 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 13), _super), 0)};
NondetRegStruct x3295 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 14), _super), 0)};
NondetRegStruct x3296 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.bytes), 15), _super), 0)};
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:20)
NondetRegStruct x3297 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef.arm7._super.nextState._super), 0)};
x3012 = BigIntStateStruct{
  .isEcall = x3276,   .mode = x3277,   .pc = x3278,   .polyOp = x3279,   .coeff = x3280,   .bytes = NondetRegStruct16Array{x3281, x3282, x3283, x3284, x3285, x3286, x3287, x3288, x3289, x3290, x3291, x3292, x3293, x3294, x3295, x3296},   .nextState = x3297};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:174)
BigIntStateStruct x3298 = back_BigIntState(ctx,0, LAYOUT_LOOKUP(layout0, instResult.arm12.stateRedef._super));
Val16Array x3299 = Val16Array{x3298.bytes[0]._super, x3298.bytes[1]._super, x3298.bytes[2]._super, x3298.bytes[3]._super, x3298.bytes[4]._super, x3298.bytes[5]._super, x3298.bytes[6]._super, x3298.bytes[7]._super, x3298.bytes[8]._super, x3298.bytes[9]._super, x3298.bytes[10]._super, x3298.bytes[11]._super, x3298.bytes[12]._super, x3298.bytes[13]._super, x3298.bytes[14]._super, x3298.bytes[15]._super};
// BigIntTopState(zirgen/circuit/rv32im/v2/dsl/inst.zir:107)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:184)
BigIntTopStateStruct x3300 = BigIntTopStateStruct{
  .polyOp = x3298.polyOp._super,   .coeff = x3298.coeff._super,   .witness = x3299};
x21 = InstOutputBaseStruct{
  .newPc = x11,   .newState = x3298.nextState._super,   .newMode = x13,   .topState = x3300};
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x21.topState;
}
AccumStruct execUser_Accum(ExecContext& ctx,BoundLayout<TopLayout> arg0, ExtVal1Array arg1_0, BoundLayout<AccumLayout> layout2, GlobalBuf global3)   {
BigIntTopStateStruct x4 = exec_TopExtract(ctx,arg0, global3);
AccumStruct x5 = exec_Accum(ctx,x4, arg1_0, layout2);
return x5;
}
ComponentStruct exec_TopAccum(ExecContext& ctx,BoundLayout<TopLayout> arg0, BoundLayout<LayoutAccumLayout> layout1, GlobalBuf global2, GlobalBuf mix3)   {
// zirgen/dsl/passes/GenerateAccum.cpp:525
BoundLayout<_mixLayout> x4 = BIND_LAYOUT(kLayoutMix, mix3);
// zirgen/dsl/passes/GenerateAccum.cpp:554
ExtVal1Array x5 = ExtVal1Array{LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(x4, randomness._user), 0), 0)};
AccumStruct x6 = execUser_Accum(ctx,arg0, x5, LAYOUT_LOOKUP(layout1, user), global2);
// zirgen/dsl/passes/GenerateAccum.cpp:623
ComponentStruct x7 = ComponentStruct{
};
ComponentStruct x8;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 0), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x9 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x10 = (x9 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x11 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.low16.arg.count._super), 0) * inv_0(x10));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x12 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x11);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x13 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x14 = (x13 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x15 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.high16.arg.count._super), 0) * inv_0(x14));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x16 = (x10 * x14);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x17 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.low16.arg.count._super), 0) * x14);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x18 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x19 = (x18 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x20 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.low16.arg.count._super), 0) * inv_0(x19));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x21 = ((x12 + x15) + x20);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x21);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x22 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x23 = (((x22 * (x16 * x19)) - (x17 * x19)) - ((x10 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.high16.arg.count._super), 0)) * x19));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x23 - (x16 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x24 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x25 = (x24 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x26 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.high16.arg.count._super), 0) * inv_0(x25));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x27 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.addr._super), 0));
ExtVal x28 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.cycle._super), 0));
ExtVal x29 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.dataLow._super), 0));
ExtVal x30 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x31 = (((x27 + x28) + x29) + x30);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x32 = (x31 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x33 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.count._super), 0) * inv_0(x32));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x34 = (x25 * x32);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x35 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.high16.arg.count._super), 0) * x32);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x36 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.addr._super), 0));
ExtVal x37 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.cycle._super), 0));
ExtVal x38 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.dataLow._super), 0));
ExtVal x39 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x40 = (((x36 + x37) + x38) + x39);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x41 = (x40 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x42 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.count._super), 0) * inv_0(x41));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x43 = (((x21 + x26) + x33) + x42);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x43);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x44 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x45 = (((x44 * (x34 * x41)) - (x35 * x41)) - ((x25 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.count._super), 0)) * x41));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x45 - (x34 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x46 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x47 = (x46 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x48 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0._0._0.arg.count._super), 0) * inv_0(x47));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x49 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x50 = (x49 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x51 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg1.count._super), 0) * inv_0(x50));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x52 = (x47 * x50);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x53 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0._0._0.arg.count._super), 0) * x50);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x54 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x55 = (x54 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x56 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg2.count._super), 0) * inv_0(x55));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x57 = (((x43 + x48) + x51) + x56);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x57);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x58 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x59 = (((x58 * (x52 * x55)) - (x53 * x55)) - ((x47 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg1.count._super), 0)) * x55));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x59 - (x52 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg2.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x60 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x61 = (x60 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x62 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x61));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x63 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x64 = (x63 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x65 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x64));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x66 = (x61 * x64);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x67 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * x64);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x68 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x69 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x70 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x71 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x72 = (((x68 + x69) + x70) + x71);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x73 = (x72 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x74 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x73));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x75 = (((x57 + x62) + x65) + x74);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x75);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x76 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x77 = (((x76 * (x66 * x73)) - (x67 * x73)) - ((x61 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.med14.arg.count._super), 0)) * x73));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x77 - (x66 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x78 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x79 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x80 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x81 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x82 = (((x78 + x79) + x80) + x81);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x83 = (x82 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x84 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x83));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x85 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x86 = (x85 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x87 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x86));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x88 = (x83 * x86);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x89 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.count._super), 0) * x86);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x90 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), addr._super), 0));
ExtVal x91 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), cycle._super), 0));
ExtVal x92 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataLow._super), 0));
ExtVal x93 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x94 = (((x90 + x91) + x92) + x93);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x95 = (x94 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x96 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0) * inv_0(x95));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x97 = (((x75 + x84) + x87) + x96);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x97);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x98 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x99 = (((x98 * (x88 * x95)) - (x89 * x95)) - ((x83 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst._0._0.arg.count._super), 0)) * x95));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x99 - (x88 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x100 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), addr._super), 0));
ExtVal x101 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), cycle._super), 0));
ExtVal x102 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataLow._super), 0));
ExtVal x103 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x104 = (((x100 + x101) + x102) + x103);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x105 = (x104 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x106 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * inv_0(x105));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x107 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), addr._super), 0));
ExtVal x108 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), cycle._super), 0));
ExtVal x109 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataLow._super), 0));
ExtVal x110 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x111 = (((x107 + x108) + x109) + x110);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x112 = (x111 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x113 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * inv_0(x112));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x114 = (x105 * x112);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x115 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * x112);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x116 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), addr._super), 0));
ExtVal x117 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), cycle._super), 0));
ExtVal x118 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataLow._super), 0));
ExtVal x119 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x120 = (((x116 + x117) + x118) + x119);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x121 = (x120 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x122 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0) * inv_0(x121));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x123 = (((x97 + x106) + x113) + x122);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x123);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x124 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x125 = (((x124 * (x114 * x121)) - (x115 * x121)) - ((x105 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0)) * x121));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x125 - (x114 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x126 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x127 = (x126 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x128 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * inv_0(x127));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x129 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x130 = (x129 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x131 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * inv_0(x130));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x132 = (x127 * x130);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x133 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * x130);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x134 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x135 = (x134 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x136 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 0), count._super), 0) * inv_0(x135));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x137 = (((x123 + x128) + x131) + x136);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x137);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x138 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x139 = (((x138 * (x132 * x135)) - (x133 * x135)) - ((x127 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0)) * x135));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x139 - (x132 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x140 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x141 = (x140 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x142 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 1), count._super), 0) * inv_0(x141));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x143 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x144 = (x143 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x145 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 2), count._super), 0) * inv_0(x144));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x146 = (x141 * x144);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x147 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 1), count._super), 0) * x144);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x148 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x149 = (x148 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x150 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 3), count._super), 0) * inv_0(x149));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x151 = (((x137 + x142) + x145) + x150);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x151);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x152 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x153 = (((x152 * (x146 * x149)) - (x147 * x149)) - ((x141 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 2), count._super), 0)) * x149));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x153 - (x146 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x154 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x155 = (x154 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x156 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 4), count._super), 0) * inv_0(x155));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), (x151 + x156));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x157 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x158 = ((x157 * x155) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 4), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x158, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x159 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x159, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 1), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x160 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x161 = (x160 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x162 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.low16.arg.count._super), 0) * inv_0(x161));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x163 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x162);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x164 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x165 = (x164 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x166 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.high16.arg.count._super), 0) * inv_0(x165));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x167 = (x161 * x165);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x168 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.low16.arg.count._super), 0) * x165);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x169 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x170 = (x169 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x171 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.low16.arg.count._super), 0) * inv_0(x170));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x172 = ((x163 + x166) + x171);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x172);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x173 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x174 = (((x173 * (x167 * x170)) - (x168 * x170)) - ((x161 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.high16.arg.count._super), 0)) * x170));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x174 - (x167 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x175 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x176 = (x175 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x177 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.high16.arg.count._super), 0) * inv_0(x176));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x178 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.addr._super), 0));
ExtVal x179 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.cycle._super), 0));
ExtVal x180 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.dataLow._super), 0));
ExtVal x181 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x182 = (((x178 + x179) + x180) + x181);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x183 = (x182 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x184 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.count._super), 0) * inv_0(x183));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x185 = (x176 * x183);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x186 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.high16.arg.count._super), 0) * x183);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x187 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.addr._super), 0));
ExtVal x188 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.cycle._super), 0));
ExtVal x189 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.dataLow._super), 0));
ExtVal x190 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x191 = (((x187 + x188) + x189) + x190);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x192 = (x191 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x193 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.count._super), 0) * inv_0(x192));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x194 = (((x172 + x177) + x184) + x193);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x194);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x195 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x196 = (((x195 * (x185 * x192)) - (x186 * x192)) - ((x176 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.count._super), 0)) * x192));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x196 - (x185 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x197 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x198 = (x197 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x199 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0._0._0.arg.count._super), 0) * inv_0(x198));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x200 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x201 = (x200 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x202 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg1.count._super), 0) * inv_0(x201));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x203 = (x198 * x201);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x204 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0._0._0.arg.count._super), 0) * x201);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x205 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x206 = (x205 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x207 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg2.count._super), 0) * inv_0(x206));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x208 = (((x194 + x199) + x202) + x207);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x208);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x209 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x210 = (((x209 * (x203 * x206)) - (x204 * x206)) - ((x198 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg1.count._super), 0)) * x206));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x210 - (x203 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg2.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x211 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x212 = (x211 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x213 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x212));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x214 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x215 = (x214 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x216 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x215));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x217 = (x212 * x215);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x218 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * x215);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x219 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x220 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x221 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x222 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x223 = (((x219 + x220) + x221) + x222);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x224 = (x223 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x225 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x224));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x226 = (((x208 + x213) + x216) + x225);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x226);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x227 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x228 = (((x227 * (x217 * x224)) - (x218 * x224)) - ((x212 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.med14.arg.count._super), 0)) * x224));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x228 - (x217 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x229 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x230 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x231 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x232 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x233 = (((x229 + x230) + x231) + x232);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x234 = (x233 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x235 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x234));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x236 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x237 = (x236 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x238 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x237));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x239 = (x234 * x237);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x240 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.count._super), 0) * x237);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x241 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), addr._super), 0));
ExtVal x242 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), cycle._super), 0));
ExtVal x243 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataLow._super), 0));
ExtVal x244 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x245 = (((x241 + x242) + x243) + x244);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x246 = (x245 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x247 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0) * inv_0(x246));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x248 = (((x226 + x235) + x238) + x247);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x248);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x249 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x250 = (((x249 * (x239 * x246)) - (x240 * x246)) - ((x234 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst._0._0.arg.count._super), 0)) * x246));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x250 - (x239 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x251 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), addr._super), 0));
ExtVal x252 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), cycle._super), 0));
ExtVal x253 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataLow._super), 0));
ExtVal x254 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x255 = (((x251 + x252) + x253) + x254);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x256 = (x255 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x257 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * inv_0(x256));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x258 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), addr._super), 0));
ExtVal x259 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), cycle._super), 0));
ExtVal x260 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataLow._super), 0));
ExtVal x261 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x262 = (((x258 + x259) + x260) + x261);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x263 = (x262 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x264 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * inv_0(x263));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x265 = (x256 * x263);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x266 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * x263);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x267 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), addr._super), 0));
ExtVal x268 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), cycle._super), 0));
ExtVal x269 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataLow._super), 0));
ExtVal x270 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x271 = (((x267 + x268) + x269) + x270);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x272 = (x271 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x273 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0) * inv_0(x272));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x274 = (((x248 + x257) + x264) + x273);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x274);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x275 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x276 = (((x275 * (x265 * x272)) - (x266 * x272)) - ((x256 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0)) * x272));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x276 - (x265 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x277 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x278 = (x277 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x279 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * inv_0(x278));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x280 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x281 = (x280 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x282 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * inv_0(x281));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x283 = (x278 * x281);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x284 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * x281);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x285 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x286 = (x285 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x287 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 0), count._super), 0) * inv_0(x286));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x288 = (((x274 + x279) + x282) + x287);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x288);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x289 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x290 = (((x289 * (x283 * x286)) - (x284 * x286)) - ((x278 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0)) * x286));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x290 - (x283 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x291 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x292 = (x291 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x293 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 1), count._super), 0) * inv_0(x292));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x294 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x295 = (x294 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x296 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 2), count._super), 0) * inv_0(x295));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x297 = (x292 * x295);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x298 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 1), count._super), 0) * x295);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x299 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x300 = (x299 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x301 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 3), count._super), 0) * inv_0(x300));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x302 = (((x288 + x293) + x296) + x301);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x302);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x303 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x304 = (((x303 * (x297 * x300)) - (x298 * x300)) - ((x292 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 2), count._super), 0)) * x300));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x304 - (x297 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x305 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x306 = (x305 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x307 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 4), count._super), 0) * inv_0(x306));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), (x302 + x307));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x308 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x309 = ((x308 * x306) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 4), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x309, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x310 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x310, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 2), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x311 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x312 = (x311 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x313 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.low16.arg.count._super), 0) * inv_0(x312));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x314 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x313);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x315 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x316 = (x315 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x317 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.high16.arg.count._super), 0) * inv_0(x316));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x318 = (x312 * x316);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x319 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.low16.arg.count._super), 0) * x316);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x320 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x321 = (x320 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x322 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.low16.arg.count._super), 0) * inv_0(x321));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x323 = ((x314 + x317) + x322);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x323);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x324 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x325 = (((x324 * (x318 * x321)) - (x319 * x321)) - ((x312 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.high16.arg.count._super), 0)) * x321));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x325 - (x318 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x326 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x327 = (x326 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x328 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.high16.arg.count._super), 0) * inv_0(x327));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x329 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.addr._super), 0));
ExtVal x330 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.cycle._super), 0));
ExtVal x331 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.dataLow._super), 0));
ExtVal x332 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x333 = (((x329 + x330) + x331) + x332);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x334 = (x333 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x335 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.count._super), 0) * inv_0(x334));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x336 = (x327 * x334);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x337 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.high16.arg.count._super), 0) * x334);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x338 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.addr._super), 0));
ExtVal x339 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.cycle._super), 0));
ExtVal x340 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.dataLow._super), 0));
ExtVal x341 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x342 = (((x338 + x339) + x340) + x341);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x343 = (x342 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x344 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.count._super), 0) * inv_0(x343));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x345 = (((x323 + x328) + x335) + x344);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x345);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x346 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x347 = (((x346 * (x336 * x343)) - (x337 * x343)) - ((x327 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.count._super), 0)) * x343));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x347 - (x336 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x348 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x349 = (x348 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x350 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0._0._0.arg.count._super), 0) * inv_0(x349));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x351 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x352 = (x351 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x353 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg1.count._super), 0) * inv_0(x352));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x354 = (x349 * x352);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x355 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0._0._0.arg.count._super), 0) * x352);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x356 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x357 = (x356 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x358 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg2.count._super), 0) * inv_0(x357));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x359 = (((x345 + x350) + x353) + x358);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x359);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x360 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x361 = (((x360 * (x354 * x357)) - (x355 * x357)) - ((x349 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg1.count._super), 0)) * x357));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x361 - (x354 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg2.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x362 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x363 = (x362 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x364 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x363));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x365 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x366 = (x365 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x367 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x366));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x368 = (x363 * x366);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x369 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * x366);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x370 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x371 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x372 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x373 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x374 = (((x370 + x371) + x372) + x373);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x375 = (x374 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x376 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x375));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x377 = (((x359 + x364) + x367) + x376);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x377);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x378 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x379 = (((x378 * (x368 * x375)) - (x369 * x375)) - ((x363 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.med14.arg.count._super), 0)) * x375));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x379 - (x368 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x380 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x381 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x382 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x383 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x384 = (((x380 + x381) + x382) + x383);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x385 = (x384 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x386 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x385));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x387 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x388 = (x387 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x389 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x388));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x390 = (x385 * x388);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x391 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.count._super), 0) * x388);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x392 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), addr._super), 0));
ExtVal x393 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), cycle._super), 0));
ExtVal x394 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataLow._super), 0));
ExtVal x395 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x396 = (((x392 + x393) + x394) + x395);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x397 = (x396 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x398 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0) * inv_0(x397));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x399 = (((x377 + x386) + x389) + x398);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x399);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x400 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x401 = (((x400 * (x390 * x397)) - (x391 * x397)) - ((x385 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst._0._0.arg.count._super), 0)) * x397));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x401 - (x390 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x402 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), addr._super), 0));
ExtVal x403 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), cycle._super), 0));
ExtVal x404 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataLow._super), 0));
ExtVal x405 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x406 = (((x402 + x403) + x404) + x405);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x407 = (x406 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x408 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * inv_0(x407));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x409 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), addr._super), 0));
ExtVal x410 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), cycle._super), 0));
ExtVal x411 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataLow._super), 0));
ExtVal x412 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x413 = (((x409 + x410) + x411) + x412);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x414 = (x413 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x415 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * inv_0(x414));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x416 = (x407 * x414);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x417 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * x414);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x418 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), addr._super), 0));
ExtVal x419 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), cycle._super), 0));
ExtVal x420 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataLow._super), 0));
ExtVal x421 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x422 = (((x418 + x419) + x420) + x421);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x423 = (x422 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x424 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0) * inv_0(x423));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x425 = (((x399 + x408) + x415) + x424);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x425);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x426 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x427 = (((x426 * (x416 * x423)) - (x417 * x423)) - ((x407 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0)) * x423));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x427 - (x416 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x428 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x429 = (x428 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x430 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * inv_0(x429));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x431 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x432 = (x431 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x433 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * inv_0(x432));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x434 = (x429 * x432);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x435 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * x432);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x436 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x437 = (x436 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x438 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 0), count._super), 0) * inv_0(x437));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x439 = (((x425 + x430) + x433) + x438);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x439);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x440 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x441 = (((x440 * (x434 * x437)) - (x435 * x437)) - ((x429 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0)) * x437));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x441 - (x434 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x442 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x443 = (x442 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x444 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 1), count._super), 0) * inv_0(x443));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x445 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x446 = (x445 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x447 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 2), count._super), 0) * inv_0(x446));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x448 = (x443 * x446);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x449 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 1), count._super), 0) * x446);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x450 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x451 = (x450 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x452 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 3), count._super), 0) * inv_0(x451));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x453 = (((x439 + x444) + x447) + x452);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x453);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x454 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x455 = (((x454 * (x448 * x451)) - (x449 * x451)) - ((x443 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 2), count._super), 0)) * x451));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x455 - (x448 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x456 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x457 = (x456 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x458 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 4), count._super), 0) * inv_0(x457));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), (x453 + x458));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x459 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x460 = ((x459 * x457) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 4), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x460, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x461 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x461, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 3), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x462 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x463 = (x462 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x464 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg1.count._super), 0) * inv_0(x463));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x465 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x464);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x466 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x467 = (x466 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x468 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg2.count._super), 0) * inv_0(x467));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x469 = (x463 * x467);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x470 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg1.count._super), 0) * x467);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x471 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x472 = (x471 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x473 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x472));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x474 = ((x465 + x468) + x473);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x474);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x475 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x476 = (((x475 * (x469 * x472)) - (x470 * x472)) - ((x463 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg2.count._super), 0)) * x472));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x476 - (x469 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x477 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x478 = (x477 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x479 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x478));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x480 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x481 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x482 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x483 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x484 = (((x480 + x481) + x482) + x483);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x485 = (x484 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x486 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x485));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x487 = (x478 * x485);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x488 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.med14.arg.count._super), 0) * x485);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x489 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x490 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x491 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x492 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x493 = (((x489 + x490) + x491) + x492);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x494 = (x493 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x495 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x494));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x496 = (((x474 + x479) + x486) + x495);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x496);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x497 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x498 = (((x497 * (x487 * x494)) - (x488 * x494)) - ((x478 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x494));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x498 - (x487 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x499 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x500 = (x499 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x501 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x500));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x502 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), addr._super), 0));
ExtVal x503 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), cycle._super), 0));
ExtVal x504 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataLow._super), 0));
ExtVal x505 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x506 = (((x502 + x503) + x504) + x505);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x507 = (x506 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x508 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0) * inv_0(x507));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x509 = (x500 * x507);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x510 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst._0._0.arg.count._super), 0) * x507);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x511 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), addr._super), 0));
ExtVal x512 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), cycle._super), 0));
ExtVal x513 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataLow._super), 0));
ExtVal x514 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x515 = (((x511 + x512) + x513) + x514);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x516 = (x515 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x517 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * inv_0(x516));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x518 = (((x496 + x501) + x508) + x517);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x518);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x519 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x520 = (((x519 * (x509 * x516)) - (x510 * x516)) - ((x500 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0)) * x516));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x520 - (x509 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x521 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), addr._super), 0));
ExtVal x522 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), cycle._super), 0));
ExtVal x523 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataLow._super), 0));
ExtVal x524 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x525 = (((x521 + x522) + x523) + x524);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x526 = (x525 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x527 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * inv_0(x526));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x528 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), addr._super), 0));
ExtVal x529 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), cycle._super), 0));
ExtVal x530 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataLow._super), 0));
ExtVal x531 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x532 = (((x528 + x529) + x530) + x531);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x533 = (x532 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x534 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0) * inv_0(x533));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x535 = (x526 * x533);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x536 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * x533);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x537 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x538 = (x537 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x539 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * inv_0(x538));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x540 = (((x518 + x527) + x534) + x539);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x540);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x541 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x542 = (((x541 * (x535 * x538)) - (x536 * x538)) - ((x526 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0)) * x538));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x542 - (x535 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x543 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x544 = (x543 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x545 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * inv_0(x544));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x546 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x547 = (x546 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x548 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 0), count._super), 0) * inv_0(x547));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x549 = (x544 * x547);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x550 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * x547);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x551 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x552 = (x551 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x553 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 1), count._super), 0) * inv_0(x552));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x554 = (((x540 + x545) + x548) + x553);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x554);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x555 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x556 = (((x555 * (x549 * x552)) - (x550 * x552)) - ((x544 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 0), count._super), 0)) * x552));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x556 - (x549 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x557 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x558 = (x557 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x559 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 2), count._super), 0) * inv_0(x558));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x560 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x561 = (x560 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x562 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 3), count._super), 0) * inv_0(x561));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x563 = (x558 * x561);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x564 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 2), count._super), 0) * x561);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x565 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x566 = (x565 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x567 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 4), count._super), 0) * inv_0(x566));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x568 = (((x554 + x559) + x562) + x567);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x568);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x569 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x570 = (((x569 * (x563 * x566)) - (x564 * x566)) - ((x558 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 3), count._super), 0)) * x566));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x570 - (x563 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x571 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x572 = (x571 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x573 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 5), count._super), 0) * inv_0(x572));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x574 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x575 = (x574 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x576 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 0), count._super), 0) * inv_0(x575));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x577 = (x572 * x575);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x578 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 5), count._super), 0) * x575);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x579 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x580 = (x579 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x581 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 1), count._super), 0) * inv_0(x580));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x582 = (((x568 + x573) + x576) + x581);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x582);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x583 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x584 = (((x583 * (x577 * x580)) - (x578 * x580)) - ((x572 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 0), count._super), 0)) * x580));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x584 - (x577 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x585 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x586 = (x585 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x587 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 2), count._super), 0) * inv_0(x586));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x588 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x589 = (x588 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x590 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 3), count._super), 0) * inv_0(x589));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x591 = (x586 * x589);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x592 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 2), count._super), 0) * x589);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x593 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x594 = (x593 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x595 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 4), count._super), 0) * inv_0(x594));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x596 = (((x582 + x587) + x590) + x595);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x596);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x597 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x598 = (((x597 * (x591 * x594)) - (x592 * x594)) - ((x586 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 3), count._super), 0)) * x594));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x598 - (x591 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x599 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x600 = (x599 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x601 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 5), count._super), 0) * inv_0(x600));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x602 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x603 = (x602 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x604 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 6), count._super), 0) * inv_0(x603));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x605 = (x600 * x603);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x606 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 5), count._super), 0) * x603);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x607 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x608 = (x607 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x609 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 7), count._super), 0) * inv_0(x608));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x610 = (((x596 + x601) + x604) + x609);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x610);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x611 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x612 = (((x611 * (x605 * x608)) - (x606 * x608)) - ((x600 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 6), count._super), 0)) * x608));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x612 - (x605 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 7), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x613 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x614 = (x613 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x615 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 8), count._super), 0) * inv_0(x614));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x616 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x617 = (x616 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x618 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 9), count._super), 0) * inv_0(x617));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x619 = (x614 * x617);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x620 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 8), count._super), 0) * x617);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x621 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x622 = (x621 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x623 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 10), count._super), 0) * inv_0(x622));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x624 = (((x610 + x615) + x618) + x623);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x624);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x625 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x626 = (((x625 * (x619 * x622)) - (x620 * x622)) - ((x614 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 9), count._super), 0)) * x622));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x626 - (x619 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 10), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x627 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x628 = (x627 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x629 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 11), count._super), 0) * inv_0(x628));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x630 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x631 = (x630 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x632 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 12), count._super), 0) * inv_0(x631));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x633 = (x628 * x631);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x634 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 11), count._super), 0) * x631);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x635 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.addr._super), 0));
ExtVal x636 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.cycle._super), 0));
ExtVal x637 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x638 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x639 = (((x635 + x636) + x637) + x638);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x640 = (x639 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x641 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.count._super), 0) * inv_0(x640));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x642 = (((x624 + x629) + x632) + x641);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x642);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x643 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x644 = (((x643 * (x633 * x640)) - (x634 * x640)) - ((x628 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 12), count._super), 0)) * x640));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x644 - (x633 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x645 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.addr._super), 0));
ExtVal x646 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.cycle._super), 0));
ExtVal x647 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.dataLow._super), 0));
ExtVal x648 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x649 = (((x645 + x646) + x647) + x648);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x650 = (x649 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x651 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.count._super), 0) * inv_0(x650));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x652 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x653 = (x652 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x654 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0._0._0.arg.count._super), 0) * inv_0(x653));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x655 = (x650 * x653);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x656 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.count._super), 0) * x653);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x657 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x658 = (x657 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x659 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.low16.arg.count._super), 0) * inv_0(x658));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x660 = (((x642 + x651) + x654) + x659);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x660);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x661 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x662 = (((x661 * (x655 * x658)) - (x656 * x658)) - ((x650 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0._0._0.arg.count._super), 0)) * x658));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x662 - (x655 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x663 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x664 = (x663 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x665 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.high16.arg.count._super), 0) * inv_0(x664));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), (x660 + x665));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x666 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x667 = ((x666 * x664) - LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.high16.arg.count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x667, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x668 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x668, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 4), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x669 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x670 = (x669 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x671 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg1.count._super), 0) * inv_0(x670));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x672 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x671);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x673 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x674 = (x673 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x675 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg2.count._super), 0) * inv_0(x674));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x676 = (x670 * x674);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x677 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg1.count._super), 0) * x674);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x678 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x679 = (x678 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x680 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x679));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x681 = ((x672 + x675) + x680);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x681);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x682 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x683 = (((x682 * (x676 * x679)) - (x677 * x679)) - ((x670 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg2.count._super), 0)) * x679));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x683 - (x676 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x684 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x685 = (x684 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x686 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x685));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x687 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x688 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x689 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x690 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x691 = (((x687 + x688) + x689) + x690);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x692 = (x691 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x693 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x692));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x694 = (x685 * x692);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x695 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.med14.arg.count._super), 0) * x692);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x696 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x697 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x698 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x699 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x700 = (((x696 + x697) + x698) + x699);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x701 = (x700 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x702 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x701));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x703 = (((x681 + x686) + x693) + x702);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x703);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x704 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x705 = (((x704 * (x694 * x701)) - (x695 * x701)) - ((x685 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x701));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x705 - (x694 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x706 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x707 = (x706 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x708 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x707));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x709 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), addr._super), 0));
ExtVal x710 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), cycle._super), 0));
ExtVal x711 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataLow._super), 0));
ExtVal x712 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x713 = (((x709 + x710) + x711) + x712);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x714 = (x713 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x715 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0) * inv_0(x714));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x716 = (x707 * x714);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x717 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst._0._0.arg.count._super), 0) * x714);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x718 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), addr._super), 0));
ExtVal x719 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), cycle._super), 0));
ExtVal x720 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataLow._super), 0));
ExtVal x721 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x722 = (((x718 + x719) + x720) + x721);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x723 = (x722 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x724 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * inv_0(x723));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x725 = (((x703 + x708) + x715) + x724);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x725);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x726 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x727 = (((x726 * (x716 * x723)) - (x717 * x723)) - ((x707 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0)) * x723));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x727 - (x716 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x728 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), addr._super), 0));
ExtVal x729 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), cycle._super), 0));
ExtVal x730 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataLow._super), 0));
ExtVal x731 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x732 = (((x728 + x729) + x730) + x731);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x733 = (x732 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x734 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * inv_0(x733));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x735 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), addr._super), 0));
ExtVal x736 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), cycle._super), 0));
ExtVal x737 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataLow._super), 0));
ExtVal x738 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x739 = (((x735 + x736) + x737) + x738);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x740 = (x739 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x741 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0) * inv_0(x740));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x742 = (x733 * x740);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x743 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * x740);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x744 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x745 = (x744 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x746 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * inv_0(x745));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x747 = (((x725 + x734) + x741) + x746);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x747);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x748 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x749 = (((x748 * (x742 * x745)) - (x743 * x745)) - ((x733 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0)) * x745));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x749 - (x742 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x750 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x751 = (x750 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x752 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * inv_0(x751));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x753 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x754 = (x753 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x755 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 0), count._super), 0) * inv_0(x754));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x756 = (x751 * x754);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x757 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * x754);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x758 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x759 = (x758 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x760 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 1), count._super), 0) * inv_0(x759));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x761 = (((x747 + x752) + x755) + x760);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x761);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x762 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x763 = (((x762 * (x756 * x759)) - (x757 * x759)) - ((x751 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 0), count._super), 0)) * x759));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x763 - (x756 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x764 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x765 = (x764 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x766 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 2), count._super), 0) * inv_0(x765));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x767 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x768 = (x767 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x769 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 3), count._super), 0) * inv_0(x768));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x770 = (x765 * x768);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x771 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 2), count._super), 0) * x768);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x772 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x773 = (x772 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x774 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 4), count._super), 0) * inv_0(x773));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x775 = (((x761 + x766) + x769) + x774);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x775);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x776 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x777 = (((x776 * (x770 * x773)) - (x771 * x773)) - ((x765 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 3), count._super), 0)) * x773));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x777 - (x770 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x778 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x779 = (x778 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x780 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 5), count._super), 0) * inv_0(x779));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x781 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x782 = (x781 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x783 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 6), count._super), 0) * inv_0(x782));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x784 = (x779 * x782);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x785 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 5), count._super), 0) * x782);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x786 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x787 = (x786 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x788 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 7), count._super), 0) * inv_0(x787));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x789 = (((x775 + x780) + x783) + x788);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x789);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x790 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x791 = (((x790 * (x784 * x787)) - (x785 * x787)) - ((x779 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 6), count._super), 0)) * x787));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x791 - (x784 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 7), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x792 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x793 = (x792 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x794 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 8), count._super), 0) * inv_0(x793));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x795 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x796 = (x795 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x797 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 9), count._super), 0) * inv_0(x796));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x798 = (x793 * x796);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x799 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 8), count._super), 0) * x796);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x800 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x801 = (x800 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x802 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 10), count._super), 0) * inv_0(x801));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x803 = (((x789 + x794) + x797) + x802);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x803);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x804 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x805 = (((x804 * (x798 * x801)) - (x799 * x801)) - ((x793 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 9), count._super), 0)) * x801));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x805 - (x798 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 10), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x806 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x807 = (x806 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x808 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 11), count._super), 0) * inv_0(x807));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x809 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x810 = (x809 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x811 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 12), count._super), 0) * inv_0(x810));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x812 = (x807 * x810);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x813 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 11), count._super), 0) * x810);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x814 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x815 = (x814 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x816 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 13), count._super), 0) * inv_0(x815));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x817 = (((x803 + x808) + x811) + x816);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x817);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x818 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x819 = (((x818 * (x812 * x815)) - (x813 * x815)) - ((x807 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 12), count._super), 0)) * x815));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x819 - (x812 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 13), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x820 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x821 = (x820 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x822 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 14), count._super), 0) * inv_0(x821));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x823 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x824 = (x823 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x825 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 15), count._super), 0) * inv_0(x824));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x826 = (x821 * x824);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x827 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 14), count._super), 0) * x824);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x828 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x829 = (x828 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x830 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 0), count._super), 0) * inv_0(x829));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x831 = (((x817 + x822) + x825) + x830);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x831);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x832 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x833 = (((x832 * (x826 * x829)) - (x827 * x829)) - ((x821 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 15), count._super), 0)) * x829));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x833 - (x826 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x834 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x835 = (x834 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x836 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 1), count._super), 0) * inv_0(x835));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x837 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x838 = (x837 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x839 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 2), count._super), 0) * inv_0(x838));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x840 = (x835 * x838);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x841 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 1), count._super), 0) * x838);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x842 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x843 = (x842 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x844 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 3), count._super), 0) * inv_0(x843));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x845 = (((x831 + x836) + x839) + x844);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x845);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x846 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x847 = (((x846 * (x840 * x843)) - (x841 * x843)) - ((x835 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 2), count._super), 0)) * x843));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x847 - (x840 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x848 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x849 = (x848 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x850 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 4), count._super), 0) * inv_0(x849));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x851 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x852 = (x851 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x853 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 5), count._super), 0) * inv_0(x852));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x854 = (x849 * x852);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x855 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 4), count._super), 0) * x852);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x856 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x857 = (x856 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x858 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 6), count._super), 0) * inv_0(x857));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x859 = (((x845 + x850) + x853) + x858);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x859);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x860 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x861 = (((x860 * (x854 * x857)) - (x855 * x857)) - ((x849 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 5), count._super), 0)) * x857));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x861 - (x854 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x862 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x863 = (x862 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x864 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 7), count._super), 0) * inv_0(x863));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x865 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x866 = (x865 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x867 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 8), count._super), 0) * inv_0(x866));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x868 = (x863 * x866);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x869 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 7), count._super), 0) * x866);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x870 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x871 = (x870 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x872 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 9), count._super), 0) * inv_0(x871));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x873 = (((x859 + x864) + x867) + x872);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), x873);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x874 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x875 = (((x874 * (x868 * x871)) - (x869 * x871)) - ((x863 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 8), count._super), 0)) * x871));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x875 - (x868 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x876 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x877 = (x876 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x878 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 10), count._super), 0) * inv_0(x877));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x879 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x880 = (x879 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x881 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 11), count._super), 0) * inv_0(x880));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x882 = (x877 * x880);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x883 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 10), count._super), 0) * x880);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x884 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x885 = (x884 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x886 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 12), count._super), 0) * inv_0(x885));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x887 = (((x873 + x878) + x881) + x886);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), x887);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x888 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x889 = (((x888 * (x882 * x885)) - (x883 * x885)) - ((x877 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 11), count._super), 0)) * x885));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x889 - (x882 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x890 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.addr._super), 0));
ExtVal x891 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.cycle._super), 0));
ExtVal x892 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x893 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x894 = (((x890 + x891) + x892) + x893);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x895 = (x894 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x896 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.count._super), 0) * inv_0(x895));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x897 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.addr._super), 0));
ExtVal x898 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.cycle._super), 0));
ExtVal x899 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.dataLow._super), 0));
ExtVal x900 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x901 = (((x897 + x898) + x899) + x900);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x902 = (x901 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x903 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.count._super), 0) * inv_0(x902));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x904 = (x895 * x902);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x905 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.count._super), 0) * x902);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x906 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x907 = (x906 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x908 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0._0._0.arg.count._super), 0) * inv_0(x907));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x909 = (((x887 + x896) + x903) + x908);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), x909);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x910 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x911 = (((x910 * (x904 * x907)) - (x905 * x907)) - ((x895 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.count._super), 0)) * x907));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x911 - (x904 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0._0._0.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x912 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x913 = (x912 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x914 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.low16.arg.count._super), 0) * inv_0(x913));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x915 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x916 = (x915 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x917 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.high16.arg.count._super), 0) * inv_0(x916));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x918 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.low16.arg.count._super), 0) * x916);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), ((x909 + x914) + x917));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x919 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x920 = (((x919 * (x913 * x916)) - x918) - (x913 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x920, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x921 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x921, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 5), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x922 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x923 = (x922 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x924 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg1.count._super), 0) * inv_0(x923));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x925 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x924);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x926 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x927 = (x926 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x928 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg2.count._super), 0) * inv_0(x927));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x929 = (x923 * x927);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x930 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg1.count._super), 0) * x927);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x931 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x932 = (x931 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x933 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x932));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x934 = ((x925 + x928) + x933);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x934);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x935 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x936 = (((x935 * (x929 * x932)) - (x930 * x932)) - ((x923 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg2.count._super), 0)) * x932));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x936 - (x929 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x937 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x938 = (x937 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x939 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x938));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x940 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x941 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x942 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x943 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x944 = (((x940 + x941) + x942) + x943);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x945 = (x944 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x946 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x945));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x947 = (x938 * x945);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x948 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.med14.arg.count._super), 0) * x945);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x949 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x950 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x951 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x952 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x953 = (((x949 + x950) + x951) + x952);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x954 = (x953 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x955 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x954));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x956 = (((x934 + x939) + x946) + x955);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x956);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x957 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x958 = (((x957 * (x947 * x954)) - (x948 * x954)) - ((x938 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x954));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x958 - (x947 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x959 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x960 = (x959 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x961 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x960));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x962 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x963 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x964 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x965 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x966 = (((x962 + x963) + x964) + x965);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x967 = (x966 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x968 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x967));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x969 = (x960 * x967);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x970 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst._0._0.arg.count._super), 0) * x967);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x971 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x972 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x973 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x974 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x975 = (((x971 + x972) + x973) + x974);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x976 = (x975 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x977 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x976));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x978 = (((x956 + x961) + x968) + x977);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x978);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x979 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x980 = (((x979 * (x969 * x976)) - (x970 * x976)) - ((x960 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.count._super), 0)) * x976));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x980 - (x969 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x981 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x982 = (x981 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x983 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x982));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x984 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x985 = (x984 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x986 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.low16.arg.count._super), 0) * inv_0(x985));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x987 = (x982 * x985);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x988 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super._0._0.arg.count._super), 0) * x985);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x989 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x990 = (x989 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x991 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.high16.arg.count._super), 0) * inv_0(x990));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x992 = (((x978 + x983) + x986) + x991);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x992);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x993 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x994 = (((x993 * (x987 * x990)) - (x988 * x990)) - ((x982 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.low16.arg.count._super), 0)) * x990));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x994 - (x987 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.high16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x995 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x996 = (x995 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x997 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.upperDiff.arg.count._super), 0) * inv_0(x996));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x998 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x999 = (x998 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1000 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.med14.arg.count._super), 0) * inv_0(x999));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1001 = (x996 * x999);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1002 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.upperDiff.arg.count._super), 0) * x999);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1003 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.addr._super), 0));
ExtVal x1004 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.cycle._super), 0));
ExtVal x1005 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.dataLow._super), 0));
ExtVal x1006 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1007 = (((x1003 + x1004) + x1005) + x1006);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1008 = (x1007 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1009 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.count._super), 0) * inv_0(x1008));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1010 = (((x992 + x997) + x1000) + x1009);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1010);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1011 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1012 = (((x1011 * (x1001 * x1008)) - (x1002 * x1008)) - ((x996 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.med14.arg.count._super), 0)) * x1008));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1012 - (x1001 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1013 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.addr._super), 0));
ExtVal x1014 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.cycle._super), 0));
ExtVal x1015 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.dataLow._super), 0));
ExtVal x1016 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1017 = (((x1013 + x1014) + x1015) + x1016);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1018 = (x1017 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1019 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.count._super), 0) * inv_0(x1018));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1020 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1021 = (x1020 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1022 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data._0._0.arg.count._super), 0) * inv_0(x1021));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1023 = (x1018 * x1021);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1024 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.count._super), 0) * x1021);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1025 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1026 = (x1025 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1027 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 0), count._super), 0) * inv_0(x1026));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1028 = (((x1010 + x1019) + x1022) + x1027);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1028);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1029 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1030 = (((x1029 * (x1023 * x1026)) - (x1024 * x1026)) - ((x1018 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data._0._0.arg.count._super), 0)) * x1026));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1030 - (x1023 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1031 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1032 = (x1031 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1033 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 1), count._super), 0) * inv_0(x1032));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1034 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1035 = (x1034 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1036 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 2), count._super), 0) * inv_0(x1035));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1037 = (x1032 * x1035);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1038 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 1), count._super), 0) * x1035);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1039 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1040 = (x1039 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1041 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU16), 0), count._super), 0) * inv_0(x1040));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1042 = (((x1028 + x1033) + x1036) + x1041);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1042);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1043 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1044 = (((x1043 * (x1037 * x1040)) - (x1038 * x1040)) - ((x1032 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 2), count._super), 0)) * x1040));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1044 - (x1037 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1045 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.addr._super), 0));
ExtVal x1046 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.cycle._super), 0));
ExtVal x1047 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x1048 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1049 = (((x1045 + x1046) + x1047) + x1048);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1050 = (x1049 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1051 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.count._super), 0) * inv_0(x1050));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1052 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.addr._super), 0));
ExtVal x1053 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.cycle._super), 0));
ExtVal x1054 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.dataLow._super), 0));
ExtVal x1055 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1056 = (((x1052 + x1053) + x1054) + x1055);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1057 = (x1056 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1058 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.count._super), 0) * inv_0(x1057));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1059 = (x1050 * x1057);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1060 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.count._super), 0) * x1057);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1061 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1062 = (x1061 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1063 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0._0._0.arg.count._super), 0) * inv_0(x1062));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1064 = (((x1042 + x1051) + x1058) + x1063);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1064);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1065 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1066 = (((x1065 * (x1059 * x1062)) - (x1060 * x1062)) - ((x1050 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.count._super), 0)) * x1062));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1066 - (x1059 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0._0._0.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1067 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1068 = (x1067 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1069 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.low16.arg.count._super), 0) * inv_0(x1068));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1070 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1071 = (x1070 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1072 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.high16.arg.count._super), 0) * inv_0(x1071));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1073 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.low16.arg.count._super), 0) * x1071);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), ((x1064 + x1069) + x1072));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1074 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1075 = (((x1074 * (x1068 * x1071)) - x1073) - (x1068 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1075, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x1076 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x1076, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 6), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1077 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1078 = (x1077 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1079 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg1.count._super), 0) * inv_0(x1078));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1080 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1079);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1081 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1082 = (x1081 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1083 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg2.count._super), 0) * inv_0(x1082));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1084 = (x1078 * x1082);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1085 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg1.count._super), 0) * x1082);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1086 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1087 = (x1086 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1088 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x1087));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1089 = ((x1080 + x1083) + x1088);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1089);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1090 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1091 = (((x1090 * (x1084 * x1087)) - (x1085 * x1087)) - ((x1078 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg2.count._super), 0)) * x1087));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1091 - (x1084 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1092 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1093 = (x1092 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1094 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x1093));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1095 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x1096 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x1097 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x1098 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1099 = (((x1095 + x1096) + x1097) + x1098);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1100 = (x1099 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1101 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x1100));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1102 = (x1093 * x1100);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1103 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.med14.arg.count._super), 0) * x1100);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1104 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x1105 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x1106 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x1107 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1108 = (((x1104 + x1105) + x1106) + x1107);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1109 = (x1108 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1110 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x1109));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1111 = (((x1089 + x1094) + x1101) + x1110);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1111);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1112 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1113 = (((x1112 * (x1102 * x1109)) - (x1103 * x1109)) - ((x1093 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x1109));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1113 - (x1102 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1114 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1115 = (x1114 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1116 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x1115));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1117 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), addr._super), 0));
ExtVal x1118 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), cycle._super), 0));
ExtVal x1119 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataLow._super), 0));
ExtVal x1120 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1121 = (((x1117 + x1118) + x1119) + x1120);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1122 = (x1121 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1123 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0) * inv_0(x1122));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1124 = (x1115 * x1122);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1125 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst._0._0.arg.count._super), 0) * x1122);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1126 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), addr._super), 0));
ExtVal x1127 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), cycle._super), 0));
ExtVal x1128 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataLow._super), 0));
ExtVal x1129 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1130 = (((x1126 + x1127) + x1128) + x1129);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1131 = (x1130 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1132 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0) * inv_0(x1131));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1133 = (((x1111 + x1116) + x1123) + x1132);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1133);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1134 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1135 = (((x1134 * (x1124 * x1131)) - (x1125 * x1131)) - ((x1115 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 0), count._super), 0)) * x1131));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1135 - (x1124 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1136 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), addr._super), 0));
ExtVal x1137 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), cycle._super), 0));
ExtVal x1138 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataLow._super), 0));
ExtVal x1139 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1140 = (((x1136 + x1137) + x1138) + x1139);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1141 = (x1140 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1142 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * inv_0(x1141));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1143 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), addr._super), 0));
ExtVal x1144 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), cycle._super), 0));
ExtVal x1145 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataLow._super), 0));
ExtVal x1146 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1147 = (((x1143 + x1144) + x1145) + x1146);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1148 = (x1147 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1149 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0) * inv_0(x1148));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1150 = (x1141 * x1148);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1151 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 2), count._super), 0) * x1148);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1152 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1153 = (x1152 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1154 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0) * inv_0(x1153));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1155 = (((x1133 + x1142) + x1149) + x1154);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1155);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1156 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1157 = (((x1156 * (x1150 * x1153)) - (x1151 * x1153)) - ((x1141 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.memoryArg), 3), count._super), 0)) * x1153));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1157 - (x1150 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1158 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1159 = (x1158 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1160 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * inv_0(x1159));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1161 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1162 = (x1161 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1163 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.low16.arg.count._super), 0) * inv_0(x1162));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1164 = (x1159 * x1162);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1165 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6.input.sourceRegs._arguments_ReadSourceRegsSourceRegs.cycleArg), 1), count._super), 0) * x1162);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1166 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1167 = (x1166 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1168 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.high16.arg.count._super), 0) * inv_0(x1167));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1169 = (((x1155 + x1160) + x1163) + x1168);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1169);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1170 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1171 = (((x1170 * (x1164 * x1167)) - (x1165 * x1167)) - ((x1159 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.low16.arg.count._super), 0)) * x1167));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1171 - (x1164 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.high16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1172 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1173 = (x1172 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1174 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.upperDiff.arg.count._super), 0) * inv_0(x1173));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1175 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1176 = (x1175 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1177 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.med14.arg.count._super), 0) * inv_0(x1176));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1178 = (x1173 * x1176);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1179 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.upperDiff.arg.count._super), 0) * x1176);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1180 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.addr._super), 0));
ExtVal x1181 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.cycle._super), 0));
ExtVal x1182 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.dataLow._super), 0));
ExtVal x1183 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1184 = (((x1180 + x1181) + x1182) + x1183);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1185 = (x1184 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1186 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.count._super), 0) * inv_0(x1185));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1187 = (((x1169 + x1174) + x1177) + x1186);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1187);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1188 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1189 = (((x1188 * (x1178 * x1185)) - (x1179 * x1185)) - ((x1173 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.med14.arg.count._super), 0)) * x1185));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1189 - (x1178 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1190 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.addr._super), 0));
ExtVal x1191 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.cycle._super), 0));
ExtVal x1192 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.dataLow._super), 0));
ExtVal x1193 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1194 = (((x1190 + x1191) + x1192) + x1193);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1195 = (x1194 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1196 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.count._super), 0) * inv_0(x1195));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1197 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1198 = (x1197 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1199 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data._0._0.arg.count._super), 0) * inv_0(x1198));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1200 = (x1195 * x1198);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1201 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.count._super), 0) * x1198);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1202 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1203 = (x1202 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1204 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 0), count._super), 0) * inv_0(x1203));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1205 = (((x1187 + x1196) + x1199) + x1204);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1205);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1206 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1207 = (((x1206 * (x1200 * x1203)) - (x1201 * x1203)) - ((x1195 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data._0._0.arg.count._super), 0)) * x1203));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1207 - (x1200 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1208 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1209 = (x1208 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1210 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 1), count._super), 0) * inv_0(x1209));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1211 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1212 = (x1211 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1213 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 2), count._super), 0) * inv_0(x1212));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1214 = (x1209 * x1212);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1215 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 1), count._super), 0) * x1212);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1216 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1217 = (x1216 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1218 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 3), count._super), 0) * inv_0(x1217));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1219 = (((x1205 + x1210) + x1213) + x1218);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1219);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1220 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1221 = (((x1220 * (x1214 * x1217)) - (x1215 * x1217)) - ((x1209 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 2), count._super), 0)) * x1217));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1221 - (x1214 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1222 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.addr._super), 0));
ExtVal x1223 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.cycle._super), 0));
ExtVal x1224 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x1225 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1226 = (((x1222 + x1223) + x1224) + x1225);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1227 = (x1226 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1228 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.count._super), 0) * inv_0(x1227));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1229 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.addr._super), 0));
ExtVal x1230 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.cycle._super), 0));
ExtVal x1231 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.dataLow._super), 0));
ExtVal x1232 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1233 = (((x1229 + x1230) + x1231) + x1232);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1234 = (x1233 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1235 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.count._super), 0) * inv_0(x1234));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1236 = (x1227 * x1234);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1237 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.count._super), 0) * x1234);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1238 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1239 = (x1238 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1240 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0._0._0.arg.count._super), 0) * inv_0(x1239));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1241 = (((x1219 + x1228) + x1235) + x1240);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x1241);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1242 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1243 = (((x1242 * (x1236 * x1239)) - (x1237 * x1239)) - ((x1227 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.count._super), 0)) * x1239));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1243 - (x1236 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0._0._0.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1244 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1245 = (x1244 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1246 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.low16.arg.count._super), 0) * inv_0(x1245));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1247 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1248 = (x1247 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1249 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.high16.arg.count._super), 0) * inv_0(x1248));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1250 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.low16.arg.count._super), 0) * x1248);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), ((x1241 + x1246) + x1249));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1251 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1252 = (((x1251 * (x1245 * x1248)) - x1250) - (x1245 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1252, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x1253 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x1253, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 7), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1254 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1255 = (x1254 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1256 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg1.count._super), 0) * inv_0(x1255));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1257 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1256);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1258 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1259 = (x1258 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1260 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg2.count._super), 0) * inv_0(x1259));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1261 = (x1255 * x1259);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1262 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg1.count._super), 0) * x1259);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1263 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), addr._super), 0));
ExtVal x1264 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), cycle._super), 0));
ExtVal x1265 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), dataLow._super), 0));
ExtVal x1266 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1267 = (((x1263 + x1264) + x1265) + x1266);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1268 = (x1267 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1269 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), count._super), 0) * inv_0(x1268));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1270 = ((x1257 + x1260) + x1269);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1270);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1271 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1272 = (((x1271 * (x1261 * x1268)) - (x1262 * x1268)) - ((x1255 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg2.count._super), 0)) * x1268));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1272 - (x1261 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1273 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), addr._super), 0));
ExtVal x1274 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), cycle._super), 0));
ExtVal x1275 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), dataLow._super), 0));
ExtVal x1276 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1277 = (((x1273 + x1274) + x1275) + x1276);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1278 = (x1277 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1279 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), count._super), 0) * inv_0(x1278));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1280 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), addr._super), 0));
ExtVal x1281 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), cycle._super), 0));
ExtVal x1282 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), dataLow._super), 0));
ExtVal x1283 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1284 = (((x1280 + x1281) + x1282) + x1283);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1285 = (x1284 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1286 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), count._super), 0) * inv_0(x1285));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1287 = (x1278 * x1285);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1288 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), count._super), 0) * x1285);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1289 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), addr._super), 0));
ExtVal x1290 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), cycle._super), 0));
ExtVal x1291 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), dataLow._super), 0));
ExtVal x1292 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1293 = (((x1289 + x1290) + x1291) + x1292);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1294 = (x1293 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1295 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), count._super), 0) * inv_0(x1294));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1296 = (((x1270 + x1279) + x1286) + x1295);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1296);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1297 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1298 = (((x1297 * (x1287 * x1294)) - (x1288 * x1294)) - ((x1278 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), count._super), 0)) * x1294));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1298 - (x1287 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1299 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), addr._super), 0));
ExtVal x1300 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), cycle._super), 0));
ExtVal x1301 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), dataLow._super), 0));
ExtVal x1302 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1303 = (((x1299 + x1300) + x1301) + x1302);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1304 = (x1303 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1305 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), count._super), 0) * inv_0(x1304));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1306 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), addr._super), 0));
ExtVal x1307 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), cycle._super), 0));
ExtVal x1308 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), dataLow._super), 0));
ExtVal x1309 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1310 = (((x1306 + x1307) + x1308) + x1309);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1311 = (x1310 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1312 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), count._super), 0) * inv_0(x1311));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1313 = (x1304 * x1311);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1314 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), count._super), 0) * x1311);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1315 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), addr._super), 0));
ExtVal x1316 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), cycle._super), 0));
ExtVal x1317 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), dataLow._super), 0));
ExtVal x1318 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1319 = (((x1315 + x1316) + x1317) + x1318);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1320 = (x1319 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1321 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), count._super), 0) * inv_0(x1320));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1322 = (((x1296 + x1305) + x1312) + x1321);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1322);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1323 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1324 = (((x1323 * (x1313 * x1320)) - (x1314 * x1320)) - ((x1304 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), count._super), 0)) * x1320));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1324 - (x1313 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1325 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), addr._super), 0));
ExtVal x1326 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), cycle._super), 0));
ExtVal x1327 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), dataLow._super), 0));
ExtVal x1328 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1329 = (((x1325 + x1326) + x1327) + x1328);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1330 = (x1329 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1331 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), count._super), 0) * inv_0(x1330));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1332 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), addr._super), 0));
ExtVal x1333 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), cycle._super), 0));
ExtVal x1334 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), dataLow._super), 0));
ExtVal x1335 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1336 = (((x1332 + x1333) + x1334) + x1335);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1337 = (x1336 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1338 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), count._super), 0) * inv_0(x1337));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1339 = (x1330 * x1337);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1340 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), count._super), 0) * x1337);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1341 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), addr._super), 0));
ExtVal x1342 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), cycle._super), 0));
ExtVal x1343 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), dataLow._super), 0));
ExtVal x1344 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1345 = (((x1341 + x1342) + x1343) + x1344);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1346 = (x1345 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1347 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), count._super), 0) * inv_0(x1346));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1348 = (((x1322 + x1331) + x1338) + x1347);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1348);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1349 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1350 = (((x1349 * (x1339 * x1346)) - (x1340 * x1346)) - ((x1330 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), count._super), 0)) * x1346));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1350 - (x1339 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1351 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), addr._super), 0));
ExtVal x1352 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), cycle._super), 0));
ExtVal x1353 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), dataLow._super), 0));
ExtVal x1354 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1355 = (((x1351 + x1352) + x1353) + x1354);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1356 = (x1355 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1357 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), count._super), 0) * inv_0(x1356));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1358 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), addr._super), 0));
ExtVal x1359 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), cycle._super), 0));
ExtVal x1360 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), dataLow._super), 0));
ExtVal x1361 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1362 = (((x1358 + x1359) + x1360) + x1361);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1363 = (x1362 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1364 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), count._super), 0) * inv_0(x1363));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1365 = (x1356 * x1363);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1366 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), count._super), 0) * x1363);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1367 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), addr._super), 0));
ExtVal x1368 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), cycle._super), 0));
ExtVal x1369 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), dataLow._super), 0));
ExtVal x1370 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1371 = (((x1367 + x1368) + x1369) + x1370);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1372 = (x1371 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1373 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), count._super), 0) * inv_0(x1372));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1374 = (((x1348 + x1357) + x1364) + x1373);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1374);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1375 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1376 = (((x1375 * (x1365 * x1372)) - (x1366 * x1372)) - ((x1356 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), count._super), 0)) * x1372));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1376 - (x1365 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1377 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), addr._super), 0));
ExtVal x1378 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), cycle._super), 0));
ExtVal x1379 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), dataLow._super), 0));
ExtVal x1380 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1381 = (((x1377 + x1378) + x1379) + x1380);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1382 = (x1381 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1383 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), count._super), 0) * inv_0(x1382));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1384 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), addr._super), 0));
ExtVal x1385 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), cycle._super), 0));
ExtVal x1386 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), dataLow._super), 0));
ExtVal x1387 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1388 = (((x1384 + x1385) + x1386) + x1387);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1389 = (x1388 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1390 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), count._super), 0) * inv_0(x1389));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1391 = (x1382 * x1389);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1392 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), count._super), 0) * x1389);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1393 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), addr._super), 0));
ExtVal x1394 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), cycle._super), 0));
ExtVal x1395 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), dataLow._super), 0));
ExtVal x1396 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1397 = (((x1393 + x1394) + x1395) + x1396);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1398 = (x1397 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1399 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), count._super), 0) * inv_0(x1398));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1400 = (((x1374 + x1383) + x1390) + x1399);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1400);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1401 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1402 = (((x1401 * (x1391 * x1398)) - (x1392 * x1398)) - ((x1382 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), count._super), 0)) * x1398));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1402 - (x1391 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1403 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1404 = (x1403 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1405 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 0), count._super), 0) * inv_0(x1404));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1406 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1407 = (x1406 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1408 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 1), count._super), 0) * inv_0(x1407));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1409 = (x1404 * x1407);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1410 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 0), count._super), 0) * x1407);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1411 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1412 = (x1411 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1413 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 2), count._super), 0) * inv_0(x1412));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1414 = (((x1400 + x1405) + x1408) + x1413);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1414);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1415 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1416 = (((x1415 * (x1409 * x1412)) - (x1410 * x1412)) - ((x1404 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 1), count._super), 0)) * x1412));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1416 - (x1409 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1417 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1418 = (x1417 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1419 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 3), count._super), 0) * inv_0(x1418));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1420 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1421 = (x1420 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1422 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 4), count._super), 0) * inv_0(x1421));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1423 = (x1418 * x1421);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1424 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 3), count._super), 0) * x1421);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1425 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 5), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1426 = (x1425 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1427 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 5), count._super), 0) * inv_0(x1426));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1428 = (((x1414 + x1419) + x1422) + x1427);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1428);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1429 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1430 = (((x1429 * (x1423 * x1426)) - (x1424 * x1426)) - ((x1418 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 4), count._super), 0)) * x1426));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1430 - (x1423 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 5), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1431 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 6), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1432 = (x1431 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1433 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 6), count._super), 0) * inv_0(x1432));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1434 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 7), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1435 = (x1434 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1436 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 7), count._super), 0) * inv_0(x1435));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1437 = (x1432 * x1435);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1438 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 6), count._super), 0) * x1435);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1439 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1440 = (x1439 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1441 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 0), count._super), 0) * inv_0(x1440));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1442 = (((x1428 + x1433) + x1436) + x1441);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x1442);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1443 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1444 = (((x1443 * (x1437 * x1440)) - (x1438 * x1440)) - ((x1432 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 7), count._super), 0)) * x1440));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1444 - (x1437 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1445 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1446 = (x1445 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1447 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 1), count._super), 0) * inv_0(x1446));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1448 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1449 = (x1448 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1450 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 2), count._super), 0) * inv_0(x1449));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1451 = (x1446 * x1449);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1452 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 1), count._super), 0) * x1449);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1453 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1454 = (x1453 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1455 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 3), count._super), 0) * inv_0(x1454));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1456 = (((x1442 + x1447) + x1450) + x1455);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x1456);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1457 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1458 = (((x1457 * (x1451 * x1454)) - (x1452 * x1454)) - ((x1446 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 2), count._super), 0)) * x1454));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1458 - (x1451 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1459 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1460 = (x1459 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1461 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 4), count._super), 0) * inv_0(x1460));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1462 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1463 = (x1462 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1464 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 5), count._super), 0) * inv_0(x1463));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1465 = (x1460 * x1463);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1466 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 4), count._super), 0) * x1463);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1467 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1468 = (x1467 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1469 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 6), count._super), 0) * inv_0(x1468));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1470 = (((x1456 + x1461) + x1464) + x1469);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x1470);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1471 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1472 = (((x1471 * (x1465 * x1468)) - (x1466 * x1468)) - ((x1460 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 5), count._super), 0)) * x1468));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1472 - (x1465 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1473 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1474 = (x1473 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1475 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 7), count._super), 0) * inv_0(x1474));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1476 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1477 = (x1476 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1478 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 8), count._super), 0) * inv_0(x1477));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1479 = (x1474 * x1477);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1480 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 7), count._super), 0) * x1477);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1481 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1482 = (x1481 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1483 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 9), count._super), 0) * inv_0(x1482));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1484 = (((x1470 + x1475) + x1478) + x1483);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x1484);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1485 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1486 = (((x1485 * (x1479 * x1482)) - (x1480 * x1482)) - ((x1474 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 8), count._super), 0)) * x1482));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1486 - (x1479 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1487 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1488 = (x1487 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1489 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 10), count._super), 0) * inv_0(x1488));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1490 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1491 = (x1490 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1492 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 11), count._super), 0) * inv_0(x1491));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1493 = (x1488 * x1491);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1494 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 10), count._super), 0) * x1491);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1495 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1496 = (x1495 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1497 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 12), count._super), 0) * inv_0(x1496));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1498 = (((x1484 + x1489) + x1492) + x1497);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), x1498);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1499 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1500 = (((x1499 * (x1493 * x1496)) - (x1494 * x1496)) - ((x1488 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 11), count._super), 0)) * x1496));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1500 - (x1493 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1501 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1502 = (x1501 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1503 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 13), count._super), 0) * inv_0(x1502));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1504 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1505 = (x1504 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1506 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 14), count._super), 0) * inv_0(x1505));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1507 = (x1502 * x1505);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1508 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 13), count._super), 0) * x1505);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1509 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1510 = (x1509 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1511 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 15), count._super), 0) * inv_0(x1510));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1512 = (((x1498 + x1503) + x1506) + x1511);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), x1512);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1513 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1514 = (((x1513 * (x1507 * x1510)) - (x1508 * x1510)) - ((x1502 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 14), count._super), 0)) * x1510));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1514 - (x1507 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1515 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1516 = (x1515 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1517 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 0), count._super), 0) * inv_0(x1516));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1518 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1519 = (x1518 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1520 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 1), count._super), 0) * inv_0(x1519));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1521 = (x1516 * x1519);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1522 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 0), count._super), 0) * x1519);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1523 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1524 = (x1523 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1525 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 2), count._super), 0) * inv_0(x1524));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1526 = (((x1512 + x1517) + x1520) + x1525);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), x1526);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1527 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1528 = (((x1527 * (x1521 * x1524)) - (x1522 * x1524)) - ((x1516 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 1), count._super), 0)) * x1524));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1528 - (x1521 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1529 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1530 = (x1529 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1531 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 3), count._super), 0) * inv_0(x1530));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1532 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1533 = (x1532 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1534 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 4), count._super), 0) * inv_0(x1533));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1535 = (x1530 * x1533);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1536 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 3), count._super), 0) * x1533);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1537 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1538 = (x1537 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1539 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 5), count._super), 0) * inv_0(x1538));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1540 = (((x1526 + x1531) + x1534) + x1539);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), x1540);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1541 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1542 = (((x1541 * (x1535 * x1538)) - (x1536 * x1538)) - ((x1530 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 4), count._super), 0)) * x1538));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1542 - (x1535 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 5), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1543 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1544 = (x1543 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1545 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 6), count._super), 0) * inv_0(x1544));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1546 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1547 = (x1546 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1548 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 7), count._super), 0) * inv_0(x1547));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1549 = (x1544 * x1547);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1550 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 6), count._super), 0) * x1547);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1551 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1552 = (x1551 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1553 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 8), count._super), 0) * inv_0(x1552));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1554 = (((x1540 + x1545) + x1548) + x1553);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), x1554);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1555 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1556 = (((x1555 * (x1549 * x1552)) - (x1550 * x1552)) - ((x1544 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 7), count._super), 0)) * x1552));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1556 - (x1549 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 8), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1557 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1558 = (x1557 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1559 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 9), count._super), 0) * inv_0(x1558));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1560 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1561 = (x1560 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1562 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 10), count._super), 0) * inv_0(x1561));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1563 = (x1558 * x1561);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1564 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 9), count._super), 0) * x1561);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1565 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1566 = (x1565 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1567 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 11), count._super), 0) * inv_0(x1566));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1568 = (((x1554 + x1559) + x1562) + x1567);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), x1568);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1569 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1570 = (((x1569 * (x1563 * x1566)) - (x1564 * x1566)) - ((x1558 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 10), count._super), 0)) * x1566));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1570 - (x1563 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 11), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1571 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1572 = (x1571 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1573 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 12), count._super), 0) * inv_0(x1572));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1574 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1575 = (x1574 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1576 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 13), count._super), 0) * inv_0(x1575));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1577 = (x1572 * x1575);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1578 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 12), count._super), 0) * x1575);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1579 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1580 = (x1579 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1581 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 14), count._super), 0) * inv_0(x1580));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1582 = (((x1568 + x1573) + x1576) + x1581);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 18), x1582);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1583 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 18), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1584 = (((x1583 * (x1577 * x1580)) - (x1578 * x1580)) - ((x1572 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 13), count._super), 0)) * x1580));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1584 - (x1577 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 14), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1585 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1586 = (x1585 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1587 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 15), count._super), 0) * inv_0(x1586));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), (x1582 + x1587));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1588 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 18), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1589 = ((x1588 * x1586) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 15), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1589, "zirgen/dsl/passes/GenerateAccum.cpp:182");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 8), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1590 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1591 = (x1590 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1592 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg1.count._super), 0) * inv_0(x1591));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1593 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1592);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1594 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1595 = (x1594 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1596 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg2.count._super), 0) * inv_0(x1595));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1597 = (x1591 * x1595);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1598 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg1.count._super), 0) * x1595);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1599 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1600 = (x1599 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1601 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x1600));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1602 = ((x1593 + x1596) + x1601);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1602);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1603 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1604 = (((x1603 * (x1597 * x1600)) - (x1598 * x1600)) - ((x1591 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg2.count._super), 0)) * x1600));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1604 - (x1597 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1605 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1606 = (x1605 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1607 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.med14.arg.count._super), 0) * inv_0(x1606));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1608 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), addr._super), 0));
ExtVal x1609 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), cycle._super), 0));
ExtVal x1610 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), dataLow._super), 0));
ExtVal x1611 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1612 = (((x1608 + x1609) + x1610) + x1611);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1613 = (x1612 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1614 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), count._super), 0) * inv_0(x1613));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1615 = (x1606 * x1613);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1616 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.med14.arg.count._super), 0) * x1613);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1617 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), addr._super), 0));
ExtVal x1618 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), cycle._super), 0));
ExtVal x1619 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), dataLow._super), 0));
ExtVal x1620 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1621 = (((x1617 + x1618) + x1619) + x1620);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1622 = (x1621 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1623 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), count._super), 0) * inv_0(x1622));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1624 = (((x1602 + x1607) + x1614) + x1623);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1624);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1625 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1626 = (((x1625 * (x1615 * x1622)) - (x1616 * x1622)) - ((x1606 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), count._super), 0)) * x1622));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1626 - (x1615 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1627 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), addr._super), 0));
ExtVal x1628 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), cycle._super), 0));
ExtVal x1629 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), dataLow._super), 0));
ExtVal x1630 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1631 = (((x1627 + x1628) + x1629) + x1630);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1632 = (x1631 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1633 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), count._super), 0) * inv_0(x1632));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1634 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), addr._super), 0));
ExtVal x1635 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), cycle._super), 0));
ExtVal x1636 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), dataLow._super), 0));
ExtVal x1637 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1638 = (((x1634 + x1635) + x1636) + x1637);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1639 = (x1638 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1640 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), count._super), 0) * inv_0(x1639));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1641 = (x1632 * x1639);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1642 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), count._super), 0) * x1639);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1643 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), addr._super), 0));
ExtVal x1644 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), cycle._super), 0));
ExtVal x1645 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), dataLow._super), 0));
ExtVal x1646 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1647 = (((x1643 + x1644) + x1645) + x1646);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1648 = (x1647 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1649 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), count._super), 0) * inv_0(x1648));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1650 = (((x1624 + x1633) + x1640) + x1649);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1650);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1651 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1652 = (((x1651 * (x1641 * x1648)) - (x1642 * x1648)) - ((x1632 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), count._super), 0)) * x1648));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1652 - (x1641 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1653 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), addr._super), 0));
ExtVal x1654 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), cycle._super), 0));
ExtVal x1655 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), dataLow._super), 0));
ExtVal x1656 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1657 = (((x1653 + x1654) + x1655) + x1656);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1658 = (x1657 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1659 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), count._super), 0) * inv_0(x1658));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1660 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), addr._super), 0));
ExtVal x1661 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), cycle._super), 0));
ExtVal x1662 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), dataLow._super), 0));
ExtVal x1663 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1664 = (((x1660 + x1661) + x1662) + x1663);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1665 = (x1664 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1666 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), count._super), 0) * inv_0(x1665));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1667 = (x1658 * x1665);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1668 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), count._super), 0) * x1665);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1669 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), addr._super), 0));
ExtVal x1670 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), cycle._super), 0));
ExtVal x1671 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), dataLow._super), 0));
ExtVal x1672 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1673 = (((x1669 + x1670) + x1671) + x1672);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1674 = (x1673 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1675 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), count._super), 0) * inv_0(x1674));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1676 = (((x1650 + x1659) + x1666) + x1675);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1676);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1677 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1678 = (((x1677 * (x1667 * x1674)) - (x1668 * x1674)) - ((x1658 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), count._super), 0)) * x1674));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1678 - (x1667 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1679 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1680 = (x1679 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1681 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 0), count._super), 0) * inv_0(x1680));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1682 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1683 = (x1682 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1684 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 1), count._super), 0) * inv_0(x1683));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1685 = (x1680 * x1683);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1686 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 0), count._super), 0) * x1683);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1687 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1688 = (x1687 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1689 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 2), count._super), 0) * inv_0(x1688));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1690 = (((x1676 + x1681) + x1684) + x1689);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1690);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1691 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1692 = (((x1691 * (x1685 * x1688)) - (x1686 * x1688)) - ((x1680 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 1), count._super), 0)) * x1688));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1692 - (x1685 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1693 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1694 = (x1693 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1695 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 3), count._super), 0) * inv_0(x1694));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1696 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1697 = (x1696 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1698 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 0), count._super), 0) * inv_0(x1697));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1699 = (x1694 * x1697);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1700 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 3), count._super), 0) * x1697);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1701 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1702 = (x1701 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1703 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 1), count._super), 0) * inv_0(x1702));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1704 = (((x1690 + x1695) + x1698) + x1703);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1704);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1705 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1706 = (((x1705 * (x1699 * x1702)) - (x1700 * x1702)) - ((x1694 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 0), count._super), 0)) * x1702));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1706 - (x1699 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1707 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1708 = (x1707 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1709 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 2), count._super), 0) * inv_0(x1708));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1710 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1711 = (x1710 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1712 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 3), count._super), 0) * inv_0(x1711));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1713 = (x1708 * x1711);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1714 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 2), count._super), 0) * x1711);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1715 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1716 = (x1715 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1717 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 0), count._super), 0) * inv_0(x1716));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1718 = (((x1704 + x1709) + x1712) + x1717);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1718);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1719 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1720 = (((x1719 * (x1713 * x1716)) - (x1714 * x1716)) - ((x1708 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 3), count._super), 0)) * x1716));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1720 - (x1713 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1721 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1722 = (x1721 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1723 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 1), count._super), 0) * inv_0(x1722));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1724 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1725 = (x1724 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1726 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 2), count._super), 0) * inv_0(x1725));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1727 = (x1722 * x1725);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1728 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 1), count._super), 0) * x1725);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1729 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1730 = (x1729 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1731 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 3), count._super), 0) * inv_0(x1730));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1732 = (((x1718 + x1723) + x1726) + x1731);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1732);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1733 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1734 = (((x1733 * (x1727 * x1730)) - (x1728 * x1730)) - ((x1722 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 2), count._super), 0)) * x1730));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1734 - (x1727 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1735 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1736 = (x1735 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1737 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.low16.arg.count._super), 0) * inv_0(x1736));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1738 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1739 = (x1738 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1740 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.high16.arg.count._super), 0) * inv_0(x1739));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1741 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.low16.arg.count._super), 0) * x1739);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), ((x1732 + x1737) + x1740));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1742 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1743 = (((x1742 * (x1736 * x1739)) - x1741) - (x1736 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1743, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x1744 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x1744, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 9), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1745 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1746 = (x1745 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1747 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg1.count._super), 0) * inv_0(x1746));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1748 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1747);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1749 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1750 = (x1749 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1751 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg2.count._super), 0) * inv_0(x1750));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1752 = (x1746 * x1750);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1753 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg1.count._super), 0) * x1750);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1754 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), addr._super), 0));
ExtVal x1755 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), cycle._super), 0));
ExtVal x1756 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), dataLow._super), 0));
ExtVal x1757 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1758 = (((x1754 + x1755) + x1756) + x1757);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1759 = (x1758 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1760 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), count._super), 0) * inv_0(x1759));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1761 = ((x1748 + x1751) + x1760);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1761);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1762 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1763 = (((x1762 * (x1752 * x1759)) - (x1753 * x1759)) - ((x1746 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg2.count._super), 0)) * x1759));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1763 - (x1752 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1764 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), addr._super), 0));
ExtVal x1765 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), cycle._super), 0));
ExtVal x1766 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), dataLow._super), 0));
ExtVal x1767 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1768 = (((x1764 + x1765) + x1766) + x1767);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1769 = (x1768 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1770 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), count._super), 0) * inv_0(x1769));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1771 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), addr._super), 0));
ExtVal x1772 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), cycle._super), 0));
ExtVal x1773 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), dataLow._super), 0));
ExtVal x1774 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1775 = (((x1771 + x1772) + x1773) + x1774);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1776 = (x1775 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1777 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), count._super), 0) * inv_0(x1776));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1778 = (x1769 * x1776);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1779 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), count._super), 0) * x1776);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1780 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), addr._super), 0));
ExtVal x1781 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), cycle._super), 0));
ExtVal x1782 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), dataLow._super), 0));
ExtVal x1783 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1784 = (((x1780 + x1781) + x1782) + x1783);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1785 = (x1784 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1786 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), count._super), 0) * inv_0(x1785));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1787 = (((x1761 + x1770) + x1777) + x1786);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1787);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1788 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1789 = (((x1788 * (x1778 * x1785)) - (x1779 * x1785)) - ((x1769 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), count._super), 0)) * x1785));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1789 - (x1778 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1790 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), addr._super), 0));
ExtVal x1791 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), cycle._super), 0));
ExtVal x1792 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), dataLow._super), 0));
ExtVal x1793 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1794 = (((x1790 + x1791) + x1792) + x1793);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1795 = (x1794 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1796 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), count._super), 0) * inv_0(x1795));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1797 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), addr._super), 0));
ExtVal x1798 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), cycle._super), 0));
ExtVal x1799 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), dataLow._super), 0));
ExtVal x1800 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1801 = (((x1797 + x1798) + x1799) + x1800);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1802 = (x1801 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1803 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), count._super), 0) * inv_0(x1802));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1804 = (x1795 * x1802);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1805 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), count._super), 0) * x1802);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1806 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), addr._super), 0));
ExtVal x1807 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), cycle._super), 0));
ExtVal x1808 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), dataLow._super), 0));
ExtVal x1809 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1810 = (((x1806 + x1807) + x1808) + x1809);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1811 = (x1810 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1812 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), count._super), 0) * inv_0(x1811));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1813 = (((x1787 + x1796) + x1803) + x1812);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1813);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1814 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1815 = (((x1814 * (x1804 * x1811)) - (x1805 * x1811)) - ((x1795 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), count._super), 0)) * x1811));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1815 - (x1804 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1816 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), addr._super), 0));
ExtVal x1817 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), cycle._super), 0));
ExtVal x1818 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), dataLow._super), 0));
ExtVal x1819 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1820 = (((x1816 + x1817) + x1818) + x1819);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1821 = (x1820 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1822 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), count._super), 0) * inv_0(x1821));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1823 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), addr._super), 0));
ExtVal x1824 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), cycle._super), 0));
ExtVal x1825 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), dataLow._super), 0));
ExtVal x1826 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1827 = (((x1823 + x1824) + x1825) + x1826);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1828 = (x1827 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1829 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), count._super), 0) * inv_0(x1828));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1830 = (x1821 * x1828);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1831 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), count._super), 0) * x1828);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1832 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), addr._super), 0));
ExtVal x1833 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), cycle._super), 0));
ExtVal x1834 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), dataLow._super), 0));
ExtVal x1835 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1836 = (((x1832 + x1833) + x1834) + x1835);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1837 = (x1836 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1838 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), count._super), 0) * inv_0(x1837));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1839 = (((x1813 + x1822) + x1829) + x1838);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1839);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1840 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1841 = (((x1840 * (x1830 * x1837)) - (x1831 * x1837)) - ((x1821 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), count._super), 0)) * x1837));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1841 - (x1830 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1842 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), addr._super), 0));
ExtVal x1843 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), cycle._super), 0));
ExtVal x1844 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), dataLow._super), 0));
ExtVal x1845 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1846 = (((x1842 + x1843) + x1844) + x1845);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1847 = (x1846 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1848 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), count._super), 0) * inv_0(x1847));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1849 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), addr._super), 0));
ExtVal x1850 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), cycle._super), 0));
ExtVal x1851 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), dataLow._super), 0));
ExtVal x1852 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1853 = (((x1849 + x1850) + x1851) + x1852);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1854 = (x1853 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1855 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), count._super), 0) * inv_0(x1854));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1856 = (x1847 * x1854);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1857 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), count._super), 0) * x1854);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1858 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), addr._super), 0));
ExtVal x1859 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), cycle._super), 0));
ExtVal x1860 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), dataLow._super), 0));
ExtVal x1861 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1862 = (((x1858 + x1859) + x1860) + x1861);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1863 = (x1862 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1864 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), count._super), 0) * inv_0(x1863));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1865 = (((x1839 + x1848) + x1855) + x1864);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1865);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1866 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1867 = (((x1866 * (x1856 * x1863)) - (x1857 * x1863)) - ((x1847 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), count._super), 0)) * x1863));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1867 - (x1856 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1868 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), addr._super), 0));
ExtVal x1869 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), cycle._super), 0));
ExtVal x1870 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), dataLow._super), 0));
ExtVal x1871 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1872 = (((x1868 + x1869) + x1870) + x1871);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1873 = (x1872 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1874 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), count._super), 0) * inv_0(x1873));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1875 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), addr._super), 0));
ExtVal x1876 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), cycle._super), 0));
ExtVal x1877 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), dataLow._super), 0));
ExtVal x1878 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1879 = (((x1875 + x1876) + x1877) + x1878);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1880 = (x1879 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1881 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), count._super), 0) * inv_0(x1880));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1882 = (x1873 * x1880);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1883 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), count._super), 0) * x1880);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1884 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), addr._super), 0));
ExtVal x1885 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), cycle._super), 0));
ExtVal x1886 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), dataLow._super), 0));
ExtVal x1887 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1888 = (((x1884 + x1885) + x1886) + x1887);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1889 = (x1888 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1890 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), count._super), 0) * inv_0(x1889));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1891 = (((x1865 + x1874) + x1881) + x1890);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1891);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1892 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1893 = (((x1892 * (x1882 * x1889)) - (x1883 * x1889)) - ((x1873 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), count._super), 0)) * x1889));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1893 - (x1882 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1894 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1895 = (x1894 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1896 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 0), count._super), 0) * inv_0(x1895));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1897 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1898 = (x1897 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1899 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 1), count._super), 0) * inv_0(x1898));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1900 = (x1895 * x1898);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1901 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 0), count._super), 0) * x1898);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1902 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1903 = (x1902 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1904 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 2), count._super), 0) * inv_0(x1903));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1905 = (((x1891 + x1896) + x1899) + x1904);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1905);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1906 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1907 = (((x1906 * (x1900 * x1903)) - (x1901 * x1903)) - ((x1895 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 1), count._super), 0)) * x1903));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1907 - (x1900 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1908 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1909 = (x1908 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1910 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 3), count._super), 0) * inv_0(x1909));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1911 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1912 = (x1911 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1913 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 4), count._super), 0) * inv_0(x1912));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1914 = (x1909 * x1912);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1915 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 3), count._super), 0) * x1912);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1916 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 5), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1917 = (x1916 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1918 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 5), count._super), 0) * inv_0(x1917));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1919 = (((x1905 + x1910) + x1913) + x1918);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1919);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1920 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1921 = (((x1920 * (x1914 * x1917)) - (x1915 * x1917)) - ((x1909 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 4), count._super), 0)) * x1917));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1921 - (x1914 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 5), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1922 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 6), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1923 = (x1922 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1924 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 6), count._super), 0) * inv_0(x1923));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1925 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 7), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1926 = (x1925 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1927 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 7), count._super), 0) * inv_0(x1926));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1928 = (x1923 * x1926);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1929 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 6), count._super), 0) * x1926);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1930 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1931 = (x1930 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1932 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 0), count._super), 0) * inv_0(x1931));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1933 = (((x1919 + x1924) + x1927) + x1932);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x1933);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1934 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1935 = (((x1934 * (x1928 * x1931)) - (x1929 * x1931)) - ((x1923 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 7), count._super), 0)) * x1931));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1935 - (x1928 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1936 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1937 = (x1936 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1938 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 1), count._super), 0) * inv_0(x1937));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1939 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1940 = (x1939 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1941 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 2), count._super), 0) * inv_0(x1940));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1942 = (x1937 * x1940);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1943 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 1), count._super), 0) * x1940);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1944 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1945 = (x1944 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1946 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 3), count._super), 0) * inv_0(x1945));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1947 = (((x1933 + x1938) + x1941) + x1946);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x1947);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1948 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1949 = (((x1948 * (x1942 * x1945)) - (x1943 * x1945)) - ((x1937 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 2), count._super), 0)) * x1945));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1949 - (x1942 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1950 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1951 = (x1950 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1952 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 4), count._super), 0) * inv_0(x1951));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1953 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1954 = (x1953 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1955 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 5), count._super), 0) * inv_0(x1954));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1956 = (x1951 * x1954);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1957 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 4), count._super), 0) * x1954);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1958 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1959 = (x1958 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1960 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 6), count._super), 0) * inv_0(x1959));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1961 = (((x1947 + x1952) + x1955) + x1960);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x1961);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1962 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1963 = (((x1962 * (x1956 * x1959)) - (x1957 * x1959)) - ((x1951 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 5), count._super), 0)) * x1959));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1963 - (x1956 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1964 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1965 = (x1964 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1966 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 7), count._super), 0) * inv_0(x1965));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1967 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1968 = (x1967 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1969 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 8), count._super), 0) * inv_0(x1968));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1970 = (x1965 * x1968);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1971 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 7), count._super), 0) * x1968);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1972 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1973 = (x1972 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1974 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 9), count._super), 0) * inv_0(x1973));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1975 = (((x1961 + x1966) + x1969) + x1974);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x1975);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1976 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1977 = (((x1976 * (x1970 * x1973)) - (x1971 * x1973)) - ((x1965 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 8), count._super), 0)) * x1973));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1977 - (x1970 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1978 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1979 = (x1978 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1980 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 10), count._super), 0) * inv_0(x1979));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1981 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1982 = (x1981 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1983 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 11), count._super), 0) * inv_0(x1982));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1984 = (x1979 * x1982);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1985 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 10), count._super), 0) * x1982);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1986 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1987 = (x1986 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1988 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 12), count._super), 0) * inv_0(x1987));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1989 = (((x1975 + x1980) + x1983) + x1988);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), x1989);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1990 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1991 = (((x1990 * (x1984 * x1987)) - (x1985 * x1987)) - ((x1979 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 11), count._super), 0)) * x1987));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1991 - (x1984 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1992 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1993 = (x1992 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1994 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 13), count._super), 0) * inv_0(x1993));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1995 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1996 = (x1995 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1997 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 14), count._super), 0) * inv_0(x1996));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1998 = (x1993 * x1996);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1999 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 13), count._super), 0) * x1996);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2000 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2001 = (x2000 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2002 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 15), count._super), 0) * inv_0(x2001));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2003 = (((x1989 + x1994) + x1997) + x2002);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), x2003);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2004 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2005 = (((x2004 * (x1998 * x2001)) - (x1999 * x2001)) - ((x1993 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 14), count._super), 0)) * x2001));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2005 - (x1998 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2006 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 16), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2007 = (x2006 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2008 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 16), count._super), 0) * inv_0(x2007));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2009 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 17), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2010 = (x2009 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2011 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 17), count._super), 0) * inv_0(x2010));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2012 = (x2007 * x2010);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2013 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 16), count._super), 0) * x2010);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2014 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 18), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2015 = (x2014 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2016 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 18), count._super), 0) * inv_0(x2015));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2017 = (((x2003 + x2008) + x2011) + x2016);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), x2017);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2018 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2019 = (((x2018 * (x2012 * x2015)) - (x2013 * x2015)) - ((x2007 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 17), count._super), 0)) * x2015));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2019 - (x2012 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 18), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2020 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 19), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2021 = (x2020 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2022 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 19), count._super), 0) * inv_0(x2021));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2023 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 20), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2024 = (x2023 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2025 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 20), count._super), 0) * inv_0(x2024));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2026 = (x2021 * x2024);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2027 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 19), count._super), 0) * x2024);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2028 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 21), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2029 = (x2028 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2030 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 21), count._super), 0) * inv_0(x2029));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2031 = (((x2017 + x2022) + x2025) + x2030);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), x2031);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2032 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2033 = (((x2032 * (x2026 * x2029)) - (x2027 * x2029)) - ((x2021 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 20), count._super), 0)) * x2029));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2033 - (x2026 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 21), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2034 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 22), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2035 = (x2034 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2036 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 22), count._super), 0) * inv_0(x2035));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2037 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 23), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2038 = (x2037 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2039 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 23), count._super), 0) * inv_0(x2038));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2040 = (x2035 * x2038);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2041 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 22), count._super), 0) * x2038);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2042 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2043 = (x2042 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2044 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 0), count._super), 0) * inv_0(x2043));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2045 = (((x2031 + x2036) + x2039) + x2044);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), x2045);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2046 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2047 = (((x2046 * (x2040 * x2043)) - (x2041 * x2043)) - ((x2035 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 23), count._super), 0)) * x2043));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2047 - (x2040 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2048 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2049 = (x2048 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2050 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 1), count._super), 0) * inv_0(x2049));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), (x2045 + x2050));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2051 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2052 = ((x2051 * x2049) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 1), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x2052, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2053 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2053, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 10), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2054 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2055 = (x2054 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2056 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg1.count._super), 0) * inv_0(x2055));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2057 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x2056);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2058 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2059 = (x2058 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2060 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg2.count._super), 0) * inv_0(x2059));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2061 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg1.count._super), 0) * x2059);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), (x2057 + x2060));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2062 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2063 = (((x2062 * (x2055 * x2059)) - x2061) - (x2055 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg2.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x2063, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2064 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2064, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 11), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2065 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2066 = (x2065 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2067 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg1.count._super), 0) * inv_0(x2066));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2068 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x2067);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2069 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2070 = (x2069 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2071 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg2.count._super), 0) * inv_0(x2070));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2072 = (x2066 * x2070);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2073 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg1.count._super), 0) * x2070);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2074 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), addr._super), 0));
ExtVal x2075 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), cycle._super), 0));
ExtVal x2076 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), dataLow._super), 0));
ExtVal x2077 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2078 = (((x2074 + x2075) + x2076) + x2077);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2079 = (x2078 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2080 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), count._super), 0) * inv_0(x2079));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2081 = ((x2068 + x2071) + x2080);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x2081);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2082 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2083 = (((x2082 * (x2072 * x2079)) - (x2073 * x2079)) - ((x2066 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg2.count._super), 0)) * x2079));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2083 - (x2072 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2084 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), addr._super), 0));
ExtVal x2085 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), cycle._super), 0));
ExtVal x2086 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), dataLow._super), 0));
ExtVal x2087 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2088 = (((x2084 + x2085) + x2086) + x2087);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2089 = (x2088 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2090 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), count._super), 0) * inv_0(x2089));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2091 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), addr._super), 0));
ExtVal x2092 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), cycle._super), 0));
ExtVal x2093 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), dataLow._super), 0));
ExtVal x2094 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2095 = (((x2091 + x2092) + x2093) + x2094);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2096 = (x2095 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2097 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), count._super), 0) * inv_0(x2096));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2098 = (x2089 * x2096);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2099 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), count._super), 0) * x2096);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2100 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), addr._super), 0));
ExtVal x2101 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), cycle._super), 0));
ExtVal x2102 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), dataLow._super), 0));
ExtVal x2103 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2104 = (((x2100 + x2101) + x2102) + x2103);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2105 = (x2104 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2106 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), count._super), 0) * inv_0(x2105));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2107 = (((x2081 + x2090) + x2097) + x2106);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x2107);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2108 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2109 = (((x2108 * (x2098 * x2105)) - (x2099 * x2105)) - ((x2089 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), count._super), 0)) * x2105));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2109 - (x2098 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2110 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), addr._super), 0));
ExtVal x2111 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), cycle._super), 0));
ExtVal x2112 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), dataLow._super), 0));
ExtVal x2113 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2114 = (((x2110 + x2111) + x2112) + x2113);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2115 = (x2114 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2116 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), count._super), 0) * inv_0(x2115));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2117 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), addr._super), 0));
ExtVal x2118 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), cycle._super), 0));
ExtVal x2119 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), dataLow._super), 0));
ExtVal x2120 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2121 = (((x2117 + x2118) + x2119) + x2120);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2122 = (x2121 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2123 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), count._super), 0) * inv_0(x2122));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2124 = (x2115 * x2122);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2125 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), count._super), 0) * x2122);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2126 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), addr._super), 0));
ExtVal x2127 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), cycle._super), 0));
ExtVal x2128 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), dataLow._super), 0));
ExtVal x2129 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2130 = (((x2126 + x2127) + x2128) + x2129);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2131 = (x2130 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2132 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), count._super), 0) * inv_0(x2131));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2133 = (((x2107 + x2116) + x2123) + x2132);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x2133);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2134 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2135 = (((x2134 * (x2124 * x2131)) - (x2125 * x2131)) - ((x2115 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), count._super), 0)) * x2131));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2135 - (x2124 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2136 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), addr._super), 0));
ExtVal x2137 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), cycle._super), 0));
ExtVal x2138 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), dataLow._super), 0));
ExtVal x2139 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2140 = (((x2136 + x2137) + x2138) + x2139);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2141 = (x2140 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2142 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), count._super), 0) * inv_0(x2141));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2143 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), addr._super), 0));
ExtVal x2144 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), cycle._super), 0));
ExtVal x2145 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), dataLow._super), 0));
ExtVal x2146 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2147 = (((x2143 + x2144) + x2145) + x2146);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2148 = (x2147 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2149 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), count._super), 0) * inv_0(x2148));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2150 = (x2141 * x2148);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2151 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), count._super), 0) * x2148);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2152 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), addr._super), 0));
ExtVal x2153 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), cycle._super), 0));
ExtVal x2154 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), dataLow._super), 0));
ExtVal x2155 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2156 = (((x2152 + x2153) + x2154) + x2155);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2157 = (x2156 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2158 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), count._super), 0) * inv_0(x2157));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2159 = (((x2133 + x2142) + x2149) + x2158);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x2159);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2160 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2161 = (((x2160 * (x2150 * x2157)) - (x2151 * x2157)) - ((x2141 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), count._super), 0)) * x2157));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2161 - (x2150 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2162 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2163 = (x2162 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2164 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 0), count._super), 0) * inv_0(x2163));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2165 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2166 = (x2165 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2167 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 1), count._super), 0) * inv_0(x2166));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2168 = (x2163 * x2166);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2169 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 0), count._super), 0) * x2166);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2170 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2171 = (x2170 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2172 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 2), count._super), 0) * inv_0(x2171));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2173 = (((x2159 + x2164) + x2167) + x2172);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x2173);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2174 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2175 = (((x2174 * (x2168 * x2171)) - (x2169 * x2171)) - ((x2163 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 1), count._super), 0)) * x2171));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2175 - (x2168 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2176 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2177 = (x2176 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2178 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 3), count._super), 0) * inv_0(x2177));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2179 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2180 = (x2179 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2181 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 4), count._super), 0) * inv_0(x2180));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2182 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 3), count._super), 0) * x2180);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), ((x2173 + x2178) + x2181));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2183 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2184 = (((x2183 * (x2177 * x2180)) - x2182) - (x2177 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 4), count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x2184, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2185 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2185, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 12), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2186 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2187 = (x2186 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2188 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg1.count._super), 0) * inv_0(x2187));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2189 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x2188);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2190 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2191 = (x2190 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2192 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg2.count._super), 0) * inv_0(x2191));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2193 = (x2187 * x2191);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2194 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg1.count._super), 0) * x2191);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2195 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), addr._super), 0));
ExtVal x2196 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), cycle._super), 0));
ExtVal x2197 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), dataLow._super), 0));
ExtVal x2198 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2199 = (((x2195 + x2196) + x2197) + x2198);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2200 = (x2199 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2201 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), count._super), 0) * inv_0(x2200));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2202 = ((x2189 + x2192) + x2201);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x2202);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2203 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2204 = (((x2203 * (x2193 * x2200)) - (x2194 * x2200)) - ((x2187 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg2.count._super), 0)) * x2200));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2204 - (x2193 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2205 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), addr._super), 0));
ExtVal x2206 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), cycle._super), 0));
ExtVal x2207 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), dataLow._super), 0));
ExtVal x2208 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2209 = (((x2205 + x2206) + x2207) + x2208);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2210 = (x2209 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2211 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), count._super), 0) * inv_0(x2210));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2212 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), addr._super), 0));
ExtVal x2213 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), cycle._super), 0));
ExtVal x2214 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), dataLow._super), 0));
ExtVal x2215 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2216 = (((x2212 + x2213) + x2214) + x2215);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2217 = (x2216 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2218 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), count._super), 0) * inv_0(x2217));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2219 = (x2210 * x2217);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2220 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), count._super), 0) * x2217);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2221 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), addr._super), 0));
ExtVal x2222 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), cycle._super), 0));
ExtVal x2223 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), dataLow._super), 0));
ExtVal x2224 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2225 = (((x2221 + x2222) + x2223) + x2224);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2226 = (x2225 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2227 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), count._super), 0) * inv_0(x2226));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2228 = (((x2202 + x2211) + x2218) + x2227);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x2228);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2229 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2230 = (((x2229 * (x2219 * x2226)) - (x2220 * x2226)) - ((x2210 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), count._super), 0)) * x2226));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2230 - (x2219 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2231 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), addr._super), 0));
ExtVal x2232 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), cycle._super), 0));
ExtVal x2233 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), dataLow._super), 0));
ExtVal x2234 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2235 = (((x2231 + x2232) + x2233) + x2234);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2236 = (x2235 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2237 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), count._super), 0) * inv_0(x2236));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2238 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), addr._super), 0));
ExtVal x2239 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), cycle._super), 0));
ExtVal x2240 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), dataLow._super), 0));
ExtVal x2241 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2242 = (((x2238 + x2239) + x2240) + x2241);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2243 = (x2242 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2244 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), count._super), 0) * inv_0(x2243));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2245 = (x2236 * x2243);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2246 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), count._super), 0) * x2243);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2247 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), addr._super), 0));
ExtVal x2248 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), cycle._super), 0));
ExtVal x2249 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), dataLow._super), 0));
ExtVal x2250 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2251 = (((x2247 + x2248) + x2249) + x2250);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2252 = (x2251 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2253 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), count._super), 0) * inv_0(x2252));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2254 = (((x2228 + x2237) + x2244) + x2253);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x2254);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2255 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2256 = (((x2255 * (x2245 * x2252)) - (x2246 * x2252)) - ((x2236 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), count._super), 0)) * x2252));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2256 - (x2245 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2257 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), addr._super), 0));
ExtVal x2258 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), cycle._super), 0));
ExtVal x2259 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), dataLow._super), 0));
ExtVal x2260 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2261 = (((x2257 + x2258) + x2259) + x2260);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2262 = (x2261 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2263 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), count._super), 0) * inv_0(x2262));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2264 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), addr._super), 0));
ExtVal x2265 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), cycle._super), 0));
ExtVal x2266 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), dataLow._super), 0));
ExtVal x2267 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2268 = (((x2264 + x2265) + x2266) + x2267);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2269 = (x2268 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2270 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), count._super), 0) * inv_0(x2269));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2271 = (x2262 * x2269);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2272 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), count._super), 0) * x2269);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2273 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), addr._super), 0));
ExtVal x2274 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), cycle._super), 0));
ExtVal x2275 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), dataLow._super), 0));
ExtVal x2276 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2277 = (((x2273 + x2274) + x2275) + x2276);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2278 = (x2277 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2279 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), count._super), 0) * inv_0(x2278));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2280 = (((x2254 + x2263) + x2270) + x2279);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x2280);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2281 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2282 = (((x2281 * (x2271 * x2278)) - (x2272 * x2278)) - ((x2262 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), count._super), 0)) * x2278));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2282 - (x2271 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2283 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), addr._super), 0));
ExtVal x2284 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), cycle._super), 0));
ExtVal x2285 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), dataLow._super), 0));
ExtVal x2286 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2287 = (((x2283 + x2284) + x2285) + x2286);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2288 = (x2287 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2289 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), count._super), 0) * inv_0(x2288));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2290 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), addr._super), 0));
ExtVal x2291 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), cycle._super), 0));
ExtVal x2292 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), dataLow._super), 0));
ExtVal x2293 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2294 = (((x2290 + x2291) + x2292) + x2293);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2295 = (x2294 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2296 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), count._super), 0) * inv_0(x2295));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2297 = (x2288 * x2295);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2298 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), count._super), 0) * x2295);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2299 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2300 = (x2299 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2301 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 0), count._super), 0) * inv_0(x2300));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2302 = (((x2280 + x2289) + x2296) + x2301);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x2302);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2303 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2304 = (((x2303 * (x2297 * x2300)) - (x2298 * x2300)) - ((x2288 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), count._super), 0)) * x2300));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2304 - (x2297 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2305 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2306 = (x2305 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2307 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 1), count._super), 0) * inv_0(x2306));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2308 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2309 = (x2308 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2310 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 2), count._super), 0) * inv_0(x2309));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2311 = (x2306 * x2309);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2312 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 1), count._super), 0) * x2309);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2313 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2314 = (x2313 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2315 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 3), count._super), 0) * inv_0(x2314));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2316 = (((x2302 + x2307) + x2310) + x2315);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x2316);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2317 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2318 = (((x2317 * (x2311 * x2314)) - (x2312 * x2314)) - ((x2306 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 2), count._super), 0)) * x2314));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2318 - (x2311 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2319 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2320 = (x2319 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2321 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 4), count._super), 0) * inv_0(x2320));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2322 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 5), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2323 = (x2322 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2324 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 5), count._super), 0) * inv_0(x2323));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2325 = (x2320 * x2323);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2326 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 4), count._super), 0) * x2323);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2327 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2328 = (x2327 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2329 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 0), count._super), 0) * inv_0(x2328));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2330 = (((x2316 + x2321) + x2324) + x2329);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x2330);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2331 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2332 = (((x2331 * (x2325 * x2328)) - (x2326 * x2328)) - ((x2320 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 5), count._super), 0)) * x2328));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2332 - (x2325 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2333 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2334 = (x2333 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2335 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 1), count._super), 0) * inv_0(x2334));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2336 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2337 = (x2336 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2338 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 2), count._super), 0) * inv_0(x2337));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2339 = (x2334 * x2337);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2340 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 1), count._super), 0) * x2337);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2341 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2342 = (x2341 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2343 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 3), count._super), 0) * inv_0(x2342));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2344 = (((x2330 + x2335) + x2338) + x2343);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x2344);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2345 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2346 = (((x2345 * (x2339 * x2342)) - (x2340 * x2342)) - ((x2334 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 2), count._super), 0)) * x2342));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2346 - (x2339 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2347 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2348 = (x2347 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2349 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 4), count._super), 0) * inv_0(x2348));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2350 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2351 = (x2350 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2352 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 5), count._super), 0) * inv_0(x2351));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2353 = (x2348 * x2351);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2354 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 4), count._super), 0) * x2351);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2355 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2356 = (x2355 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2357 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 6), count._super), 0) * inv_0(x2356));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2358 = (((x2344 + x2349) + x2352) + x2357);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x2358);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2359 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2360 = (((x2359 * (x2353 * x2356)) - (x2354 * x2356)) - ((x2348 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 5), count._super), 0)) * x2356));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2360 - (x2353 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2361 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2362 = (x2361 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2363 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 7), count._super), 0) * inv_0(x2362));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2364 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2365 = (x2364 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2366 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 8), count._super), 0) * inv_0(x2365));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2367 = (x2362 * x2365);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2368 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 7), count._super), 0) * x2365);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2369 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2370 = (x2369 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2371 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 9), count._super), 0) * inv_0(x2370));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2372 = (((x2358 + x2363) + x2366) + x2371);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x2372);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2373 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2374 = (((x2373 * (x2367 * x2370)) - (x2368 * x2370)) - ((x2362 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 8), count._super), 0)) * x2370));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2374 - (x2367 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2375 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2376 = (x2375 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2377 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 10), count._super), 0) * inv_0(x2376));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2378 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2379 = (x2378 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2380 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 11), count._super), 0) * inv_0(x2379));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2381 = (x2376 * x2379);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2382 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 10), count._super), 0) * x2379);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2383 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2384 = (x2383 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2385 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 12), count._super), 0) * inv_0(x2384));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2386 = (((x2372 + x2377) + x2380) + x2385);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x2386);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2387 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2388 = (((x2387 * (x2381 * x2384)) - (x2382 * x2384)) - ((x2376 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 11), count._super), 0)) * x2384));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2388 - (x2381 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2389 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2390 = (x2389 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2391 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 13), count._super), 0) * inv_0(x2390));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2392 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2393 = (x2392 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2394 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 14), count._super), 0) * inv_0(x2393));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2395 = (x2390 * x2393);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2396 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 13), count._super), 0) * x2393);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2397 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2398 = (x2397 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2399 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 15), count._super), 0) * inv_0(x2398));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2400 = (((x2386 + x2391) + x2394) + x2399);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x2400);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2401 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2402 = (((x2401 * (x2395 * x2398)) - (x2396 * x2398)) - ((x2390 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 14), count._super), 0)) * x2398));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2402 - (x2395 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2403 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 16), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2404 = (x2403 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2405 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 16), count._super), 0) * inv_0(x2404));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2406 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 17), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2407 = (x2406 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2408 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 17), count._super), 0) * inv_0(x2407));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2409 = (x2404 * x2407);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2410 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 16), count._super), 0) * x2407);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2411 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2412 = (x2411 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2413 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 0), count._super), 0) * inv_0(x2412));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2414 = (((x2400 + x2405) + x2408) + x2413);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), x2414);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2415 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2416 = (((x2415 * (x2409 * x2412)) - (x2410 * x2412)) - ((x2404 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 17), count._super), 0)) * x2412));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2416 - (x2409 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2417 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2418 = (x2417 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2419 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 1), count._super), 0) * inv_0(x2418));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2420 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2421 = (x2420 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2422 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 2), count._super), 0) * inv_0(x2421));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2423 = (x2418 * x2421);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2424 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 1), count._super), 0) * x2421);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2425 = (LOAD_EXT(LAYOUT_LOOKUP(x4, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2426 = (x2425 + LOAD_EXT(LAYOUT_LOOKUP(x4, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2427 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 3), count._super), 0) * inv_0(x2426));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2428 = (((x2414 + x2419) + x2422) + x2427);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), x2428);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2429 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2430 = (((x2429 * (x2423 * x2426)) - (x2424 * x2426)) - ((x2418 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 2), count._super), 0)) * x2426));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2430 - (x2423 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), x2428);
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2431 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2431, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x8 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x7;
}
void step_TopAccum(ExecContext& ctx,MutableBuf accum0, MutableBuf data1, GlobalBuf global2, GlobalBuf mix3)   {
// zirgen/dsl/passes/GenerateAccum.cpp:525
BoundLayout<TopLayout> x4 = BIND_LAYOUT(kLayout_Top, data1);
BoundLayout<LayoutAccumLayout> x5 = BIND_LAYOUT(kLayout_TopAccum, accum0);
ComponentStruct x6 = exec_TopAccum(ctx,x4, x5, global2, mix3);
return ;
}

} // namespace risc0::circuit::rv32im_v2::cpu
