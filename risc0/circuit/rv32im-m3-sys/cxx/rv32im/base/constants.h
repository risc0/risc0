// Copyright 2025 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0, <LICENSE-APACHE or
// http://apache.org/licenses/LICENSE-2.0> or the MIT license <LICENSE-MIT or
// http://opensource.org/licenses/MIT>, at your option. This file may not be
// copied, modified, or distributed except according to those terms.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0 OR MIT

#pragma once

#if !defined(METAL)
#include <cstdint>
#endif

#ifndef CONSTANT
#define CONSTANT constexpr
#endif

CONSTANT uint32_t RV32IM_SEAL_VERSION = 3;
CONSTANT uint32_t RV32IM_CIRCUIT_VERSION = 3;

// Platform specific constants
CONSTANT uint64_t PAGE_SIZE_BYTES = 1024;
CONSTANT uint64_t MEMORY_SIZE_BYTES = uint64_t(1) << 32;

CONSTANT uint64_t PAGE_SIZE_WORDS = PAGE_SIZE_BYTES / 4;
CONSTANT uint64_t MEMORY_SIZE_WORDS = MEMORY_SIZE_BYTES / 4;
CONSTANT uint64_t MEMORY_SIZE_PAGES = MEMORY_SIZE_BYTES / PAGE_SIZE_BYTES;

CONSTANT uint32_t ZERO_PAGE_START_ADDR = 0x0;
CONSTANT uint32_t ZERO_PAGE_START_WORD = ZERO_PAGE_START_ADDR / 4;
CONSTANT uint32_t ZERO_PAGE_END_ADDR = 0x10000;
CONSTANT uint32_t ZERO_PAGE_END_WORD = ZERO_PAGE_END_ADDR / 4;
CONSTANT uint32_t USER_START_ADDR = 0x10000;
CONSTANT uint32_t USER_START_WORD = USER_START_ADDR / 4;
CONSTANT uint32_t USER_END_ADDR = 0xc0000000;
CONSTANT uint32_t USER_END_WORD = USER_END_ADDR / 4;
CONSTANT uint32_t KERNEL_START_ADDR = 0xc0000000;
CONSTANT uint32_t KERNEL_START_WORD = KERNEL_START_ADDR / 4;
CONSTANT uint32_t KERNEL_END_ADDR = 0xff000000;
CONSTANT uint32_t KERNEL_END_WORD = KERNEL_END_ADDR / 4;

CONSTANT uint32_t MACHINE_REGS_ADDR = 0xffff0000;
CONSTANT uint32_t MACHINE_REGS_WORD = MACHINE_REGS_ADDR / 4;
CONSTANT uint32_t USER_REGS_ADDR = 0xffff0080;
CONSTANT uint32_t USER_REGS_WORD = USER_REGS_ADDR / 4;
CONSTANT uint32_t MEPC_ADDR = 0xffff0200;
CONSTANT uint32_t MEPC_WORD = MEPC_ADDR / 4;
CONSTANT uint32_t SUSPEND_PC_ADDR = 0xffff0210;
CONSTANT uint32_t SUSPEND_PC_WORD = SUSPEND_PC_ADDR / 4;
CONSTANT uint32_t SUSPEND_MODE_ADDR = 0xffff0214;
CONSTANT uint32_t SUSPEND_MODE_WORD = SUSPEND_MODE_ADDR / 4;
CONSTANT uint32_t SUSPEND_CYCLE_LOW_ADDR = 0xffff0218;
CONSTANT uint32_t SUSPEND_CYCLE_LOW_WORD = SUSPEND_CYCLE_LOW_ADDR / 4;
CONSTANT uint32_t SUSPEND_CYCLE_HIGH_ADDR = 0xffff021c;
CONSTANT uint32_t SUSPEND_CYCLE_HIGH_WORD = SUSPEND_CYCLE_HIGH_ADDR / 4;
CONSTANT uint32_t OUTPUT_ADDR = 0xffff0240;
CONSTANT uint32_t OUTPUT_WORD = OUTPUT_ADDR / 4;
CONSTANT uint32_t INPUT_ADDR = 0xffff0260;
CONSTANT uint32_t INPUT_WORD = INPUT_ADDR / 4;
CONSTANT uint32_t RV32IM_VERSION_ADDR = 0xffff0300;
CONSTANT uint32_t RV32IM_VERSION_WORD = RV32IM_VERSION_ADDR / 4;

CONSTANT uint32_t ECALL_DISPATCH_ADDR = 0xffff1000;
CONSTANT uint32_t ECALL_DISPATCH_WORD = ECALL_DISPATCH_ADDR / 4;
CONSTANT uint32_t TRAP_DISPATCH_ADDR = 0xffff2000;
CONSTANT uint32_t TRAP_DISPATCH_WORD = TRAP_DISPATCH_ADDR / 4;

CONSTANT uint32_t COMPRESSED_INST_LOOKUP_ADDR = 0xfff80000;
CONSTANT uint32_t COMPRESSED_INST_LOOKUP_WORD = COMPRESSED_INST_LOOKUP_ADDR / 4;

CONSTANT uint32_t REG_ZERO = 0;
CONSTANT uint32_t REG_RA = 1;
CONSTANT uint32_t REG_SP = 2;
CONSTANT uint32_t REG_GP = 3;
CONSTANT uint32_t REG_TP = 4;
CONSTANT uint32_t REG_T0 = 5;
CONSTANT uint32_t REG_T1 = 6;
CONSTANT uint32_t REG_T2 = 7;
CONSTANT uint32_t REG_S0 = 8;
CONSTANT uint32_t REG_FP = 8;
CONSTANT uint32_t REG_S1 = 9;
CONSTANT uint32_t REG_A0 = 10;
CONSTANT uint32_t REG_A1 = 11;
CONSTANT uint32_t REG_A2 = 12;
CONSTANT uint32_t REG_A3 = 13;
CONSTANT uint32_t REG_A4 = 14;
CONSTANT uint32_t REG_A5 = 15;
CONSTANT uint32_t REG_A6 = 16;
CONSTANT uint32_t REG_A7 = 17;
CONSTANT uint32_t REG_S2 = 18;
CONSTANT uint32_t REG_S3 = 19;
CONSTANT uint32_t REG_S4 = 20;
CONSTANT uint32_t REG_S5 = 21;
CONSTANT uint32_t REG_S6 = 22;
CONSTANT uint32_t REG_S7 = 23;
CONSTANT uint32_t REG_S8 = 24;
CONSTANT uint32_t REG_S9 = 25;
CONSTANT uint32_t REG_S10 = 26;
CONSTANT uint32_t REG_S11 = 27;
CONSTANT uint32_t REG_T3 = 28;
CONSTANT uint32_t REG_T4 = 29;
CONSTANT uint32_t REG_T5 = 30;
CONSTANT uint32_t REG_T6 = 31;

CONSTANT uint32_t HOST_ECALL_TERMINATE = 0;
CONSTANT uint32_t HOST_ECALL_READ = 1;
CONSTANT uint32_t HOST_ECALL_WRITE = 2;
CONSTANT uint32_t HOST_ECALL_POSEIDON2 = 3;
CONSTANT uint32_t HOST_ECALL_SHA2 = 4;
CONSTANT uint32_t HOST_ECALL_BIGINT = 5;

CONSTANT uint32_t PFLAG_IS_ELEM = 0x80000000;
CONSTANT uint32_t PFLAG_CHECK_OUT = 0x40000000;

CONSTANT uint32_t ACCUM_MIX_SIZE = 50;
CONSTANT uint32_t ACCUM_BIGINT_Z = 49;

CONSTANT uint32_t MAX_ACCUM_PER_ROW = 148;
