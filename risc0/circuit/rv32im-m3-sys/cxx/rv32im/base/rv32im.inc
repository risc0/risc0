// Copyright 2025 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ENTRY(<name>, <idx>, <opcode>, <immType>, <func3>, <func7>, <params>...)
// Use XF3 and XF7 for "don't care" f3/f7
ENTRY(ADD, 0, 0b0110011, R, 0, 0x00, INST_REG, OUT_0, UNIT_ADDSUB, AS_ADD)
ENTRY(SUB, 1, 0b0110011, R, 0, 0x20, INST_REG, OUT_0, UNIT_ADDSUB, AS_SUB)
ENTRY(XOR, 2, 0b0110011, R, 4, 0x00, INST_REG, OUT_0, UNIT_BIT, BIT_XOR)
ENTRY(OR, 3, 0b0110011, R, 6, 0x00, INST_REG, OUT_0, UNIT_BIT, BIT_OR)
ENTRY(AND, 4, 0b0110011, R, 7, 0x00, INST_REG, OUT_0, UNIT_BIT, BIT_AND)
ENTRY(SLL, 5, 0b0110011, R, 1, 0x00, INST_REG, OUT_0, UNIT_SHIFT, SHIFT_LL)
ENTRY(SRL, 6, 0b0110011, R, 5, 0x00, INST_REG, OUT_0, UNIT_SHIFT, SHIFT_RL)
ENTRY(SRA, 7, 0b0110011, R, 5, 0x20, INST_REG, OUT_0, UNIT_SHIFT, SHIFT_RA)
ENTRY(SLT, 8, 0b0110011, R, 2, 0x00, INST_REG, OUT_0, UNIT_LT)
ENTRY(SLTU, 9, 0b0110011, R, 3, 0x00, INST_REG, OUT_1, UNIT_LT)
ENTRY(ADDI, 10, 0b0010011, I, 0, XF7, INST_IMM, OUT_0, UNIT_ADDSUB, AS_ADD)
ENTRY(XORI, 11, 0b0010011, I, 4, XF7, INST_IMM, OUT_0, UNIT_BIT, BIT_XOR)
ENTRY(ORI, 12, 0b0010011, I, 6, XF7, INST_IMM, OUT_0, UNIT_BIT, BIT_OR)
ENTRY(ANDI, 13, 0b0010011, I, 7, XF7, INST_IMM, OUT_0, UNIT_BIT, BIT_AND)
ENTRY(SLLI, 14, 0b0010011, IL, 1, 0x00, INST_IMM, OUT_0, UNIT_SHIFT, SHIFT_LL)
ENTRY(SRLI, 15, 0b0010011, IL, 5, 0x00, INST_IMM, OUT_0, UNIT_SHIFT, SHIFT_RL)
ENTRY(SRAI, 16, 0b0010011, IL, 5, 0x20, INST_IMM, OUT_0, UNIT_SHIFT, SHIFT_RA)
ENTRY(SLTI, 17, 0b0010011, I, 2, XF7, INST_IMM, OUT_0, UNIT_LT)
ENTRY(SLTIU, 18, 0b0010011, I, 3, XF7, INST_IMM, OUT_1, UNIT_LT)
ENTRY(LB, 19, 0b0000011, I, 0, XF7, INST_LOAD, LOAD_LB)
ENTRY(LH, 20, 0b0000011, I, 1, XF7, INST_LOAD, LOAD_LH)
ENTRY(LW, 21, 0b0000011, I, 2, XF7, INST_LOAD, LOAD_LW)
ENTRY(LBU, 22, 0b0000011, I, 4, XF7, INST_LOAD, LOAD_LBU)
ENTRY(LHU, 23, 0b0000011, I, 5, XF7, INST_LOAD, LOAD_LHU)
ENTRY(SB, 24, 0b0100011, S, 0, XF7, INST_STORE, STORE_SB)
ENTRY(SH, 25, 0b0100011, S, 1, XF7, INST_STORE, STORE_SH)
ENTRY(SW, 26, 0b0100011, S, 2, XF7, INST_STORE, STORE_SW)
ENTRY(BEQ, 27, 0b1100011, B, 0, XF7, INST_BRANCH, BR_Z, OUT_0, UNIT_ADDSUB, AS_SUB)
ENTRY(BNE, 28, 0b1100011, B, 1, XF7, INST_BRANCH, BR_NZ, OUT_0, UNIT_ADDSUB, AS_SUB)
ENTRY(BLT, 29, 0b1100011, B, 4, XF7, INST_BRANCH, BR_NZ, OUT_0, UNIT_LT)
ENTRY(BGE, 30, 0b1100011, B, 5, XF7, INST_BRANCH, BR_Z, OUT_0, UNIT_LT)
ENTRY(BLTU, 31, 0b1100011, B, 6, XF7, INST_BRANCH, BR_NZ, OUT_1, UNIT_LT)
ENTRY(BGEU, 32, 0b1100011, B, 7, XF7, INST_BRANCH, BR_Z, OUT_1, UNIT_LT)
ENTRY(JAL, 33, 0b1101111, J, XF3, XF7, INST_JAL)
ENTRY(JALR, 34, 0b1100111, I, 0, XF7, INST_JALR)
ENTRY(LUI, 35, 0b0110111, U, XF3, XF7, INST_LUI)
ENTRY(AUIPC, 36, 0b0010111, U, XF3, XF7, INST_AUIPC)
ENTRY(MUL, 37, 0b0110011, R, 0, 0x01, INST_REG, OUT_0, UNIT_MUL, MUL_SS)
ENTRY(MULH, 38, 0b0110011, R, 1, 0x01, INST_REG, OUT_1, UNIT_MUL, MUL_SS)
ENTRY(MULHSU, 39, 0b0110011, R, 2, 0x01, INST_REG, OUT_1, UNIT_MUL, MUL_SU)
ENTRY(MULHU, 40, 0b0110011, R, 3, 0x01, INST_REG, OUT_1, UNIT_MUL, MUL_UU)
ENTRY(DIV, 41, 0b0110011, R, 4, 0x01, INST_REG, OUT_0, UNIT_DIV, DIV_S)
ENTRY(DIVU, 42, 0b0110011, R, 5, 0x01, INST_REG, OUT_0, UNIT_DIV, DIV_U)
ENTRY(REM, 43, 0b0110011, R, 6, 0x01, INST_REG, OUT_1, UNIT_DIV, DIV_S)
ENTRY(REMU, 44, 0b0110011, R, 7, 0x01, INST_REG, OUT_1, UNIT_DIV, DIV_U)
ENTRY(ECALL, 45, 0b1110011, I, 0, 0x00, INST_ECALL)
ENTRY(MRET, 46, 0b1110011, I, 0, 0x18, INST_MRET)
