// Copyright 2025 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0, <LICENSE-APACHE or
// http://apache.org/licenses/LICENSE-2.0> or the MIT license <LICENSE-MIT or
// http://opensource.org/licenses/MIT>, at your option. This file may not be
// copied, modified, or distributed except according to those terms.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0 OR MIT

// This file is @generated by prost-build.
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct SemanticVersion {
    #[prost(uint64, tag = "1")]
    pub major: u64,
    #[prost(uint64, tag = "2")]
    pub minor: u64,
    #[prost(uint64, tag = "3")]
    pub patch: u64,
    #[prost(string, tag = "4")]
    pub pre: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub build: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct CompatVersion {
    #[prost(uint32, tag = "1")]
    pub value: u32,
}
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct Digest {
    #[prost(uint32, repeated, tag = "1")]
    pub words: ::prost::alloc::vec::Vec<u32>,
}
#[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ExitCode {
    #[prost(oneof = "exit_code::Kind", tags = "1, 2, 3, 4")]
    pub kind: ::core::option::Option<exit_code::Kind>,
}
/// Nested message and enum types in `ExitCode`.
pub mod exit_code {
    #[derive(Clone, Copy, PartialEq, Eq, Hash, ::prost::Oneof)]
    pub enum Kind {
        #[prost(uint32, tag = "1")]
        Halted(u32),
        #[prost(uint32, tag = "2")]
        Paused(u32),
        #[prost(message, tag = "3")]
        SystemSplit(()),
        #[prost(message, tag = "4")]
        SessionLimit(()),
    }
}
